var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2067";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null)
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__14364__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args))
    };
    var G__14364 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14364__delegate.call(this, args)
    };
    G__14364.cljs$lang$maxFixedArity = 0;
    G__14364.cljs$lang$applyTo = function(arglist__14365) {
      var args = cljs.core.seq(arglist__14365);
      return G__14364__delegate(args)
    };
    G__14364.cljs$core$IFn$_invoke$arity$variadic = G__14364__delegate;
    return G__14364
  }()
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__9129__auto__ = ty;
    if(cljs.core.truth_(and__9129__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__9129__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4092__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4092__auto__)) {
    var s = temp__4092__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__9959__auto___14366 = len;
  var i_14367 = 0;
  while(true) {
    if(i_14367 < n__9959__auto___14366) {
      new_arr[i_14367] = arr[i_14367];
      var G__14368 = i_14367 + 1;
      i_14367 = G__14368;
      continue
    }else {
    }
    break
  }
  return new_arr
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__14369__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__14369 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14369__delegate.call(this, array, i, idxs)
    };
    G__14369.cljs$lang$maxFixedArity = 2;
    G__14369.cljs$lang$applyTo = function(arglist__14370) {
      var array = cljs.core.first(arglist__14370);
      arglist__14370 = cljs.core.next(arglist__14370);
      var i = cljs.core.first(arglist__14370);
      var idxs = cljs.core.rest(arglist__14370);
      return G__14369__delegate(array, i, idxs)
    };
    G__14369.cljs$core$IFn$_invoke$arity$variadic = G__14369__delegate;
    return G__14369
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__14371__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__14371 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14371__delegate.call(this, array, idx, idx2, idxv)
    };
    G__14371.cljs$lang$maxFixedArity = 3;
    G__14371.cljs$lang$applyTo = function(arglist__14372) {
      var array = cljs.core.first(arglist__14372);
      arglist__14372 = cljs.core.next(arglist__14372);
      var idx = cljs.core.first(arglist__14372);
      arglist__14372 = cljs.core.next(arglist__14372);
      var idx2 = cljs.core.first(arglist__14372);
      var idxv = cljs.core.rest(arglist__14372);
      return G__14371__delegate(array, idx, idx2, idxv)
    };
    G__14371.cljs$core$IFn$_invoke$arity$variadic = G__14371__delegate;
    return G__14371
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = function() {
  var obj14374 = {};
  return obj14374
}();
cljs.core.IFn = function() {
  var obj14376 = {};
  return obj14376
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__9129__auto__ = this$;
      if(and__9129__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__9129__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__9739__auto__ = this$ == null ? null : this$;
      return function() {
        var or__9141__auto__ = cljs.core._invoke[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._invoke["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = function() {
  var obj14378 = {};
  return obj14378
}();
cljs.core._count = function _count(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._count[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._count["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj14380 = {};
  return obj14380
}();
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._empty[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._empty["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = function() {
  var obj14382 = {};
  return obj14382
}();
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._conj[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._conj["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = function() {
  var obj14384 = {};
  return obj14384
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__9129__auto__ = coll;
      if(and__9129__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__9129__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__9739__auto__ = coll == null ? null : coll;
      return function() {
        var or__9141__auto__ = cljs.core._nth[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._nth["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__9129__auto__ = coll;
      if(and__9129__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__9129__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__9739__auto__ = coll == null ? null : coll;
      return function() {
        var or__9141__auto__ = cljs.core._nth[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._nth["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = function() {
  var obj14386 = {};
  return obj14386
}();
cljs.core.ISeq = function() {
  var obj14388 = {};
  return obj14388
}();
cljs.core._first = function _first(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._first[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._first["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._rest[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._rest["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = function() {
  var obj14390 = {};
  return obj14390
}();
cljs.core._next = function _next(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._next[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._next["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = function() {
  var obj14392 = {};
  return obj14392
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__9129__auto__ = o;
      if(and__9129__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__9129__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__9739__auto__ = o == null ? null : o;
      return function() {
        var or__9141__auto__ = cljs.core._lookup[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._lookup["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__9129__auto__ = o;
      if(and__9129__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__9129__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__9739__auto__ = o == null ? null : o;
      return function() {
        var or__9141__auto__ = cljs.core._lookup[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._lookup["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = function() {
  var obj14394 = {};
  return obj14394
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._assoc[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._assoc["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = function() {
  var obj14396 = {};
  return obj14396
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._dissoc[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._dissoc["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = function() {
  var obj14398 = {};
  return obj14398
}();
cljs.core._key = function _key(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._key[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._key["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._val[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._val["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = function() {
  var obj14400 = {};
  return obj14400
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._disjoin[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._disjoin["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = function() {
  var obj14402 = {};
  return obj14402
}();
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._peek[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._peek["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._pop[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._pop["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = function() {
  var obj14404 = {};
  return obj14404
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._assoc_n[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._assoc_n["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = function() {
  var obj14406 = {};
  return obj14406
}();
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._deref[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._deref["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj14408 = {};
  return obj14408
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = function() {
  var obj14410 = {};
  return obj14410
}();
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._meta[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._meta["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = function() {
  var obj14412 = {};
  return obj14412
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._with_meta[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._with_meta["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = function() {
  var obj14414 = {};
  return obj14414
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__9129__auto__ = coll;
      if(and__9129__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__9129__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__9739__auto__ = coll == null ? null : coll;
      return function() {
        var or__9141__auto__ = cljs.core._reduce[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._reduce["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__9129__auto__ = coll;
      if(and__9129__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__9129__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__9739__auto__ = coll == null ? null : coll;
      return function() {
        var or__9141__auto__ = cljs.core._reduce[goog.typeOf(x__9739__auto__)];
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = cljs.core._reduce["_"];
          if(or__9141__auto____$1) {
            return or__9141__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = function() {
  var obj14416 = {};
  return obj14416
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._kv_reduce[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = function() {
  var obj14418 = {};
  return obj14418
}();
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._equiv[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._equiv["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = function() {
  var obj14420 = {};
  return obj14420
}();
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._hash[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._hash["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = function() {
  var obj14422 = {};
  return obj14422
}();
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._seq[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._seq["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = function() {
  var obj14424 = {};
  return obj14424
}();
cljs.core.IList = function() {
  var obj14426 = {};
  return obj14426
}();
cljs.core.IRecord = function() {
  var obj14428 = {};
  return obj14428
}();
cljs.core.IReversible = function() {
  var obj14430 = {};
  return obj14430
}();
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._rseq[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._rseq["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = function() {
  var obj14432 = {};
  return obj14432
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._sorted_seq[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._entry_key[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._entry_key["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._comparator[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._comparator["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = function() {
  var obj14434 = {};
  return obj14434
}();
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__9129__auto__ = writer;
    if(and__9129__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__9739__auto__ = writer == null ? null : writer;
    return function() {
      var or__9141__auto__ = cljs.core._write[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._write["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__9129__auto__ = writer;
    if(and__9129__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__9739__auto__ = writer == null ? null : writer;
    return function() {
      var or__9141__auto__ = cljs.core._flush[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._flush["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj14436 = {};
  return obj14436
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__9129__auto__ = o;
    if(and__9129__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__9739__auto__ = o == null ? null : o;
    return function() {
      var or__9141__auto__ = cljs.core._pr_writer[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._pr_writer["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = function() {
  var obj14438 = {};
  return obj14438
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__9129__auto__ = d;
    if(and__9129__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__9739__auto__ = d == null ? null : d;
    return function() {
      var or__9141__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = function() {
  var obj14440 = {};
  return obj14440
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core._notify_watches[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._notify_watches["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core._add_watch[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._add_watch["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core._remove_watch[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._remove_watch["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = function() {
  var obj14442 = {};
  return obj14442
}();
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._as_transient[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._as_transient["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = function() {
  var obj14444 = {};
  return obj14444
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = function() {
  var obj14446 = {};
  return obj14446
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = function() {
  var obj14448 = {};
  return obj14448
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = function() {
  var obj14450 = {};
  return obj14450
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = function() {
  var obj14452 = {};
  return obj14452
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__9129__auto__ = tcoll;
    if(and__9129__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__9739__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__9141__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = function() {
  var obj14454 = {};
  return obj14454
}();
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core._compare[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._compare["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = function() {
  var obj14456 = {};
  return obj14456
}();
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._drop_first[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._drop_first["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = function() {
  var obj14458 = {};
  return obj14458
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._chunked_first[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._chunked_first["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._chunked_rest[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = function() {
  var obj14460 = {};
  return obj14460
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core._chunked_next[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._chunked_next["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = function() {
  var obj14462 = {};
  return obj14462
}();
cljs.core._name = function _name(x) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core._name[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._name["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core._namespace[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._namespace["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if(cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0
  }else {
    if(cljs.core.truth_(function() {
      var and__9129__auto__ = cljs.core.not.call(null, a.ns);
      if(and__9129__auto__) {
        return b.ns
      }else {
        return and__9129__auto__
      }
    }())) {
      return-1
    }else {
      if(cljs.core.truth_(a.ns)) {
        if(cljs.core.not.call(null, b.ns)) {
          return 1
        }else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if(nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name)
          }else {
            return nsc
          }
        }
      }else {
        if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__9547__auto__ = self__._hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__14464 = null;
  var G__14464__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__14464__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__14464 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14464__2.call(this, self__, coll);
      case 3:
        return G__14464__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14464
}();
cljs.core.Symbol.prototype.apply = function(self__, args14463) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14463)))
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null)
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found)
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__14466 = coll;
      if(G__14466) {
        var bit__9755__auto__ = G__14466.cljs$lang$protocol_mask$partition0$ & 8388608;
        if(bit__9755__auto__ || G__14466.cljs$core$ISeqable$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__14468 = coll;
      if(G__14468) {
        var bit__9755__auto__ = G__14468.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__9755__auto__ || G__14468.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__14470 = coll;
      if(G__14470) {
        var bit__9755__auto__ = G__14470.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__9755__auto__ || G__14470.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__14472 = coll;
      if(G__14472) {
        var bit__9755__auto__ = G__14472.cljs$lang$protocol_mask$partition0$ & 128;
        if(bit__9755__auto__ || G__14472.cljs$core$INext$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    return x === y || cljs.core._equiv.call(null, x, y)
  };
  var _EQ___3 = function() {
    var G__14473__delegate = function(x, y, more) {
      while(true) {
        if(_EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__14474 = y;
            var G__14475 = cljs.core.first.call(null, more);
            var G__14476 = cljs.core.next.call(null, more);
            x = G__14474;
            y = G__14475;
            more = G__14476;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14473 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14473__delegate.call(this, x, y, more)
    };
    G__14473.cljs$lang$maxFixedArity = 2;
    G__14473.cljs$lang$applyTo = function(arglist__14477) {
      var x = cljs.core.first(arglist__14477);
      arglist__14477 = cljs.core.next(arglist__14477);
      var y = cljs.core.first(arglist__14477);
      var more = cljs.core.rest(arglist__14477);
      return G__14473__delegate(x, y, more)
    };
    G__14473.cljs$core$IFn$_invoke$arity$variadic = G__14473__delegate;
    return G__14473
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString()
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__14478 = nval;
            var G__14479 = n + 1;
            val = G__14478;
            n = G__14479;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__14480 = nval;
          var G__14481 = n + 1;
          val__$1 = G__14480;
          n = G__14481;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__14482 = nval;
          var G__14483 = n + 1;
          val__$1 = G__14482;
          n = G__14483;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__14484 = nval;
            var G__14485 = n + 1;
            val = G__14484;
            n = G__14485;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__14486 = nval;
          var G__14487 = n + 1;
          val__$1 = G__14486;
          n = G__14487;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__14488 = nval;
          var G__14489 = n + 1;
          val__$1 = G__14488;
          n = G__14489;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__14491 = x;
  if(G__14491) {
    var bit__9762__auto__ = G__14491.cljs$lang$protocol_mask$partition0$ & 2;
    if(bit__9762__auto__ || G__14491.cljs$core$ICounted$) {
      return true
    }else {
      if(!G__14491.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__14491)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__14491)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__14493 = x;
  if(G__14493) {
    var bit__9762__auto__ = G__14493.cljs$lang$protocol_mask$partition0$ & 16;
    if(bit__9762__auto__ || G__14493.cljs$core$IIndexed$) {
      return true
    }else {
      if(!G__14493.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__14493)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__14493)
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if(c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return null
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__14494 = sn;
      s = G__14494;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x)
    }
  };
  var conj__3 = function() {
    var G__14495__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__14496 = conj.call(null, coll, x);
          var G__14497 = cljs.core.first.call(null, xs);
          var G__14498 = cljs.core.next.call(null, xs);
          coll = G__14496;
          x = G__14497;
          xs = G__14498;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__14495 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14495__delegate.call(this, coll, x, xs)
    };
    G__14495.cljs$lang$maxFixedArity = 2;
    G__14495.cljs$lang$applyTo = function(arglist__14499) {
      var coll = cljs.core.first(arglist__14499);
      arglist__14499 = cljs.core.next(arglist__14499);
      var x = cljs.core.first(arglist__14499);
      var xs = cljs.core.rest(arglist__14499);
      return G__14495__delegate(coll, x, xs)
    };
    G__14495.cljs$core$IFn$_invoke$arity$variadic = G__14495__delegate;
    return G__14495
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__14500 = cljs.core.next.call(null, s);
      var G__14501 = acc + 1;
      s = G__14500;
      acc = G__14501;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__14503 = coll;
      if(G__14503) {
        var bit__9755__auto__ = G__14503.cljs$lang$protocol_mask$partition0$ & 2;
        if(bit__9755__auto__ || G__14503.cljs$core$ICounted$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__14504 = cljs.core.next.call(null, coll);
              var G__14505 = n - 1;
              coll = G__14504;
              n = G__14505;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__14506 = cljs.core.next.call(null, coll);
              var G__14507 = n - 1;
              var G__14508 = not_found;
              coll = G__14506;
              n = G__14507;
              not_found = G__14508;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__14513 = coll;
        if(G__14513) {
          var bit__9755__auto__ = G__14513.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__9755__auto__ || G__14513.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__14514 = coll;
                  if(G__14514) {
                    var bit__9762__auto__ = G__14514.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__9762__auto__ || G__14514.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__14514.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14514)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14514)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__14515 = coll;
        if(G__14515) {
          var bit__9755__auto__ = G__14515.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__9755__auto__ || G__14515.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__14516 = coll;
                  if(G__14516) {
                    var bit__9762__auto__ = G__14516.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__9762__auto__ || G__14516.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__14516.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14516)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14516)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__14519 = o;
        if(G__14519) {
          var bit__9755__auto__ = G__14519.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__9755__auto__ || G__14519.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__14520 = o;
        if(G__14520) {
          var bit__9755__auto__ = G__14520.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__9755__auto__ || G__14520.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v])
    }
  };
  var assoc__4 = function() {
    var G__14521__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__14522 = ret;
          var G__14523 = cljs.core.first.call(null, kvs);
          var G__14524 = cljs.core.second.call(null, kvs);
          var G__14525 = cljs.core.nnext.call(null, kvs);
          coll = G__14522;
          k = G__14523;
          v = G__14524;
          kvs = G__14525;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__14521 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14521__delegate.call(this, coll, k, v, kvs)
    };
    G__14521.cljs$lang$maxFixedArity = 3;
    G__14521.cljs$lang$applyTo = function(arglist__14526) {
      var coll = cljs.core.first(arglist__14526);
      arglist__14526 = cljs.core.next(arglist__14526);
      var k = cljs.core.first(arglist__14526);
      arglist__14526 = cljs.core.next(arglist__14526);
      var v = cljs.core.first(arglist__14526);
      var kvs = cljs.core.rest(arglist__14526);
      return G__14521__delegate(coll, k, v, kvs)
    };
    G__14521.cljs$core$IFn$_invoke$arity$variadic = G__14521__delegate;
    return G__14521
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__14527__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__14528 = ret;
          var G__14529 = cljs.core.first.call(null, ks);
          var G__14530 = cljs.core.next.call(null, ks);
          coll = G__14528;
          k = G__14529;
          ks = G__14530;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__14527 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14527__delegate.call(this, coll, k, ks)
    };
    G__14527.cljs$lang$maxFixedArity = 2;
    G__14527.cljs$lang$applyTo = function(arglist__14531) {
      var coll = cljs.core.first(arglist__14531);
      arglist__14531 = cljs.core.next(arglist__14531);
      var k = cljs.core.first(arglist__14531);
      var ks = cljs.core.rest(arglist__14531);
      return G__14527__delegate(coll, k, ks)
    };
    G__14527.cljs$core$IFn$_invoke$arity$variadic = G__14527__delegate;
    return G__14527
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__9141__auto__ = goog.isFunction(f);
  if(or__9141__auto__) {
    return or__9141__auto__
  }else {
    var G__14535 = f;
    if(G__14535) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto____$1 = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto____$1)) {
          return or__9141__auto____$1
        }else {
          return G__14535.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__14535.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__14535)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__14535)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__14543 = o;
    if(G__14543) {
      var bit__9762__auto__ = G__14543.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__9762__auto__ || G__14543.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__14543.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14543)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14543)
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t14544 !== "undefined") {
      }else {
        cljs.core.t14544 = function(meta, o, with_meta, meta14545) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta14545 = meta14545;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t14544.cljs$lang$type = true;
        cljs.core.t14544.cljs$lang$ctorStr = "cljs.core/t14544";
        cljs.core.t14544.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/t14544")
        };
        cljs.core.t14544.prototype.call = function() {
          var G__14548__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__14548 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__14548__delegate.call(this, self__, args)
          };
          G__14548.cljs$lang$maxFixedArity = 1;
          G__14548.cljs$lang$applyTo = function(arglist__14549) {
            var self__ = cljs.core.first(arglist__14549);
            var args = cljs.core.rest(arglist__14549);
            return G__14548__delegate(self__, args)
          };
          G__14548.cljs$core$IFn$_invoke$arity$variadic = G__14548__delegate;
          return G__14548
        }();
        cljs.core.t14544.prototype.apply = function(self__, args14547) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14547)))
        };
        cljs.core.t14544.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__14550__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__14550 = function(var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
            }
            return G__14550__delegate.call(this, args)
          };
          G__14550.cljs$lang$maxFixedArity = 0;
          G__14550.cljs$lang$applyTo = function(arglist__14551) {
            var args = cljs.core.seq(arglist__14551);
            return G__14550__delegate(args)
          };
          G__14550.cljs$core$IFn$_invoke$arity$variadic = G__14550__delegate;
          return G__14550
        }();
        cljs.core.t14544.prototype.cljs$core$Fn$ = true;
        cljs.core.t14544.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14546) {
          var self__ = this;
          var _14546__$1 = this;
          return self__.meta14545
        };
        cljs.core.t14544.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14546, meta14545__$1) {
          var self__ = this;
          var _14546__$1 = this;
          return new cljs.core.t14544(self__.meta, self__.o, self__.with_meta, meta14545__$1)
        };
        cljs.core.__GT_t14544 = function __GT_t14544(meta__$1, o__$1, with_meta__$1, meta14545) {
          return new cljs.core.t14544(meta__$1, o__$1, with_meta__$1, meta14545)
        }
      }
      return new cljs.core.t14544(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__14553 = o;
    if(G__14553) {
      var bit__9762__auto__ = G__14553.cljs$lang$protocol_mask$partition0$ & 131072;
      if(bit__9762__auto__ || G__14553.cljs$core$IMeta$) {
        return true
      }else {
        if(!G__14553.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14553)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14553)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__14554__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__14555 = ret;
          var G__14556 = cljs.core.first.call(null, ks);
          var G__14557 = cljs.core.next.call(null, ks);
          coll = G__14555;
          k = G__14556;
          ks = G__14557;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__14554 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14554__delegate.call(this, coll, k, ks)
    };
    G__14554.cljs$lang$maxFixedArity = 2;
    G__14554.cljs$lang$applyTo = function(arglist__14558) {
      var coll = cljs.core.first(arglist__14558);
      arglist__14558 = cljs.core.next(arglist__14558);
      var k = cljs.core.first(arglist__14558);
      var ks = cljs.core.rest(arglist__14558);
      return G__14554__delegate(coll, k, ks)
    };
    G__14554.cljs$core$IFn$_invoke$arity$variadic = G__14554__delegate;
    return G__14554
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = function() {
  var obj14560 = {};
  return obj14560
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj14564 = {};
      return obj14564
    }();
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function hash(o) {
  if(function() {
    var G__14566 = o;
    if(G__14566) {
      var bit__9755__auto__ = G__14566.cljs$lang$protocol_mask$partition0$ & 4194304;
      if(bit__9755__auto__ || G__14566.cljs$core$IHash$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._hash.call(null, o)
  }else {
    if(typeof o === "number") {
      return Math.floor(o) % 2147483647
    }else {
      if(o === true) {
        return 1
      }else {
        if(o === false) {
          return 0
        }else {
          if(typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core._hash.call(null, o)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__14568 = x;
    if(G__14568) {
      var bit__9762__auto__ = G__14568.cljs$lang$protocol_mask$partition0$ & 8;
      if(bit__9762__auto__ || G__14568.cljs$core$ICollection$) {
        return true
      }else {
        if(!G__14568.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__14568)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__14568)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__14570 = x;
    if(G__14570) {
      var bit__9762__auto__ = G__14570.cljs$lang$protocol_mask$partition0$ & 4096;
      if(bit__9762__auto__ || G__14570.cljs$core$ISet$) {
        return true
      }else {
        if(!G__14570.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__14570)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__14570)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__14572 = x;
  if(G__14572) {
    var bit__9762__auto__ = G__14572.cljs$lang$protocol_mask$partition0$ & 512;
    if(bit__9762__auto__ || G__14572.cljs$core$IAssociative$) {
      return true
    }else {
      if(!G__14572.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__14572)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__14572)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__14574 = x;
  if(G__14574) {
    var bit__9762__auto__ = G__14574.cljs$lang$protocol_mask$partition0$ & 16777216;
    if(bit__9762__auto__ || G__14574.cljs$core$ISequential$) {
      return true
    }else {
      if(!G__14574.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__14574)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__14574)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__14576 = x;
  if(G__14576) {
    var bit__9762__auto__ = G__14576.cljs$lang$protocol_mask$partition0$ & 524288;
    if(bit__9762__auto__ || G__14576.cljs$core$IReduce$) {
      return true
    }else {
      if(!G__14576.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__14576)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__14576)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__14578 = x;
    if(G__14578) {
      var bit__9762__auto__ = G__14578.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__9762__auto__ || G__14578.cljs$core$IMap$) {
        return true
      }else {
        if(!G__14578.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__14578)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__14578)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__14580 = x;
  if(G__14580) {
    var bit__9762__auto__ = G__14580.cljs$lang$protocol_mask$partition0$ & 16384;
    if(bit__9762__auto__ || G__14580.cljs$core$IVector$) {
      return true
    }else {
      if(!G__14580.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__14580)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__14580)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__14582 = x;
  if(G__14582) {
    var bit__9755__auto__ = G__14582.cljs$lang$protocol_mask$partition1$ & 512;
    if(bit__9755__auto__ || G__14582.cljs$core$IChunkedSeq$) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj14586 = {};
    return obj14586
  };
  var js_obj__1 = function() {
    var G__14587__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__14587 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14587__delegate.call(this, keyvals)
    };
    G__14587.cljs$lang$maxFixedArity = 0;
    G__14587.cljs$lang$applyTo = function(arglist__14588) {
      var keyvals = cljs.core.seq(arglist__14588);
      return G__14587__delegate(keyvals)
    };
    G__14587.cljs$core$IFn$_invoke$arity$variadic = G__14587__delegate;
    return G__14587
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__14589 = i__$1 + 1;
      var G__14590 = j__$1 + 1;
      var G__14591 = len__$1 - 1;
      i__$1 = G__14589;
      j__$1 = G__14590;
      len__$1 = G__14591;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__14592 = i__$1 - 1;
      var G__14593 = j__$1 - 1;
      var G__14594 = len__$1 - 1;
      i__$1 = G__14592;
      j__$1 = G__14593;
      len__$1 = G__14594;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = function() {
  var obj14596 = {};
  return obj14596
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__14598 = s;
    if(G__14598) {
      var bit__9762__auto__ = G__14598.cljs$lang$protocol_mask$partition0$ & 64;
      if(bit__9762__auto__ || G__14598.cljs$core$ISeq$) {
        return true
      }else {
        if(!G__14598.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14598)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14598)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__14600 = s;
  if(G__14600) {
    var bit__9762__auto__ = G__14600.cljs$lang$protocol_mask$partition0$ & 8388608;
    if(bit__9762__auto__ || G__14600.cljs$core$ISeqable$) {
      return true
    }else {
      if(!G__14600.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__14600)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__14600)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__9141__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__9141__auto__) {
    return or__9141__auto__
  }else {
    var G__14604 = f;
    if(G__14604) {
      var bit__9762__auto__ = G__14604.cljs$lang$protocol_mask$partition0$ & 1;
      if(bit__9762__auto__ || G__14604.cljs$core$IFn$) {
        return true
      }else {
        if(!G__14604.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__14604)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__14604)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10)
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__14605__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__14606 = cljs.core.conj.call(null, s, x__$1);
              var G__14607 = etc;
              s = G__14606;
              xs = G__14607;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__14605 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14605__delegate.call(this, x, y, more)
    };
    G__14605.cljs$lang$maxFixedArity = 2;
    G__14605.cljs$lang$applyTo = function(arglist__14608) {
      var x = cljs.core.first(arglist__14608);
      arglist__14608 = cljs.core.next(arglist__14608);
      var y = cljs.core.first(arglist__14608);
      var more = cljs.core.rest(arglist__14608);
      return G__14605__delegate(x, y, more)
    };
    G__14605.cljs$core$IFn$_invoke$arity$variadic = G__14605__delegate;
    return G__14605
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__14610 = x;
            if(G__14610) {
              var bit__9755__auto__ = G__14610.cljs$lang$protocol_mask$partition1$ & 2048;
              if(bit__9755__auto__ || G__14610.cljs$core$IComparable$) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(d === 0 && n + 1 < len) {
        var G__14611 = xs;
        var G__14612 = ys;
        var G__14613 = len;
        var G__14614 = n + 1;
        xs = G__14611;
        ys = G__14612;
        len = G__14613;
        n = G__14614;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__14615 = nval;
          var G__14616 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__14615;
          coll__$1 = G__14616;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__14619 = coll;
      if(G__14619) {
        var bit__9755__auto__ = G__14619.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__9755__auto__ || G__14619.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__14620 = coll;
      if(G__14620) {
        var bit__9755__auto__ = G__14620.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__9755__auto__ || G__14620.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__14621__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__14621 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14621__delegate.call(this, x, y, more)
    };
    G__14621.cljs$lang$maxFixedArity = 2;
    G__14621.cljs$lang$applyTo = function(arglist__14622) {
      var x = cljs.core.first(arglist__14622);
      arglist__14622 = cljs.core.next(arglist__14622);
      var y = cljs.core.first(arglist__14622);
      var more = cljs.core.rest(arglist__14622);
      return G__14621__delegate(x, y, more)
    };
    G__14621.cljs$core$IFn$_invoke$arity$variadic = G__14621__delegate;
    return G__14621
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__14623__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__14623 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14623__delegate.call(this, x, y, more)
    };
    G__14623.cljs$lang$maxFixedArity = 2;
    G__14623.cljs$lang$applyTo = function(arglist__14624) {
      var x = cljs.core.first(arglist__14624);
      arglist__14624 = cljs.core.next(arglist__14624);
      var y = cljs.core.first(arglist__14624);
      var more = cljs.core.rest(arglist__14624);
      return G__14623__delegate(x, y, more)
    };
    G__14623.cljs$core$IFn$_invoke$arity$variadic = G__14623__delegate;
    return G__14623
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__14625__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__14625 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14625__delegate.call(this, x, y, more)
    };
    G__14625.cljs$lang$maxFixedArity = 2;
    G__14625.cljs$lang$applyTo = function(arglist__14626) {
      var x = cljs.core.first(arglist__14626);
      arglist__14626 = cljs.core.next(arglist__14626);
      var y = cljs.core.first(arglist__14626);
      var more = cljs.core.rest(arglist__14626);
      return G__14625__delegate(x, y, more)
    };
    G__14625.cljs$core$IFn$_invoke$arity$variadic = G__14625__delegate;
    return G__14625
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__14627__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__14627 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14627__delegate.call(this, x, y, more)
    };
    G__14627.cljs$lang$maxFixedArity = 2;
    G__14627.cljs$lang$applyTo = function(arglist__14628) {
      var x = cljs.core.first(arglist__14628);
      arglist__14628 = cljs.core.next(arglist__14628);
      var y = cljs.core.first(arglist__14628);
      var more = cljs.core.rest(arglist__14628);
      return G__14627__delegate(x, y, more)
    };
    G__14627.cljs$core$IFn$_invoke$arity$variadic = G__14627__delegate;
    return G__14627
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__14629__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__14630 = y;
            var G__14631 = cljs.core.first.call(null, more);
            var G__14632 = cljs.core.next.call(null, more);
            x = G__14630;
            y = G__14631;
            more = G__14632;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14629 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14629__delegate.call(this, x, y, more)
    };
    G__14629.cljs$lang$maxFixedArity = 2;
    G__14629.cljs$lang$applyTo = function(arglist__14633) {
      var x = cljs.core.first(arglist__14633);
      arglist__14633 = cljs.core.next(arglist__14633);
      var y = cljs.core.first(arglist__14633);
      var more = cljs.core.rest(arglist__14633);
      return G__14629__delegate(x, y, more)
    };
    G__14629.cljs$core$IFn$_invoke$arity$variadic = G__14629__delegate;
    return G__14629
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__14634__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__14635 = y;
            var G__14636 = cljs.core.first.call(null, more);
            var G__14637 = cljs.core.next.call(null, more);
            x = G__14635;
            y = G__14636;
            more = G__14637;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14634 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14634__delegate.call(this, x, y, more)
    };
    G__14634.cljs$lang$maxFixedArity = 2;
    G__14634.cljs$lang$applyTo = function(arglist__14638) {
      var x = cljs.core.first(arglist__14638);
      arglist__14638 = cljs.core.next(arglist__14638);
      var y = cljs.core.first(arglist__14638);
      var more = cljs.core.rest(arglist__14638);
      return G__14634__delegate(x, y, more)
    };
    G__14634.cljs$core$IFn$_invoke$arity$variadic = G__14634__delegate;
    return G__14634
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__14639__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__14640 = y;
            var G__14641 = cljs.core.first.call(null, more);
            var G__14642 = cljs.core.next.call(null, more);
            x = G__14640;
            y = G__14641;
            more = G__14642;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14639 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14639__delegate.call(this, x, y, more)
    };
    G__14639.cljs$lang$maxFixedArity = 2;
    G__14639.cljs$lang$applyTo = function(arglist__14643) {
      var x = cljs.core.first(arglist__14643);
      arglist__14643 = cljs.core.next(arglist__14643);
      var y = cljs.core.first(arglist__14643);
      var more = cljs.core.rest(arglist__14643);
      return G__14639__delegate(x, y, more)
    };
    G__14639.cljs$core$IFn$_invoke$arity$variadic = G__14639__delegate;
    return G__14639
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__14644__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__14645 = y;
            var G__14646 = cljs.core.first.call(null, more);
            var G__14647 = cljs.core.next.call(null, more);
            x = G__14645;
            y = G__14646;
            more = G__14647;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14644 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14644__delegate.call(this, x, y, more)
    };
    G__14644.cljs$lang$maxFixedArity = 2;
    G__14644.cljs$lang$applyTo = function(arglist__14648) {
      var x = cljs.core.first(arglist__14648);
      arglist__14648 = cljs.core.next(arglist__14648);
      var y = cljs.core.first(arglist__14648);
      var more = cljs.core.rest(arglist__14648);
      return G__14644__delegate(x, y, more)
    };
    G__14644.cljs$core$IFn$_invoke$arity$variadic = G__14644__delegate;
    return G__14644
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__9448__auto__ = x;
    var y__9449__auto__ = y;
    return x__9448__auto__ > y__9449__auto__ ? x__9448__auto__ : y__9449__auto__
  };
  var max__3 = function() {
    var G__14649__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__9448__auto__ = x;
        var y__9449__auto__ = y;
        return x__9448__auto__ > y__9449__auto__ ? x__9448__auto__ : y__9449__auto__
      }(), more)
    };
    var G__14649 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14649__delegate.call(this, x, y, more)
    };
    G__14649.cljs$lang$maxFixedArity = 2;
    G__14649.cljs$lang$applyTo = function(arglist__14650) {
      var x = cljs.core.first(arglist__14650);
      arglist__14650 = cljs.core.next(arglist__14650);
      var y = cljs.core.first(arglist__14650);
      var more = cljs.core.rest(arglist__14650);
      return G__14649__delegate(x, y, more)
    };
    G__14649.cljs$core$IFn$_invoke$arity$variadic = G__14649__delegate;
    return G__14649
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__9455__auto__ = x;
    var y__9456__auto__ = y;
    return x__9455__auto__ < y__9456__auto__ ? x__9455__auto__ : y__9456__auto__
  };
  var min__3 = function() {
    var G__14651__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__9455__auto__ = x;
        var y__9456__auto__ = y;
        return x__9455__auto__ < y__9456__auto__ ? x__9455__auto__ : y__9456__auto__
      }(), more)
    };
    var G__14651 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14651__delegate.call(this, x, y, more)
    };
    G__14651.cljs$lang$maxFixedArity = 2;
    G__14651.cljs$lang$applyTo = function(arglist__14652) {
      var x = cljs.core.first(arglist__14652);
      arglist__14652 = cljs.core.next(arglist__14652);
      var y = cljs.core.first(arglist__14652);
      var more = cljs.core.rest(arglist__14652);
      return G__14651__delegate(x, y, more)
    };
    G__14651.cljs$core$IFn$_invoke$arity$variadic = G__14651__delegate;
    return G__14651
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(typeof x === "string" && x.length === 1) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__14653__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__14653 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14653__delegate.call(this, x, y, more)
    };
    G__14653.cljs$lang$maxFixedArity = 2;
    G__14653.cljs$lang$applyTo = function(arglist__14654) {
      var x = cljs.core.first(arglist__14654);
      arglist__14654 = cljs.core.next(arglist__14654);
      var y = cljs.core.first(arglist__14654);
      var more = cljs.core.rest(arglist__14654);
      return G__14653__delegate(x, y, more)
    };
    G__14653.cljs$core$IFn$_invoke$arity$variadic = G__14653__delegate;
    return G__14653
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__14655__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__14655 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14655__delegate.call(this, x, y, more)
    };
    G__14655.cljs$lang$maxFixedArity = 2;
    G__14655.cljs$lang$applyTo = function(arglist__14656) {
      var x = cljs.core.first(arglist__14656);
      arglist__14656 = cljs.core.next(arglist__14656);
      var y = cljs.core.first(arglist__14656);
      var more = cljs.core.rest(arglist__14656);
      return G__14655__delegate(x, y, more)
    };
    G__14655.cljs$core$IFn$_invoke$arity$variadic = G__14655__delegate;
    return G__14655
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__14657__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__14657 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14657__delegate.call(this, x, y, more)
    };
    G__14657.cljs$lang$maxFixedArity = 2;
    G__14657.cljs$lang$applyTo = function(arglist__14658) {
      var x = cljs.core.first(arglist__14658);
      arglist__14658 = cljs.core.next(arglist__14658);
      var y = cljs.core.first(arglist__14658);
      var more = cljs.core.rest(arglist__14658);
      return G__14657__delegate(x, y, more)
    };
    G__14657.cljs$core$IFn$_invoke$arity$variadic = G__14657__delegate;
    return G__14657
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__14659__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__14659 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14659__delegate.call(this, x, y, more)
    };
    G__14659.cljs$lang$maxFixedArity = 2;
    G__14659.cljs$lang$applyTo = function(arglist__14660) {
      var x = cljs.core.first(arglist__14660);
      arglist__14660 = cljs.core.next(arglist__14660);
      var y = cljs.core.first(arglist__14660);
      var more = cljs.core.rest(arglist__14660);
      return G__14659__delegate(x, y, more)
    };
    G__14659.cljs$core$IFn$_invoke$arity$variadic = G__14659__delegate;
    return G__14659
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__14661__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__14661 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14661__delegate.call(this, x, y, more)
    };
    G__14661.cljs$lang$maxFixedArity = 2;
    G__14661.cljs$lang$applyTo = function(arglist__14662) {
      var x = cljs.core.first(arglist__14662);
      arglist__14662 = cljs.core.next(arglist__14662);
      var y = cljs.core.first(arglist__14662);
      var more = cljs.core.rest(arglist__14662);
      return G__14661__delegate(x, y, more)
    };
    G__14661.cljs$core$IFn$_invoke$arity$variadic = G__14661__delegate;
    return G__14661
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__14663__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__14663 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14663__delegate.call(this, x, y, more)
    };
    G__14663.cljs$lang$maxFixedArity = 2;
    G__14663.cljs$lang$applyTo = function(arglist__14664) {
      var x = cljs.core.first(arglist__14664);
      arglist__14664 = cljs.core.next(arglist__14664);
      var y = cljs.core.first(arglist__14664);
      var more = cljs.core.rest(arglist__14664);
      return G__14663__delegate(x, y, more)
    };
    G__14663.cljs$core$IFn$_invoke$arity$variadic = G__14663__delegate;
    return G__14663
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__14665__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__14665 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14665__delegate.call(this, x, y, more)
    };
    G__14665.cljs$lang$maxFixedArity = 2;
    G__14665.cljs$lang$applyTo = function(arglist__14666) {
      var x = cljs.core.first(arglist__14666);
      arglist__14666 = cljs.core.next(arglist__14666);
      var y = cljs.core.first(arglist__14666);
      var more = cljs.core.rest(arglist__14666);
      return G__14665__delegate(x, y, more)
    };
    G__14665.cljs$core$IFn$_invoke$arity$variadic = G__14665__delegate;
    return G__14665
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__14667__delegate = function(x, y, more) {
      while(true) {
        if(_EQ__EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__14668 = y;
            var G__14669 = cljs.core.first.call(null, more);
            var G__14670 = cljs.core.next.call(null, more);
            x = G__14668;
            y = G__14669;
            more = G__14670;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14667 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14667__delegate.call(this, x, y, more)
    };
    G__14667.cljs$lang$maxFixedArity = 2;
    G__14667.cljs$lang$applyTo = function(arglist__14671) {
      var x = cljs.core.first(arglist__14671);
      arglist__14671 = cljs.core.next(arglist__14671);
      var y = cljs.core.first(arglist__14671);
      var more = cljs.core.rest(arglist__14671);
      return G__14667__delegate(x, y, more)
    };
    G__14667.cljs$core$IFn$_invoke$arity$variadic = G__14667__delegate;
    return G__14667
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs && n__$1 > 0) {
      var G__14672 = n__$1 - 1;
      var G__14673 = cljs.core.next.call(null, xs);
      n__$1 = G__14672;
      xs = G__14673;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__14674__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while(true) {
        if(cljs.core.truth_(more)) {
          var G__14675 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__14676 = cljs.core.next.call(null, more);
          sb = G__14675;
          more = G__14676;
          continue
        }else {
          return sb.toString()
        }
        break
      }
    };
    var G__14674 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14674__delegate.call(this, x, ys)
    };
    G__14674.cljs$lang$maxFixedArity = 1;
    G__14674.cljs$lang$applyTo = function(arglist__14677) {
      var x = cljs.core.first(arglist__14677);
      var ys = cljs.core.rest(arglist__14677);
      return G__14674__delegate(x, ys)
    };
    G__14674.cljs$core$IFn$_invoke$arity$variadic = G__14674__delegate;
    return G__14674
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__14678 = cljs.core.next.call(null, xs);
            var G__14679 = cljs.core.next.call(null, ys);
            xs = G__14678;
            ys = G__14679;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  if(cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while(true) {
      if(s == null) {
        return res
      }else {
        var G__14680 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__14681 = cljs.core.next.call(null, s);
        res = G__14680;
        s = G__14681;
        continue
      }
      break
    }
  }else {
    return 0
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__14682 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__14683 = cljs.core.next.call(null, s);
      h = G__14682;
      s = G__14683;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__14684 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__14685 = cljs.core.next.call(null, s__$1);
      h = G__14684;
      s__$1 = G__14685;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__14692_14698 = cljs.core.seq.call(null, fn_map);
  var chunk__14693_14699 = null;
  var count__14694_14700 = 0;
  var i__14695_14701 = 0;
  while(true) {
    if(i__14695_14701 < count__14694_14700) {
      var vec__14696_14702 = cljs.core._nth.call(null, chunk__14693_14699, i__14695_14701);
      var key_name_14703 = cljs.core.nth.call(null, vec__14696_14702, 0, null);
      var f_14704 = cljs.core.nth.call(null, vec__14696_14702, 1, null);
      var str_name_14705 = cljs.core.name.call(null, key_name_14703);
      obj[str_name_14705] = f_14704;
      var G__14706 = seq__14692_14698;
      var G__14707 = chunk__14693_14699;
      var G__14708 = count__14694_14700;
      var G__14709 = i__14695_14701 + 1;
      seq__14692_14698 = G__14706;
      chunk__14693_14699 = G__14707;
      count__14694_14700 = G__14708;
      i__14695_14701 = G__14709;
      continue
    }else {
      var temp__4094__auto___14710 = cljs.core.seq.call(null, seq__14692_14698);
      if(temp__4094__auto___14710) {
        var seq__14692_14711__$1 = temp__4094__auto___14710;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14692_14711__$1)) {
          var c__9860__auto___14712 = cljs.core.chunk_first.call(null, seq__14692_14711__$1);
          var G__14713 = cljs.core.chunk_rest.call(null, seq__14692_14711__$1);
          var G__14714 = c__9860__auto___14712;
          var G__14715 = cljs.core.count.call(null, c__9860__auto___14712);
          var G__14716 = 0;
          seq__14692_14698 = G__14713;
          chunk__14693_14699 = G__14714;
          count__14694_14700 = G__14715;
          i__14695_14701 = G__14716;
          continue
        }else {
          var vec__14697_14717 = cljs.core.first.call(null, seq__14692_14711__$1);
          var key_name_14718 = cljs.core.nth.call(null, vec__14697_14717, 0, null);
          var f_14719 = cljs.core.nth.call(null, vec__14697_14717, 1, null);
          var str_name_14720 = cljs.core.name.call(null, key_name_14718);
          obj[str_name_14720] = f_14719;
          var G__14721 = cljs.core.next.call(null, seq__14692_14711__$1);
          var G__14722 = null;
          var G__14723 = 0;
          var G__14724 = 0;
          seq__14692_14698 = G__14721;
          chunk__14693_14699 = G__14722;
          count__14694_14700 = G__14723;
          i__14695_14701 = G__14724;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__14726 = coll;
  if(G__14726) {
    var bit__9762__auto__ = G__14726.cljs$lang$protocol_mask$partition0$ & 134217728;
    if(bit__9762__auto__ || G__14726.cljs$core$IReversible$) {
      return true
    }else {
      if(!G__14726.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14726)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14726)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__14727 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__14727;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__14728 = i - 1;
        var G__14729 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__14728;
        r = G__14729;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__14730) {
    var xs = cljs.core.seq(arglist__14730);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__9141__auto__ = coll == null;
    if(or__9141__auto__) {
      return or__9141__auto__
    }else {
      var G__14734 = coll;
      if(G__14734) {
        var bit__9755__auto__ = G__14734.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__9755__auto__ || G__14734.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__14736 = x;
  if(G__14736) {
    var bit__9762__auto__ = G__14736.cljs$lang$protocol_mask$partition0$ & 33554432;
    if(bit__9762__auto__ || G__14736.cljs$core$IList$) {
      return true
    }else {
      if(!G__14736.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14736)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14736)
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__14738 = null;
  var G__14738__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw)
  };
  var G__14738__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found)
  };
  G__14738 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14738__2.call(this, self__, coll);
      case 3:
        return G__14738__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14738
}();
cljs.core.Keyword.prototype.apply = function(self__, args14737) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14737)))
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw)
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found)
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__14740 = x;
    if(G__14740) {
      var bit__9755__auto__ = G__14740.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__9755__auto__ || G__14740.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null)
      }else {
        if(typeof name === "string") {
          var parts = name.split("/");
          if(parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null)
          }else {
            return new cljs.core.Keyword(null, parts[0], name, null)
          }
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__14741 = ls.sval();
        ls = G__14741;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__14743 = s;
    if(G__14743) {
      var bit__9755__auto__ = G__14743.cljs$lang$protocol_mask$partition1$ & 1024;
      if(bit__9755__auto__ || G__14743.cljs$core$IChunkedNext$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__14744 = cljs.core.next.call(null, s__$1);
      s__$1 = G__14744;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_14745 = 0;
  var xs_14746 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_14746) {
      ret[i_14745] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_14746));
      var G__14747 = i_14745 + 1;
      var G__14748 = cljs.core.next.call(null, xs_14746);
      i_14745 = G__14747;
      xs_14746 = G__14748;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14749 = i + 1;
          var G__14750 = cljs.core.next.call(null, s__$1);
          i = G__14749;
          s__$1 = G__14750;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__9959__auto___14751 = size;
      var i_14752 = 0;
      while(true) {
        if(i_14752 < n__9959__auto___14751) {
          a[i_14752] = init_val_or_seq;
          var G__14753 = i_14752 + 1;
          i_14752 = G__14753;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14754 = i + 1;
          var G__14755 = cljs.core.next.call(null, s__$1);
          i = G__14754;
          s__$1 = G__14755;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__9959__auto___14756 = size;
      var i_14757 = 0;
      while(true) {
        if(i_14757 < n__9959__auto___14756) {
          a[i_14757] = init_val_or_seq;
          var G__14758 = i_14757 + 1;
          i_14757 = G__14758;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14759 = i + 1;
          var G__14760 = cljs.core.next.call(null, s__$1);
          i = G__14759;
          s__$1 = G__14760;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__9959__auto___14761 = size;
      var i_14762 = 0;
      while(true) {
        if(i_14762 < n__9959__auto___14761) {
          a[i_14762] = init_val_or_seq;
          var G__14763 = i_14762 + 1;
          i_14762 = G__14763;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14764 = i + 1;
          var G__14765 = cljs.core.next.call(null, s__$1);
          i = G__14764;
          s__$1 = G__14765;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__9959__auto___14766 = size;
      var i_14767 = 0;
      while(true) {
        if(i_14767 < n__9959__auto___14766) {
          a[i_14767] = init_val_or_seq;
          var G__14768 = i_14767 + 1;
          i_14767 = G__14768;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__14769 = cljs.core.next.call(null, s__$1);
        var G__14770 = i - 1;
        var G__14771 = sum + 1;
        s__$1 = G__14769;
        i = G__14770;
        sum = G__14771;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__14772__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__14772 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14772__delegate.call(this, x, y, zs)
    };
    G__14772.cljs$lang$maxFixedArity = 2;
    G__14772.cljs$lang$applyTo = function(arglist__14773) {
      var x = cljs.core.first(arglist__14773);
      arglist__14773 = cljs.core.next(arglist__14773);
      var y = cljs.core.first(arglist__14773);
      var zs = cljs.core.rest(arglist__14773);
      return G__14772__delegate(x, y, zs)
    };
    G__14772.cljs$core$IFn$_invoke$arity$variadic = G__14772__delegate;
    return G__14772
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__14774__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__14774 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14774__delegate.call(this, a, b, c, d, more)
    };
    G__14774.cljs$lang$maxFixedArity = 4;
    G__14774.cljs$lang$applyTo = function(arglist__14775) {
      var a = cljs.core.first(arglist__14775);
      arglist__14775 = cljs.core.next(arglist__14775);
      var b = cljs.core.first(arglist__14775);
      arglist__14775 = cljs.core.next(arglist__14775);
      var c = cljs.core.first(arglist__14775);
      arglist__14775 = cljs.core.next(arglist__14775);
      var d = cljs.core.first(arglist__14775);
      var more = cljs.core.rest(arglist__14775);
      return G__14774__delegate(a, b, c, d, more)
    };
    G__14774.cljs$core$IFn$_invoke$arity$variadic = G__14774__delegate;
    return G__14774
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__14776__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__14776 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14776__delegate.call(this, f, a, b, c, d, args)
    };
    G__14776.cljs$lang$maxFixedArity = 5;
    G__14776.cljs$lang$applyTo = function(arglist__14777) {
      var f = cljs.core.first(arglist__14777);
      arglist__14777 = cljs.core.next(arglist__14777);
      var a = cljs.core.first(arglist__14777);
      arglist__14777 = cljs.core.next(arglist__14777);
      var b = cljs.core.first(arglist__14777);
      arglist__14777 = cljs.core.next(arglist__14777);
      var c = cljs.core.first(arglist__14777);
      arglist__14777 = cljs.core.next(arglist__14777);
      var d = cljs.core.first(arglist__14777);
      var args = cljs.core.rest(arglist__14777);
      return G__14776__delegate(f, a, b, c, d, args)
    };
    G__14776.cljs$core$IFn$_invoke$arity$variadic = G__14776__delegate;
    return G__14776
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__14778) {
    var obj = cljs.core.first(arglist__14778);
    arglist__14778 = cljs.core.next(arglist__14778);
    var f = cljs.core.first(arglist__14778);
    var args = cljs.core.rest(arglist__14778);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__14779__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__14779 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14779__delegate.call(this, x, y, more)
    };
    G__14779.cljs$lang$maxFixedArity = 2;
    G__14779.cljs$lang$applyTo = function(arglist__14780) {
      var x = cljs.core.first(arglist__14780);
      arglist__14780 = cljs.core.next(arglist__14780);
      var y = cljs.core.first(arglist__14780);
      var more = cljs.core.rest(arglist__14780);
      return G__14779__delegate(x, y, more)
    };
    G__14779.cljs$core$IFn$_invoke$arity$variadic = G__14779__delegate;
    return G__14779
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__14781 = pred;
        var G__14782 = cljs.core.next.call(null, coll);
        pred = G__14781;
        coll = G__14782;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__9141__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        var G__14783 = pred;
        var G__14784 = cljs.core.next.call(null, coll);
        pred = G__14783;
        coll = G__14784;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__14785 = null;
    var G__14785__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__14785__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__14785__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__14785__3 = function() {
      var G__14786__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__14786 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__14786__delegate.call(this, x, y, zs)
      };
      G__14786.cljs$lang$maxFixedArity = 2;
      G__14786.cljs$lang$applyTo = function(arglist__14787) {
        var x = cljs.core.first(arglist__14787);
        arglist__14787 = cljs.core.next(arglist__14787);
        var y = cljs.core.first(arglist__14787);
        var zs = cljs.core.rest(arglist__14787);
        return G__14786__delegate(x, y, zs)
      };
      G__14786.cljs$core$IFn$_invoke$arity$variadic = G__14786__delegate;
      return G__14786
    }();
    G__14785 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14785__0.call(this);
        case 1:
          return G__14785__1.call(this, x);
        case 2:
          return G__14785__2.call(this, x, y);
        default:
          return G__14785__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14785.cljs$lang$maxFixedArity = 2;
    G__14785.cljs$lang$applyTo = G__14785__3.cljs$lang$applyTo;
    return G__14785
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__14788__delegate = function(args) {
      return x
    };
    var G__14788 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14788__delegate.call(this, args)
    };
    G__14788.cljs$lang$maxFixedArity = 0;
    G__14788.cljs$lang$applyTo = function(arglist__14789) {
      var args = cljs.core.seq(arglist__14789);
      return G__14788__delegate(args)
    };
    G__14788.cljs$core$IFn$_invoke$arity$variadic = G__14788__delegate;
    return G__14788
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__14790 = null;
      var G__14790__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__14790__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__14790__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__14790__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__14790__4 = function() {
        var G__14791__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14791 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14791__delegate.call(this, x, y, z, args)
        };
        G__14791.cljs$lang$maxFixedArity = 3;
        G__14791.cljs$lang$applyTo = function(arglist__14792) {
          var x = cljs.core.first(arglist__14792);
          arglist__14792 = cljs.core.next(arglist__14792);
          var y = cljs.core.first(arglist__14792);
          arglist__14792 = cljs.core.next(arglist__14792);
          var z = cljs.core.first(arglist__14792);
          var args = cljs.core.rest(arglist__14792);
          return G__14791__delegate(x, y, z, args)
        };
        G__14791.cljs$core$IFn$_invoke$arity$variadic = G__14791__delegate;
        return G__14791
      }();
      G__14790 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14790__0.call(this);
          case 1:
            return G__14790__1.call(this, x);
          case 2:
            return G__14790__2.call(this, x, y);
          case 3:
            return G__14790__3.call(this, x, y, z);
          default:
            return G__14790__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14790.cljs$lang$maxFixedArity = 3;
      G__14790.cljs$lang$applyTo = G__14790__4.cljs$lang$applyTo;
      return G__14790
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__14793 = null;
      var G__14793__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__14793__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__14793__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__14793__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__14793__4 = function() {
        var G__14794__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__14794 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14794__delegate.call(this, x, y, z, args)
        };
        G__14794.cljs$lang$maxFixedArity = 3;
        G__14794.cljs$lang$applyTo = function(arglist__14795) {
          var x = cljs.core.first(arglist__14795);
          arglist__14795 = cljs.core.next(arglist__14795);
          var y = cljs.core.first(arglist__14795);
          arglist__14795 = cljs.core.next(arglist__14795);
          var z = cljs.core.first(arglist__14795);
          var args = cljs.core.rest(arglist__14795);
          return G__14794__delegate(x, y, z, args)
        };
        G__14794.cljs$core$IFn$_invoke$arity$variadic = G__14794__delegate;
        return G__14794
      }();
      G__14793 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14793__0.call(this);
          case 1:
            return G__14793__1.call(this, x);
          case 2:
            return G__14793__2.call(this, x, y);
          case 3:
            return G__14793__3.call(this, x, y, z);
          default:
            return G__14793__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14793.cljs$lang$maxFixedArity = 3;
      G__14793.cljs$lang$applyTo = G__14793__4.cljs$lang$applyTo;
      return G__14793
    }()
  };
  var comp__4 = function() {
    var G__14796__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__14797__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__14798 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__14799 = cljs.core.next.call(null, fs__$2);
              ret = G__14798;
              fs__$2 = G__14799;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__14797 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__14797__delegate.call(this, args)
        };
        G__14797.cljs$lang$maxFixedArity = 0;
        G__14797.cljs$lang$applyTo = function(arglist__14800) {
          var args = cljs.core.seq(arglist__14800);
          return G__14797__delegate(args)
        };
        G__14797.cljs$core$IFn$_invoke$arity$variadic = G__14797__delegate;
        return G__14797
      }()
    };
    var G__14796 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14796__delegate.call(this, f1, f2, f3, fs)
    };
    G__14796.cljs$lang$maxFixedArity = 3;
    G__14796.cljs$lang$applyTo = function(arglist__14801) {
      var f1 = cljs.core.first(arglist__14801);
      arglist__14801 = cljs.core.next(arglist__14801);
      var f2 = cljs.core.first(arglist__14801);
      arglist__14801 = cljs.core.next(arglist__14801);
      var f3 = cljs.core.first(arglist__14801);
      var fs = cljs.core.rest(arglist__14801);
      return G__14796__delegate(f1, f2, f3, fs)
    };
    G__14796.cljs$core$IFn$_invoke$arity$variadic = G__14796__delegate;
    return G__14796
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__14802__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__14802 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14802__delegate.call(this, args)
      };
      G__14802.cljs$lang$maxFixedArity = 0;
      G__14802.cljs$lang$applyTo = function(arglist__14803) {
        var args = cljs.core.seq(arglist__14803);
        return G__14802__delegate(args)
      };
      G__14802.cljs$core$IFn$_invoke$arity$variadic = G__14802__delegate;
      return G__14802
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__14804__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__14804 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14804__delegate.call(this, args)
      };
      G__14804.cljs$lang$maxFixedArity = 0;
      G__14804.cljs$lang$applyTo = function(arglist__14805) {
        var args = cljs.core.seq(arglist__14805);
        return G__14804__delegate(args)
      };
      G__14804.cljs$core$IFn$_invoke$arity$variadic = G__14804__delegate;
      return G__14804
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__14806__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__14806 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14806__delegate.call(this, args)
      };
      G__14806.cljs$lang$maxFixedArity = 0;
      G__14806.cljs$lang$applyTo = function(arglist__14807) {
        var args = cljs.core.seq(arglist__14807);
        return G__14806__delegate(args)
      };
      G__14806.cljs$core$IFn$_invoke$arity$variadic = G__14806__delegate;
      return G__14806
    }()
  };
  var partial__5 = function() {
    var G__14808__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__14809__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__14809 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__14809__delegate.call(this, args)
        };
        G__14809.cljs$lang$maxFixedArity = 0;
        G__14809.cljs$lang$applyTo = function(arglist__14810) {
          var args = cljs.core.seq(arglist__14810);
          return G__14809__delegate(args)
        };
        G__14809.cljs$core$IFn$_invoke$arity$variadic = G__14809__delegate;
        return G__14809
      }()
    };
    var G__14808 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14808__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__14808.cljs$lang$maxFixedArity = 4;
    G__14808.cljs$lang$applyTo = function(arglist__14811) {
      var f = cljs.core.first(arglist__14811);
      arglist__14811 = cljs.core.next(arglist__14811);
      var arg1 = cljs.core.first(arglist__14811);
      arglist__14811 = cljs.core.next(arglist__14811);
      var arg2 = cljs.core.first(arglist__14811);
      arglist__14811 = cljs.core.next(arglist__14811);
      var arg3 = cljs.core.first(arglist__14811);
      var more = cljs.core.rest(arglist__14811);
      return G__14808__delegate(f, arg1, arg2, arg3, more)
    };
    G__14808.cljs$core$IFn$_invoke$arity$variadic = G__14808__delegate;
    return G__14808
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__14812 = null;
      var G__14812__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__14812__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__14812__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__14812__4 = function() {
        var G__14813__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__14813 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14813__delegate.call(this, a, b, c, ds)
        };
        G__14813.cljs$lang$maxFixedArity = 3;
        G__14813.cljs$lang$applyTo = function(arglist__14814) {
          var a = cljs.core.first(arglist__14814);
          arglist__14814 = cljs.core.next(arglist__14814);
          var b = cljs.core.first(arglist__14814);
          arglist__14814 = cljs.core.next(arglist__14814);
          var c = cljs.core.first(arglist__14814);
          var ds = cljs.core.rest(arglist__14814);
          return G__14813__delegate(a, b, c, ds)
        };
        G__14813.cljs$core$IFn$_invoke$arity$variadic = G__14813__delegate;
        return G__14813
      }();
      G__14812 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__14812__1.call(this, a);
          case 2:
            return G__14812__2.call(this, a, b);
          case 3:
            return G__14812__3.call(this, a, b, c);
          default:
            return G__14812__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14812.cljs$lang$maxFixedArity = 3;
      G__14812.cljs$lang$applyTo = G__14812__4.cljs$lang$applyTo;
      return G__14812
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__14815 = null;
      var G__14815__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__14815__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__14815__4 = function() {
        var G__14816__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__14816 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14816__delegate.call(this, a, b, c, ds)
        };
        G__14816.cljs$lang$maxFixedArity = 3;
        G__14816.cljs$lang$applyTo = function(arglist__14817) {
          var a = cljs.core.first(arglist__14817);
          arglist__14817 = cljs.core.next(arglist__14817);
          var b = cljs.core.first(arglist__14817);
          arglist__14817 = cljs.core.next(arglist__14817);
          var c = cljs.core.first(arglist__14817);
          var ds = cljs.core.rest(arglist__14817);
          return G__14816__delegate(a, b, c, ds)
        };
        G__14816.cljs$core$IFn$_invoke$arity$variadic = G__14816__delegate;
        return G__14816
      }();
      G__14815 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14815__2.call(this, a, b);
          case 3:
            return G__14815__3.call(this, a, b, c);
          default:
            return G__14815__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14815.cljs$lang$maxFixedArity = 3;
      G__14815.cljs$lang$applyTo = G__14815__4.cljs$lang$applyTo;
      return G__14815
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__14818 = null;
      var G__14818__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__14818__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__14818__4 = function() {
        var G__14819__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__14819 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14819__delegate.call(this, a, b, c, ds)
        };
        G__14819.cljs$lang$maxFixedArity = 3;
        G__14819.cljs$lang$applyTo = function(arglist__14820) {
          var a = cljs.core.first(arglist__14820);
          arglist__14820 = cljs.core.next(arglist__14820);
          var b = cljs.core.first(arglist__14820);
          arglist__14820 = cljs.core.next(arglist__14820);
          var c = cljs.core.first(arglist__14820);
          var ds = cljs.core.rest(arglist__14820);
          return G__14819__delegate(a, b, c, ds)
        };
        G__14819.cljs$core$IFn$_invoke$arity$variadic = G__14819__delegate;
        return G__14819
      }();
      G__14818 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14818__2.call(this, a, b);
          case 3:
            return G__14818__3.call(this, a, b, c);
          default:
            return G__14818__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14818.cljs$lang$maxFixedArity = 3;
      G__14818.cljs$lang$applyTo = G__14818__4.cljs$lang$applyTo;
      return G__14818
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__9959__auto___14821 = size;
          var i_14822 = 0;
          while(true) {
            if(i_14822 < n__9959__auto___14821) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_14822, cljs.core._nth.call(null, c, i_14822)));
              var G__14823 = i_14822 + 1;
              i_14822 = G__14823;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4094__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4094__auto__) {
      var s = temp__4094__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__9959__auto___14824 = size;
        var i_14825 = 0;
        while(true) {
          if(i_14825 < n__9959__auto___14824) {
            var x_14826 = f.call(null, cljs.core._nth.call(null, c, i_14825));
            if(x_14826 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_14826)
            }
            var G__14827 = i_14825 + 1;
            i_14825 = G__14827;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__9959__auto___14828 = size;
          var i_14829 = 0;
          while(true) {
            if(i_14829 < n__9959__auto___14828) {
              var x_14830 = f.call(null, idx + i_14829, cljs.core._nth.call(null, c, i_14829));
              if(x_14830 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_14830)
              }
              var G__14831 = i_14829 + 1;
              i_14829 = G__14831;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            return p.call(null, y)
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__9129__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__14838__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args))
        };
        var G__14838 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14838__delegate.call(this, x, y, z, args)
        };
        G__14838.cljs$lang$maxFixedArity = 3;
        G__14838.cljs$lang$applyTo = function(arglist__14839) {
          var x = cljs.core.first(arglist__14839);
          arglist__14839 = cljs.core.next(arglist__14839);
          var y = cljs.core.first(arglist__14839);
          arglist__14839 = cljs.core.next(arglist__14839);
          var z = cljs.core.first(arglist__14839);
          var args = cljs.core.rest(arglist__14839);
          return G__14838__delegate(x, y, z, args)
        };
        G__14838.cljs$core$IFn$_invoke$arity$variadic = G__14838__delegate;
        return G__14838
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            return p2.call(null, x)
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__9129__auto____$1)) {
              var and__9129__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__9129__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__9129__auto____$2
              }
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__9129__auto____$1)) {
              var and__9129__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__9129__auto____$2)) {
                var and__9129__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__9129__auto____$3)) {
                  var and__9129__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__9129__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__9129__auto____$4
                  }
                }else {
                  return and__9129__auto____$3
                }
              }else {
                return and__9129__auto____$2
              }
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__14840__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__14832_SHARP_) {
            var and__9129__auto__ = p1.call(null, p1__14832_SHARP_);
            if(cljs.core.truth_(and__9129__auto__)) {
              return p2.call(null, p1__14832_SHARP_)
            }else {
              return and__9129__auto__
            }
          }, args))
        };
        var G__14840 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14840__delegate.call(this, x, y, z, args)
        };
        G__14840.cljs$lang$maxFixedArity = 3;
        G__14840.cljs$lang$applyTo = function(arglist__14841) {
          var x = cljs.core.first(arglist__14841);
          arglist__14841 = cljs.core.next(arglist__14841);
          var y = cljs.core.first(arglist__14841);
          arglist__14841 = cljs.core.next(arglist__14841);
          var z = cljs.core.first(arglist__14841);
          var args = cljs.core.rest(arglist__14841);
          return G__14840__delegate(x, y, z, args)
        };
        G__14840.cljs$core$IFn$_invoke$arity$variadic = G__14840__delegate;
        return G__14840
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__9129__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__9129__auto____$1)) {
              var and__9129__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__9129__auto____$2)) {
                var and__9129__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__9129__auto____$3)) {
                  var and__9129__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__9129__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__9129__auto____$4
                  }
                }else {
                  return and__9129__auto____$3
                }
              }else {
                return and__9129__auto____$2
              }
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__9129__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__9129__auto____$1)) {
              var and__9129__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__9129__auto____$2)) {
                var and__9129__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__9129__auto____$3)) {
                  var and__9129__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__9129__auto____$4)) {
                    var and__9129__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__9129__auto____$5)) {
                      var and__9129__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__9129__auto____$6)) {
                        var and__9129__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__9129__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__9129__auto____$7
                        }
                      }else {
                        return and__9129__auto____$6
                      }
                    }else {
                      return and__9129__auto____$5
                    }
                  }else {
                    return and__9129__auto____$4
                  }
                }else {
                  return and__9129__auto____$3
                }
              }else {
                return and__9129__auto____$2
              }
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__14842__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__14833_SHARP_) {
            var and__9129__auto__ = p1.call(null, p1__14833_SHARP_);
            if(cljs.core.truth_(and__9129__auto__)) {
              var and__9129__auto____$1 = p2.call(null, p1__14833_SHARP_);
              if(cljs.core.truth_(and__9129__auto____$1)) {
                return p3.call(null, p1__14833_SHARP_)
              }else {
                return and__9129__auto____$1
              }
            }else {
              return and__9129__auto__
            }
          }, args))
        };
        var G__14842 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14842__delegate.call(this, x, y, z, args)
        };
        G__14842.cljs$lang$maxFixedArity = 3;
        G__14842.cljs$lang$applyTo = function(arglist__14843) {
          var x = cljs.core.first(arglist__14843);
          arglist__14843 = cljs.core.next(arglist__14843);
          var y = cljs.core.first(arglist__14843);
          arglist__14843 = cljs.core.next(arglist__14843);
          var z = cljs.core.first(arglist__14843);
          var args = cljs.core.rest(arglist__14843);
          return G__14842__delegate(x, y, z, args)
        };
        G__14842.cljs$core$IFn$_invoke$arity$variadic = G__14842__delegate;
        return G__14842
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__14844__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__14834_SHARP_) {
            return p1__14834_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__14835_SHARP_) {
            var and__9129__auto__ = p1__14835_SHARP_.call(null, x);
            if(cljs.core.truth_(and__9129__auto__)) {
              return p1__14835_SHARP_.call(null, y)
            }else {
              return and__9129__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__14836_SHARP_) {
            var and__9129__auto__ = p1__14836_SHARP_.call(null, x);
            if(cljs.core.truth_(and__9129__auto__)) {
              var and__9129__auto____$1 = p1__14836_SHARP_.call(null, y);
              if(cljs.core.truth_(and__9129__auto____$1)) {
                return p1__14836_SHARP_.call(null, z)
              }else {
                return and__9129__auto____$1
              }
            }else {
              return and__9129__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__14845__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__14837_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__14837_SHARP_, args)
            }, ps__$1))
          };
          var G__14845 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14845__delegate.call(this, x, y, z, args)
          };
          G__14845.cljs$lang$maxFixedArity = 3;
          G__14845.cljs$lang$applyTo = function(arglist__14846) {
            var x = cljs.core.first(arglist__14846);
            arglist__14846 = cljs.core.next(arglist__14846);
            var y = cljs.core.first(arglist__14846);
            arglist__14846 = cljs.core.next(arglist__14846);
            var z = cljs.core.first(arglist__14846);
            var args = cljs.core.rest(arglist__14846);
            return G__14845__delegate(x, y, z, args)
          };
          G__14845.cljs$core$IFn$_invoke$arity$variadic = G__14845__delegate;
          return G__14845
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__14844 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14844__delegate.call(this, p1, p2, p3, ps)
    };
    G__14844.cljs$lang$maxFixedArity = 3;
    G__14844.cljs$lang$applyTo = function(arglist__14847) {
      var p1 = cljs.core.first(arglist__14847);
      arglist__14847 = cljs.core.next(arglist__14847);
      var p2 = cljs.core.first(arglist__14847);
      arglist__14847 = cljs.core.next(arglist__14847);
      var p3 = cljs.core.first(arglist__14847);
      var ps = cljs.core.rest(arglist__14847);
      return G__14844__delegate(p1, p2, p3, ps)
    };
    G__14844.cljs$core$IFn$_invoke$arity$variadic = G__14844__delegate;
    return G__14844
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__9141__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__9141__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__9141__auto____$1)) {
            return or__9141__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__14854__delegate = function(x, y, z, args) {
          var or__9141__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__14854 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14854__delegate.call(this, x, y, z, args)
        };
        G__14854.cljs$lang$maxFixedArity = 3;
        G__14854.cljs$lang$applyTo = function(arglist__14855) {
          var x = cljs.core.first(arglist__14855);
          arglist__14855 = cljs.core.next(arglist__14855);
          var y = cljs.core.first(arglist__14855);
          arglist__14855 = cljs.core.next(arglist__14855);
          var z = cljs.core.first(arglist__14855);
          var args = cljs.core.rest(arglist__14855);
          return G__14854__delegate(x, y, z, args)
        };
        G__14854.cljs$core$IFn$_invoke$arity$variadic = G__14854__delegate;
        return G__14854
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__9141__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__9141__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__9141__auto____$1)) {
            return or__9141__auto____$1
          }else {
            var or__9141__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__9141__auto____$2)) {
              return or__9141__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__9141__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__9141__auto____$1)) {
            return or__9141__auto____$1
          }else {
            var or__9141__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__9141__auto____$2)) {
              return or__9141__auto____$2
            }else {
              var or__9141__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__9141__auto____$3)) {
                return or__9141__auto____$3
              }else {
                var or__9141__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__9141__auto____$4)) {
                  return or__9141__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14856__delegate = function(x, y, z, args) {
          var or__9141__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return cljs.core.some.call(null, function(p1__14848_SHARP_) {
              var or__9141__auto____$1 = p1.call(null, p1__14848_SHARP_);
              if(cljs.core.truth_(or__9141__auto____$1)) {
                return or__9141__auto____$1
              }else {
                return p2.call(null, p1__14848_SHARP_)
              }
            }, args)
          }
        };
        var G__14856 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14856__delegate.call(this, x, y, z, args)
        };
        G__14856.cljs$lang$maxFixedArity = 3;
        G__14856.cljs$lang$applyTo = function(arglist__14857) {
          var x = cljs.core.first(arglist__14857);
          arglist__14857 = cljs.core.next(arglist__14857);
          var y = cljs.core.first(arglist__14857);
          arglist__14857 = cljs.core.next(arglist__14857);
          var z = cljs.core.first(arglist__14857);
          var args = cljs.core.rest(arglist__14857);
          return G__14856__delegate(x, y, z, args)
        };
        G__14856.cljs$core$IFn$_invoke$arity$variadic = G__14856__delegate;
        return G__14856
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__9141__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__9141__auto____$1)) {
            return or__9141__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__9141__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__9141__auto____$1)) {
            return or__9141__auto____$1
          }else {
            var or__9141__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__9141__auto____$2)) {
              return or__9141__auto____$2
            }else {
              var or__9141__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__9141__auto____$3)) {
                return or__9141__auto____$3
              }else {
                var or__9141__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__9141__auto____$4)) {
                  return or__9141__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__9141__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var or__9141__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__9141__auto____$1)) {
            return or__9141__auto____$1
          }else {
            var or__9141__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__9141__auto____$2)) {
              return or__9141__auto____$2
            }else {
              var or__9141__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__9141__auto____$3)) {
                return or__9141__auto____$3
              }else {
                var or__9141__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__9141__auto____$4)) {
                  return or__9141__auto____$4
                }else {
                  var or__9141__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__9141__auto____$5)) {
                    return or__9141__auto____$5
                  }else {
                    var or__9141__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__9141__auto____$6)) {
                      return or__9141__auto____$6
                    }else {
                      var or__9141__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__9141__auto____$7)) {
                        return or__9141__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14858__delegate = function(x, y, z, args) {
          var or__9141__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return cljs.core.some.call(null, function(p1__14849_SHARP_) {
              var or__9141__auto____$1 = p1.call(null, p1__14849_SHARP_);
              if(cljs.core.truth_(or__9141__auto____$1)) {
                return or__9141__auto____$1
              }else {
                var or__9141__auto____$2 = p2.call(null, p1__14849_SHARP_);
                if(cljs.core.truth_(or__9141__auto____$2)) {
                  return or__9141__auto____$2
                }else {
                  return p3.call(null, p1__14849_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__14858 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14858__delegate.call(this, x, y, z, args)
        };
        G__14858.cljs$lang$maxFixedArity = 3;
        G__14858.cljs$lang$applyTo = function(arglist__14859) {
          var x = cljs.core.first(arglist__14859);
          arglist__14859 = cljs.core.next(arglist__14859);
          var y = cljs.core.first(arglist__14859);
          arglist__14859 = cljs.core.next(arglist__14859);
          var z = cljs.core.first(arglist__14859);
          var args = cljs.core.rest(arglist__14859);
          return G__14858__delegate(x, y, z, args)
        };
        G__14858.cljs$core$IFn$_invoke$arity$variadic = G__14858__delegate;
        return G__14858
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__14860__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__14850_SHARP_) {
            return p1__14850_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__14851_SHARP_) {
            var or__9141__auto__ = p1__14851_SHARP_.call(null, x);
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return p1__14851_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__14852_SHARP_) {
            var or__9141__auto__ = p1__14852_SHARP_.call(null, x);
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              var or__9141__auto____$1 = p1__14852_SHARP_.call(null, y);
              if(cljs.core.truth_(or__9141__auto____$1)) {
                return or__9141__auto____$1
              }else {
                return p1__14852_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__14861__delegate = function(x, y, z, args) {
            var or__9141__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return cljs.core.some.call(null, function(p1__14853_SHARP_) {
                return cljs.core.some.call(null, p1__14853_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__14861 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14861__delegate.call(this, x, y, z, args)
          };
          G__14861.cljs$lang$maxFixedArity = 3;
          G__14861.cljs$lang$applyTo = function(arglist__14862) {
            var x = cljs.core.first(arglist__14862);
            arglist__14862 = cljs.core.next(arglist__14862);
            var y = cljs.core.first(arglist__14862);
            arglist__14862 = cljs.core.next(arglist__14862);
            var z = cljs.core.first(arglist__14862);
            var args = cljs.core.rest(arglist__14862);
            return G__14861__delegate(x, y, z, args)
          };
          G__14861.cljs$core$IFn$_invoke$arity$variadic = G__14861__delegate;
          return G__14861
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__14860 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14860__delegate.call(this, p1, p2, p3, ps)
    };
    G__14860.cljs$lang$maxFixedArity = 3;
    G__14860.cljs$lang$applyTo = function(arglist__14863) {
      var p1 = cljs.core.first(arglist__14863);
      arglist__14863 = cljs.core.next(arglist__14863);
      var p2 = cljs.core.first(arglist__14863);
      arglist__14863 = cljs.core.next(arglist__14863);
      var p3 = cljs.core.first(arglist__14863);
      var ps = cljs.core.rest(arglist__14863);
      return G__14860__delegate(p1, p2, p3, ps)
    };
    G__14860.cljs$core$IFn$_invoke$arity$variadic = G__14860__delegate;
    return G__14860
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__9959__auto___14865 = size;
          var i_14866 = 0;
          while(true) {
            if(i_14866 < n__9959__auto___14865) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_14866)));
              var G__14867 = i_14866 + 1;
              i_14866 = G__14867;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__14868__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__14864_SHARP_) {
        return cljs.core.apply.call(null, f, p1__14864_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__14868 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14868__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14868.cljs$lang$maxFixedArity = 4;
    G__14868.cljs$lang$applyTo = function(arglist__14869) {
      var f = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var c1 = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var c2 = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var c3 = cljs.core.first(arglist__14869);
      var colls = cljs.core.rest(arglist__14869);
      return G__14868__delegate(f, c1, c2, c3, colls)
    };
    G__14868.cljs$core$IFn$_invoke$arity$variadic = G__14868__delegate;
    return G__14868
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(n__$1 > 0 && s) {
        var G__14870 = n__$1 - 1;
        var G__14871 = cljs.core.rest.call(null, s);
        n__$1 = G__14870;
        coll__$1 = G__14871;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__14872 = cljs.core.next.call(null, s);
      var G__14873 = cljs.core.next.call(null, lead);
      s = G__14872;
      lead = G__14873;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__9129__auto__ = s;
        if(and__9129__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__9129__auto__
        }
      }())) {
        var G__14874 = pred__$1;
        var G__14875 = cljs.core.rest.call(null, s);
        pred__$1 = G__14874;
        coll__$1 = G__14875;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4094__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4094__auto__) {
      var s = temp__4094__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__14876__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__14876 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14876__delegate.call(this, c1, c2, colls)
    };
    G__14876.cljs$lang$maxFixedArity = 2;
    G__14876.cljs$lang$applyTo = function(arglist__14877) {
      var c1 = cljs.core.first(arglist__14877);
      arglist__14877 = cljs.core.next(arglist__14877);
      var c2 = cljs.core.first(arglist__14877);
      var colls = cljs.core.rest(arglist__14877);
      return G__14876__delegate(c1, c2, colls)
    };
    G__14876.cljs$core$IFn$_invoke$arity$variadic = G__14876__delegate;
    return G__14876
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var coll__$1 = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__14878__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__14878 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14878__delegate.call(this, f, coll, colls)
    };
    G__14878.cljs$lang$maxFixedArity = 2;
    G__14878.cljs$lang$applyTo = function(arglist__14879) {
      var f = cljs.core.first(arglist__14879);
      arglist__14879 = cljs.core.next(arglist__14879);
      var coll = cljs.core.first(arglist__14879);
      var colls = cljs.core.rest(arglist__14879);
      return G__14878__delegate(f, coll, colls)
    };
    G__14878.cljs$core$IFn$_invoke$arity$variadic = G__14878__delegate;
    return G__14878
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4094__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4094__auto__) {
      var s = temp__4094__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__9959__auto___14880 = size;
        var i_14881 = 0;
        while(true) {
          if(i_14881 < n__9959__auto___14880) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_14881)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_14881))
            }else {
            }
            var G__14882 = i_14881 + 1;
            i_14881 = G__14882;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__14883_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__14883_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__14885 = to;
      if(G__14885) {
        var bit__9755__auto__ = G__14885.cljs$lang$protocol_mask$partition1$ & 4;
        if(bit__9755__auto__ || G__14885.cljs$core$IEditableCollection$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__14886__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__14886 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14886__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14886.cljs$lang$maxFixedArity = 4;
    G__14886.cljs$lang$applyTo = function(arglist__14887) {
      var f = cljs.core.first(arglist__14887);
      arglist__14887 = cljs.core.next(arglist__14887);
      var c1 = cljs.core.first(arglist__14887);
      arglist__14887 = cljs.core.next(arglist__14887);
      var c2 = cljs.core.first(arglist__14887);
      arglist__14887 = cljs.core.next(arglist__14887);
      var c3 = cljs.core.first(arglist__14887);
      var colls = cljs.core.rest(arglist__14887);
      return G__14886__delegate(f, c1, c2, c3, colls)
    };
    G__14886.cljs$core$IFn$_invoke$arity$variadic = G__14886__delegate;
    return G__14886
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__14889 = m__$1;
          if(G__14889) {
            var bit__9762__auto__ = G__14889.cljs$lang$protocol_mask$partition0$ & 256;
            if(bit__9762__auto__ || G__14889.cljs$core$ILookup$) {
              return true
            }else {
              if(!G__14889.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14889)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14889)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__14890 = sentinel;
            var G__14891 = m__$2;
            var G__14892 = cljs.core.next.call(null, ks__$1);
            sentinel = G__14890;
            m__$1 = G__14891;
            ks__$1 = G__14892;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__14893, v) {
  var vec__14895 = p__14893;
  var k = cljs.core.nth.call(null, vec__14895, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__14895, 1);
  if(ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14896, f) {
    var vec__14906 = p__14896;
    var k = cljs.core.nth.call(null, vec__14906, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14906, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__14897, f, a) {
    var vec__14907 = p__14897;
    var k = cljs.core.nth.call(null, vec__14907, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14907, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__14898, f, a, b) {
    var vec__14908 = p__14898;
    var k = cljs.core.nth.call(null, vec__14908, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14908, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__14899, f, a, b, c) {
    var vec__14909 = p__14899;
    var k = cljs.core.nth.call(null, vec__14909, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14909, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__14911__delegate = function(m, p__14900, f, a, b, c, args) {
      var vec__14910 = p__14900;
      var k = cljs.core.nth.call(null, vec__14910, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__14910, 1);
      if(ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__14911 = function(m, p__14900, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__14911__delegate.call(this, m, p__14900, f, a, b, c, args)
    };
    G__14911.cljs$lang$maxFixedArity = 6;
    G__14911.cljs$lang$applyTo = function(arglist__14912) {
      var m = cljs.core.first(arglist__14912);
      arglist__14912 = cljs.core.next(arglist__14912);
      var p__14900 = cljs.core.first(arglist__14912);
      arglist__14912 = cljs.core.next(arglist__14912);
      var f = cljs.core.first(arglist__14912);
      arglist__14912 = cljs.core.next(arglist__14912);
      var a = cljs.core.first(arglist__14912);
      arglist__14912 = cljs.core.next(arglist__14912);
      var b = cljs.core.first(arglist__14912);
      arglist__14912 = cljs.core.next(arglist__14912);
      var c = cljs.core.first(arglist__14912);
      var args = cljs.core.rest(arglist__14912);
      return G__14911__delegate(m, p__14900, f, a, b, c, args)
    };
    G__14911.cljs$core$IFn$_invoke$arity$variadic = G__14911__delegate;
    return G__14911
  }();
  update_in = function(m, p__14900, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14900, f);
      case 4:
        return update_in__4.call(this, m, p__14900, f, a);
      case 5:
        return update_in__5.call(this, m, p__14900, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14900, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14900, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__9683__auto__, writer__9684__auto__, opts__9685__auto__) {
  return cljs.core._write.call(null, writer__9684__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr))
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__14913 = ll - 5;
      var G__14914 = r;
      ll = G__14913;
      ret = G__14914;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(0 <= i && i < pv.cnt) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__14915 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__14916 = level - 5;
          node = G__14915;
          level = G__14916;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= k && k < self__.cnt) {
    if(cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14918 = null;
  var G__14918__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__14918__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__14918 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14918__2.call(this, self__, k);
      case 3:
        return G__14918__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14918
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14917) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14917)))
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__14919 = j + 1;
              var G__14920 = init__$2;
              j = G__14919;
              init__$1 = G__14920;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__14921 = i + step_init[0];
        i = G__14921;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__9959__auto___14922 = len;
    var i_14923 = 0;
    while(true) {
      if(i_14923 < n__9959__auto___14922) {
        new_tail[i_14923] = self__.tail[i_14923];
        var G__14924 = i_14923 + 1;
        i_14923 = G__14924;
        continue
      }else {
      }
      break
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__14925 = i + 1;
        var G__14926 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__14925;
        out = G__14926;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if(args instanceof cljs.core.IndexedSeq) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true)
    }else {
      return cljs.core.vec.call(null, args)
    }
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14927) {
    var args = cljs.core.seq(arglist__14927);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_next.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_rest.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__9448__auto__ = self__.end;
    var y__9449__auto__ = v_pos + 1;
    return x__9448__auto__ > y__9449__auto__ ? x__9448__auto__ : y__9449__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__14929 = null;
  var G__14929__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__14929__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__14929 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14929__2.call(this, self__, k);
      case 3:
        return G__14929__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14929
}();
cljs.core.Subvec.prototype.apply = function(self__, args14928) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14928)))
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__14930 = meta;
      var G__14931 = v.v;
      var G__14932 = v.start + start;
      var G__14933 = v.start + end;
      var G__14934 = __hash;
      meta = G__14930;
      v = G__14931;
      start = G__14932;
      end = G__14933;
      __hash = G__14934;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr))
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj14938 = {};
    return obj14938
  }(), cljs.core.aclone.call(null, node.arr))
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(0 <= i && i < tv.cnt) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__14939 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__14940 = level - 5;
          node = G__14939;
          level = G__14940;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14942 = null;
  var G__14942__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14942__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14942 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14942__2.call(this, self__, k);
      case 3:
        return G__14942__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14942
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14941) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14941)))
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(0 <= n && n < self__.cnt) {
      if(cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1
      }
    }else {
      if(n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4092__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4092__auto__) {
    var f1 = temp__4092__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__9141__auto__ = self__.rear;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__9141__auto__ = self__.front;
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4092__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4092__auto__) {
      var f1 = temp__4092__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll__$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__14943 = i + incr;
        i = G__14943;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__14944 = i + 1;
      var G__14945 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__14944;
      out = G__14945;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj14949 = {};
    return obj14949
  }();
  var l = ks.length;
  var i_14950 = 0;
  while(true) {
    if(i_14950 < l) {
      var k_14951 = ks[i_14950];
      new_obj[k_14951] = obj[k_14951];
      var G__14952 = i_14950 + 1;
      i_14950 = G__14952;
      continue
    }else {
    }
    break
  }
  return new_obj
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k)) {
    if(self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14955 = null;
  var G__14955__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14955__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14955 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14955__2.call(this, self__, k);
      case 3:
        return G__14955__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14955
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14954) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14954)))
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14956 = cljs.core.rest.call(null, keys__$1);
        var G__14957 = init__$2;
        keys__$1 = G__14956;
        init__$1 = G__14957;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__14953_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14953_SHARP_, self__.strobj[p1__14953_SHARP_]], null)
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll__$1
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj14959 = {};
  return obj14959
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14960 = i + 2;
          i = G__14960;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14961 = i + 2;
          i = G__14961;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14962 = i + 2;
          i = G__14962;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14963 = i + 2;
          i = G__14963;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14964 = i + 2;
          i = G__14964;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14965 = 0;
  while(true) {
    if(i_14965 < l) {
      narr[i_14965] = arr[i_14965];
      var G__14966 = i_14965 + 1;
      i_14965 = G__14966;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj14969 = {};
    return obj14969
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__14970 = cljs.core.aclone.call(null, self__.arr);
          G__14970[idx + 1] = v;
          return G__14970
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14971 = null;
  var G__14971__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14971__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14971 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14971__2.call(this, self__, k);
      case 3:
        return G__14971__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14971
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14967) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14967)))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14972 = i + 2;
        var G__14973 = init__$2;
        i = G__14972;
        init__$1 = G__14973;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__14974 = s + 2;
            var G__14975 = d;
            s = G__14974;
            d = G__14975;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__14976 = s + 2;
              var G__14977 = d + 2;
              s = G__14976;
              d = G__14977;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll__$1
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if(no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
  }else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(i < len) {
        var G__14978 = i + 2;
        var G__14979 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__14978;
        ret = G__14979;
        continue
      }else {
        return cljs.core._persistent_BANG_.call(null, ret)
      }
      break
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__14980_14982 = self__.arr;
      G__14980_14982.pop();
      G__14980_14982.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll__$1
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll__$1
      }else {
        self__.arr[idx + 1] = val;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__14981 = o;
      if(G__14981) {
        var bit__9762__auto__ = G__14981.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__9762__auto__ || G__14981.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__14981.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14981)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14981)
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while(true) {
        var temp__4092__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4092__auto__)) {
          var e = temp__4092__auto__;
          var G__14983 = cljs.core.next.call(null, es);
          var G__14984 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__14983;
          tcoll__$2 = G__14984;
          continue
        }else {
          return tcoll__$2
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__14985 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__14986 = i + 2;
      out = G__14985;
      i = G__14986;
      continue
    }else {
      return out
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__9683__auto__, writer__9684__auto__, opts__9685__auto__) {
  return cljs.core._write.call(null, writer__9684__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14989 = cljs.core.aclone.call(null, arr);
    G__14989[i] = a;
    return G__14989
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14990 = cljs.core.aclone.call(null, arr);
    G__14990[i] = a;
    G__14990[j] = b;
    return G__14990
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14991 = i + 2;
        var G__14992 = init__$2;
        i = G__14991;
        init__$1 = G__14992;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_14993 = 0;
        var j_14994 = 0;
        while(true) {
          if(i_14993 < 32) {
            if((self__.bitmap >>> i_14993 & 1) === 0) {
              var G__14995 = i_14993 + 1;
              var G__14996 = j_14994;
              i_14993 = G__14995;
              j_14994 = G__14996;
              continue
            }else {
              nodes[i_14993] = !(self__.arr[j_14994] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_14994]), self__.arr[j_14994], self__.arr[j_14994 + 1], added_leaf_QMARK_) : self__.arr[j_14994 + 1];
              var G__14997 = i_14993 + 1;
              var G__14998 = j_14994 + 2;
              i_14993 = G__14997;
              j_14994 = G__14998;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_14999 = 0;
      var j_15000 = 0;
      while(true) {
        if(i_14999 < 32) {
          if((self__.bitmap >>> i_14999 & 1) === 0) {
            var G__15001 = i_14999 + 1;
            var G__15002 = j_15000;
            i_14999 = G__15001;
            j_15000 = G__15002;
            continue
          }else {
            nodes[i_14999] = !(self__.arr[j_15000] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_15000]), self__.arr[j_15000], self__.arr[j_15000 + 1], added_leaf_QMARK_) : self__.arr[j_15000 + 1];
            var G__15003 = i_14999 + 1;
            var G__15004 = j_15000 + 2;
            i_14999 = G__15003;
            j_15000 = G__15004;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15005 = i + 1;
        var G__15006 = j + 2;
        var G__15007 = bitmap | 1 << i;
        i = G__15005;
        j = G__15006;
        bitmap = G__15007;
        continue
      }else {
        var G__15008 = i + 1;
        var G__15009 = j;
        var G__15010 = bitmap;
        i = G__15008;
        j = G__15009;
        bitmap = G__15010;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr))
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__15011 = i + 1;
          var G__15012 = init__$2;
          i = G__15011;
          init__$1 = G__15012;
          continue
        }
      }else {
        var G__15013 = i + 1;
        var G__15014 = init__$1;
        i = G__15013;
        init__$1 = G__15014;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__15015 = i + 2;
        i = G__15015;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4092__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4092__auto__)) {
              var node = temp__4092__auto__;
              var temp__4092__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4092__auto____$1)) {
                var node_seq = temp__4092__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__15016 = j + 2;
                j = G__15016;
                continue
              }
            }else {
              var G__15017 = j + 2;
              j = G__15017;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4092__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4092__auto__)) {
            var nj = temp__4092__auto__;
            var temp__4092__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4092__auto____$1)) {
              var ns = temp__4092__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__15018 = j + 1;
              j = G__15018;
              continue
            }
          }else {
            var G__15019 = j + 1;
            j = G__15019;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15022 = {};
    return obj15022
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15023 = null;
  var G__15023__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__15023__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__15023 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15023__2.call(this, self__, k);
      case 3:
        return G__15023__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15023
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15020) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15020)))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll__$1
    }
  }else {
    if(self__.root == null) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll__$1
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__15024 = i + 1;
      var G__15025 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__15024;
      out = G__15025;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__15026 = o;
      if(G__15026) {
        var bit__9762__auto__ = G__15026.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__9762__auto__ || G__15026.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__15026.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15026)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15026)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4092__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4092__auto__)) {
          var e = temp__4092__auto__;
          var G__15027 = cljs.core.next.call(null, es);
          var G__15028 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__15027;
          tcoll__$1 = G__15028;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__15029 = ascending_QMARK_ ? t.left : t.right;
      var G__15030 = cljs.core.conj.call(null, stack__$1, t);
      t = G__15029;
      stack__$1 = G__15030;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15032 = null;
  var G__15032__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__15032__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__15032 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15032__2.call(this, self__, k);
      case 3:
        return G__15032__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15032
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15031) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15031)))
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__15034 = null;
  var G__15034__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__15034__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__15034 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15034__2.call(this, self__, k);
      case 3:
        return G__15034__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15034
}();
cljs.core.RedNode.prototype.apply = function(self__, args15033) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15033)))
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(!(del == null) || !(found[0] == null)) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(!(del == null) || !(found[0] == null)) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15036 = null;
  var G__15036__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__15036__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__15036 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15036__2.call(this, self__, k);
      case 3:
        return G__15036__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15036
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15035) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15035)))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__15037 = t.left;
          t = G__15037;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__15038 = t.right;
            t = G__15038;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__15039 = cljs.core.conj.call(null, stack, t);
              var G__15040 = t.left;
              stack = G__15039;
              t = G__15040;
              continue
            }else {
              var G__15041 = stack;
              var G__15042 = t.right;
              stack = G__15041;
              t = G__15042;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__15043 = cljs.core.conj.call(null, stack, t);
                var G__15044 = t.right;
                stack = G__15043;
                t = G__15044;
                continue
              }else {
                var G__15045 = stack;
                var G__15046 = t.left;
                stack = G__15045;
                t = G__15046;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__15047 = cljs.core.nnext.call(null, in$);
        var G__15048 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15047;
        out = G__15048;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15049) {
    var keyvals = cljs.core.seq(arglist__15049);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15050) {
    var keyvals = cljs.core.seq(arglist__15050);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15054 = {};
      return obj15054
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__15055 = cljs.core.nnext.call(null, kvs);
        kvs = G__15055;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15056) {
    var keyvals = cljs.core.seq(arglist__15056);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__15057 = cljs.core.nnext.call(null, in$);
        var G__15058 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15057;
        out = G__15058;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15059) {
    var keyvals = cljs.core.seq(arglist__15059);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__15060 = cljs.core.nnext.call(null, in$);
        var G__15061 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15060;
        out = G__15061;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15062) {
    var comparator = cljs.core.first(arglist__15062);
    var keyvals = cljs.core.rest(arglist__15062);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15063 = self__.mseq;
    if(G__15063) {
      var bit__9762__auto__ = G__15063.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__9762__auto__ || G__15063.cljs$core$INext$) {
        return true
      }else {
        if(!G__15063.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15063)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15063)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15064 = self__.mseq;
    if(G__15064) {
      var bit__9762__auto__ = G__15064.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__9762__auto__ || G__15064.cljs$core$INext$) {
        return true
      }else {
        if(!G__15064.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15064)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15064)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4094__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4094__auto__) {
    var mseq = temp__4094__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15065 = self__.mseq;
    if(G__15065) {
      var bit__9762__auto__ = G__15065.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__9762__auto__ || G__15065.cljs$core$INext$) {
        return true
      }else {
        if(!G__15065.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15065)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15065)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15066 = self__.mseq;
    if(G__15066) {
      var bit__9762__auto__ = G__15066.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__9762__auto__ || G__15066.cljs$core$INext$) {
        return true
      }else {
        if(!G__15066.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15066)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15066)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4094__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4094__auto__) {
    var mseq = temp__4094__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__15067_SHARP_, p2__15068_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__9141__auto__ = p1__15067_SHARP_;
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__15068_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15069) {
    var maps = cljs.core.seq(arglist__15069);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__9141__auto__ = m1;
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15070) {
    var f = cljs.core.first(arglist__15070);
    var maps = cljs.core.rest(arglist__15070);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__15071 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__15072 = cljs.core.next.call(null, keys);
      ret = G__15071;
      keys = G__15072;
      continue
    }else {
      return ret
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15075 = null;
  var G__15075__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__15075__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__15075 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15075__2.call(this, self__, k);
      case 3:
        return G__15075__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15075
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15074) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15074)))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__15073_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__15073_SHARP_)
  }, other)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(i < len) {
        var G__15076 = i + 1;
        var G__15077 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__15076;
        out = G__15077;
        continue
      }else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null)
      }
      break
    }
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__15078 = i + 2;
        var G__15079 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__15078;
        out = G__15079;
        continue
      }else {
        return cljs.core._persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15081 = null;
  var G__15081__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__15081__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__15081 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15081__2.call(this, self__, k);
      case 3:
        return G__15081__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15081
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15080) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15080)))
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15084 = null;
  var G__15084__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__15084__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__15084 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15084__2.call(this, self__, k);
      case 3:
        return G__15084__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15084
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15083) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15083)))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
  }else {
    return null
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__15082_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__15082_SHARP_)
  }, other)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__9953__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__9953__auto__.length) {
        var G__15085 = i + 1;
        var G__15086 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__15085;
        res = G__15086;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__15087 = cljs.core._next.call(null, in$__$1);
            var G__15088 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__15087;
            out = G__15088;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__15089__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__15089 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15089__delegate.call(this, keys)
    };
    G__15089.cljs$lang$maxFixedArity = 0;
    G__15089.cljs$lang$applyTo = function(arglist__15090) {
      var keys = cljs.core.seq(arglist__15090);
      return G__15089__delegate(keys)
    };
    G__15089.cljs$core$IFn$_invoke$arity$variadic = G__15089__delegate;
    return G__15089
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15091) {
    var keys = cljs.core.seq(arglist__15091);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15092) {
    var comparator = cljs.core.first(arglist__15092);
    var keys = cljs.core.rest(arglist__15092);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4092__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4092__auto__)) {
        var e = temp__4092__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__15093_SHARP_) {
      var temp__4092__auto__ = cljs.core.find.call(null, smap, p1__15093_SHARP_);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var e = temp__4092__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__15093_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15100, seen__$1) {
        while(true) {
          var vec__15101 = p__15100;
          var f = cljs.core.nth.call(null, vec__15101, 0, null);
          var xs__$1 = vec__15101;
          var temp__4094__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4094__auto__) {
            var s = temp__4094__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__15102 = cljs.core.rest.call(null, s);
              var G__15103 = seen__$1;
              p__15100 = G__15102;
              seen__$1 = G__15103;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__15104 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__15105 = cljs.core.next.call(null, s__$1);
      ret = G__15104;
      s__$1 = G__15105;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__15107 = x;
    if(G__15107) {
      var bit__9755__auto__ = G__15107.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__9755__auto__ || G__15107.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(ks && vs) {
      var G__15108 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__15109 = cljs.core.next.call(null, ks);
      var G__15110 = cljs.core.next.call(null, vs);
      map = G__15108;
      ks = G__15109;
      vs = G__15110;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__15113__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15111_SHARP_, p2__15112_SHARP_) {
        return max_key.call(null, k, p1__15111_SHARP_, p2__15112_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__15113 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15113__delegate.call(this, k, x, y, more)
    };
    G__15113.cljs$lang$maxFixedArity = 3;
    G__15113.cljs$lang$applyTo = function(arglist__15114) {
      var k = cljs.core.first(arglist__15114);
      arglist__15114 = cljs.core.next(arglist__15114);
      var x = cljs.core.first(arglist__15114);
      arglist__15114 = cljs.core.next(arglist__15114);
      var y = cljs.core.first(arglist__15114);
      var more = cljs.core.rest(arglist__15114);
      return G__15113__delegate(k, x, y, more)
    };
    G__15113.cljs$core$IFn$_invoke$arity$variadic = G__15113__delegate;
    return G__15113
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__15117__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15115_SHARP_, p2__15116_SHARP_) {
        return min_key.call(null, k, p1__15115_SHARP_, p2__15116_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__15117 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15117__delegate.call(this, k, x, y, more)
    };
    G__15117.cljs$lang$maxFixedArity = 3;
    G__15117.cljs$lang$applyTo = function(arglist__15118) {
      var k = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var x = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var y = cljs.core.first(arglist__15118);
      var more = cljs.core.rest(arglist__15118);
      return G__15117__delegate(k, x, y, more)
    };
    G__15117.cljs$core$IFn$_invoke$arity$variadic = G__15117__delegate;
    return G__15117
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4094__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4094__auto__) {
      var s = temp__4094__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4094__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4094__auto__)) {
        var vec__15121 = temp__4094__auto__;
        var e = cljs.core.nth.call(null, vec__15121, 0, null);
        var s = vec__15121;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4094__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4094__auto__)) {
      var vec__15122 = temp__4094__auto__;
      var e = cljs.core.nth.call(null, vec__15122, 0, null);
      var s = vec__15122;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4094__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4094__auto__)) {
        var vec__15125 = temp__4094__auto__;
        var e = cljs.core.nth.call(null, vec__15125, 0, null);
        var s = vec__15125;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4094__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4094__auto__)) {
      var vec__15126 = temp__4094__auto__;
      var e = cljs.core.nth.call(null, vec__15126, 0, null);
      var s = vec__15126;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng__$1
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng__$1
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4094__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4094__auto__) {
      var s = temp__4094__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4094__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4094__auto__) {
      var s = temp__4094__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__15127_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__15127_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4094__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4094__auto__) {
        var s = temp__4094__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15138 = null;
      var G__15138__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null)
      };
      var G__15138__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null)
      };
      var G__15138__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null)
      };
      var G__15138__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null)
      };
      var G__15138__4 = function() {
        var G__15139__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null)
        };
        var G__15139 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15139__delegate.call(this, x, y, z, args)
        };
        G__15139.cljs$lang$maxFixedArity = 3;
        G__15139.cljs$lang$applyTo = function(arglist__15140) {
          var x = cljs.core.first(arglist__15140);
          arglist__15140 = cljs.core.next(arglist__15140);
          var y = cljs.core.first(arglist__15140);
          arglist__15140 = cljs.core.next(arglist__15140);
          var z = cljs.core.first(arglist__15140);
          var args = cljs.core.rest(arglist__15140);
          return G__15139__delegate(x, y, z, args)
        };
        G__15139.cljs$core$IFn$_invoke$arity$variadic = G__15139__delegate;
        return G__15139
      }();
      G__15138 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15138__0.call(this);
          case 1:
            return G__15138__1.call(this, x);
          case 2:
            return G__15138__2.call(this, x, y);
          case 3:
            return G__15138__3.call(this, x, y, z);
          default:
            return G__15138__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15138.cljs$lang$maxFixedArity = 3;
      G__15138.cljs$lang$applyTo = G__15138__4.cljs$lang$applyTo;
      return G__15138
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15141 = null;
      var G__15141__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null)
      };
      var G__15141__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null)
      };
      var G__15141__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null)
      };
      var G__15141__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null)
      };
      var G__15141__4 = function() {
        var G__15142__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null)
        };
        var G__15142 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15142__delegate.call(this, x, y, z, args)
        };
        G__15142.cljs$lang$maxFixedArity = 3;
        G__15142.cljs$lang$applyTo = function(arglist__15143) {
          var x = cljs.core.first(arglist__15143);
          arglist__15143 = cljs.core.next(arglist__15143);
          var y = cljs.core.first(arglist__15143);
          arglist__15143 = cljs.core.next(arglist__15143);
          var z = cljs.core.first(arglist__15143);
          var args = cljs.core.rest(arglist__15143);
          return G__15142__delegate(x, y, z, args)
        };
        G__15142.cljs$core$IFn$_invoke$arity$variadic = G__15142__delegate;
        return G__15142
      }();
      G__15141 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15141__0.call(this);
          case 1:
            return G__15141__1.call(this, x);
          case 2:
            return G__15141__2.call(this, x, y);
          case 3:
            return G__15141__3.call(this, x, y, z);
          default:
            return G__15141__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15141.cljs$lang$maxFixedArity = 3;
      G__15141.cljs$lang$applyTo = G__15141__4.cljs$lang$applyTo;
      return G__15141
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15144 = null;
      var G__15144__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null)
      };
      var G__15144__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null)
      };
      var G__15144__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null)
      };
      var G__15144__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null)
      };
      var G__15144__4 = function() {
        var G__15145__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null)
        };
        var G__15145 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15145__delegate.call(this, x, y, z, args)
        };
        G__15145.cljs$lang$maxFixedArity = 3;
        G__15145.cljs$lang$applyTo = function(arglist__15146) {
          var x = cljs.core.first(arglist__15146);
          arglist__15146 = cljs.core.next(arglist__15146);
          var y = cljs.core.first(arglist__15146);
          arglist__15146 = cljs.core.next(arglist__15146);
          var z = cljs.core.first(arglist__15146);
          var args = cljs.core.rest(arglist__15146);
          return G__15145__delegate(x, y, z, args)
        };
        G__15145.cljs$core$IFn$_invoke$arity$variadic = G__15145__delegate;
        return G__15145
      }();
      G__15144 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15144__0.call(this);
          case 1:
            return G__15144__1.call(this, x);
          case 2:
            return G__15144__2.call(this, x, y);
          case 3:
            return G__15144__3.call(this, x, y, z);
          default:
            return G__15144__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15144.cljs$lang$maxFixedArity = 3;
      G__15144.cljs$lang$applyTo = G__15144__4.cljs$lang$applyTo;
      return G__15144
    }()
  };
  var juxt__4 = function() {
    var G__15147__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__15148 = null;
        var G__15148__0 = function() {
          return cljs.core.reduce.call(null, function(p1__15128_SHARP_, p2__15129_SHARP_) {
            return cljs.core.conj.call(null, p1__15128_SHARP_, p2__15129_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__15148__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__15130_SHARP_, p2__15131_SHARP_) {
            return cljs.core.conj.call(null, p1__15130_SHARP_, p2__15131_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__15148__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__15132_SHARP_, p2__15133_SHARP_) {
            return cljs.core.conj.call(null, p1__15132_SHARP_, p2__15133_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__15148__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__15134_SHARP_, p2__15135_SHARP_) {
            return cljs.core.conj.call(null, p1__15134_SHARP_, p2__15135_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__15148__4 = function() {
          var G__15149__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__15136_SHARP_, p2__15137_SHARP_) {
              return cljs.core.conj.call(null, p1__15136_SHARP_, cljs.core.apply.call(null, p2__15137_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__15149 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__15149__delegate.call(this, x, y, z, args)
          };
          G__15149.cljs$lang$maxFixedArity = 3;
          G__15149.cljs$lang$applyTo = function(arglist__15150) {
            var x = cljs.core.first(arglist__15150);
            arglist__15150 = cljs.core.next(arglist__15150);
            var y = cljs.core.first(arglist__15150);
            arglist__15150 = cljs.core.next(arglist__15150);
            var z = cljs.core.first(arglist__15150);
            var args = cljs.core.rest(arglist__15150);
            return G__15149__delegate(x, y, z, args)
          };
          G__15149.cljs$core$IFn$_invoke$arity$variadic = G__15149__delegate;
          return G__15149
        }();
        G__15148 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__15148__0.call(this);
            case 1:
              return G__15148__1.call(this, x);
            case 2:
              return G__15148__2.call(this, x, y);
            case 3:
              return G__15148__3.call(this, x, y, z);
            default:
              return G__15148__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15148.cljs$lang$maxFixedArity = 3;
        G__15148.cljs$lang$applyTo = G__15148__4.cljs$lang$applyTo;
        return G__15148
      }()
    };
    var G__15147 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15147__delegate.call(this, f, g, h, fs)
    };
    G__15147.cljs$lang$maxFixedArity = 3;
    G__15147.cljs$lang$applyTo = function(arglist__15151) {
      var f = cljs.core.first(arglist__15151);
      arglist__15151 = cljs.core.next(arglist__15151);
      var g = cljs.core.first(arglist__15151);
      arglist__15151 = cljs.core.next(arglist__15151);
      var h = cljs.core.first(arglist__15151);
      var fs = cljs.core.rest(arglist__15151);
      return G__15147__delegate(f, g, h, fs)
    };
    G__15147.cljs$core$IFn$_invoke$arity$variadic = G__15147__delegate;
    return G__15147
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__15152 = cljs.core.next.call(null, coll);
        coll = G__15152;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll) && n > 0) {
        var G__15153 = n - 1;
        var G__15154 = cljs.core.next.call(null, coll);
        n = G__15153;
        coll = G__15154;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null)
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__15156 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__15156, 0, null);
  var flags = cljs.core.nth.call(null, vec__15156, 1, null);
  var pattern = cljs.core.nth.call(null, vec__15156, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var coll_15157__$1 = cljs.core.next.call(null, coll);
  var n_15158 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
  while(true) {
    if(coll_15157__$1 && (n_15158 == null || !(n_15158 === 0))) {
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, cljs.core.first.call(null, coll_15157__$1), writer, opts);
      var G__15159 = cljs.core.next.call(null, coll_15157__$1);
      var G__15160 = n_15158 - 1;
      coll_15157__$1 = G__15159;
      n_15158 = G__15160;
      continue
    }else {
    }
    break
  }
  if(cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
    cljs.core._write.call(null, writer, sep);
    print_one.call(null, "...", writer, opts)
  }else {
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15165 = cljs.core.seq.call(null, ss);
    var chunk__15166 = null;
    var count__15167 = 0;
    var i__15168 = 0;
    while(true) {
      if(i__15168 < count__15167) {
        var s = cljs.core._nth.call(null, chunk__15166, i__15168);
        cljs.core._write.call(null, writer, s);
        var G__15169 = seq__15165;
        var G__15170 = chunk__15166;
        var G__15171 = count__15167;
        var G__15172 = i__15168 + 1;
        seq__15165 = G__15169;
        chunk__15166 = G__15170;
        count__15167 = G__15171;
        i__15168 = G__15172;
        continue
      }else {
        var temp__4094__auto__ = cljs.core.seq.call(null, seq__15165);
        if(temp__4094__auto__) {
          var seq__15165__$1 = temp__4094__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__15165__$1)) {
            var c__9860__auto__ = cljs.core.chunk_first.call(null, seq__15165__$1);
            var G__15173 = cljs.core.chunk_rest.call(null, seq__15165__$1);
            var G__15174 = c__9860__auto__;
            var G__15175 = cljs.core.count.call(null, c__9860__auto__);
            var G__15176 = 0;
            seq__15165 = G__15173;
            chunk__15166 = G__15174;
            count__15167 = G__15175;
            i__15168 = G__15176;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__15165__$1);
            cljs.core._write.call(null, writer, s);
            var G__15177 = cljs.core.next.call(null, seq__15165__$1);
            var G__15178 = null;
            var G__15179 = 0;
            var G__15180 = 0;
            seq__15165 = G__15177;
            chunk__15166 = G__15178;
            count__15167 = G__15179;
            i__15168 = G__15180;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15181) {
    var writer = cljs.core.first(arglist__15181);
    var ss = cljs.core.rest(arglist__15181);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = function() {
  var obj15183 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15183
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__9129__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = function() {
              var G__15189 = obj;
              if(G__15189) {
                var bit__9762__auto__ = G__15189.cljs$lang$protocol_mask$partition0$ & 131072;
                if(bit__9762__auto__ || G__15189.cljs$core$IMeta$) {
                  return true
                }else {
                  if(!G__15189.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15189)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15189)
              }
            }();
            if(and__9129__auto____$1) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__15190 = obj;
              if(G__15190) {
                var bit__9755__auto__ = G__15190.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(bit__9755__auto__ || G__15190.cljs$core$IPrintWithWriter$) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__15192 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__15192;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__15191 = obj;
                            if(G__15191) {
                              var bit__9762__auto__ = G__15191.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if(bit__9762__auto__ || G__15191.cljs$core$IPrintWithWriter$) {
                                return true
                              }else {
                                if(!G__15191.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__15191)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__15191)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__15197 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__15198 = null;
  var count__15199 = 0;
  var i__15200 = 0;
  while(true) {
    if(i__15200 < count__15199) {
      var obj = cljs.core._nth.call(null, chunk__15198, i__15200);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__15201 = seq__15197;
      var G__15202 = chunk__15198;
      var G__15203 = count__15199;
      var G__15204 = i__15200 + 1;
      seq__15197 = G__15201;
      chunk__15198 = G__15202;
      count__15199 = G__15203;
      i__15200 = G__15204;
      continue
    }else {
      var temp__4094__auto__ = cljs.core.seq.call(null, seq__15197);
      if(temp__4094__auto__) {
        var seq__15197__$1 = temp__4094__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__15197__$1)) {
          var c__9860__auto__ = cljs.core.chunk_first.call(null, seq__15197__$1);
          var G__15205 = cljs.core.chunk_rest.call(null, seq__15197__$1);
          var G__15206 = c__9860__auto__;
          var G__15207 = cljs.core.count.call(null, c__9860__auto__);
          var G__15208 = 0;
          seq__15197 = G__15205;
          chunk__15198 = G__15206;
          count__15199 = G__15207;
          i__15200 = G__15208;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__15197__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__15209 = cljs.core.next.call(null, seq__15197__$1);
          var G__15210 = null;
          var G__15211 = 0;
          var G__15212 = 0;
          seq__15197 = G__15209;
          chunk__15198 = G__15210;
          count__15199 = G__15211;
          i__15200 = G__15212;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15213) {
    var objs = cljs.core.seq(arglist__15213);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15214) {
    var objs = cljs.core.seq(arglist__15214);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15215) {
    var objs = cljs.core.seq(arglist__15215);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15216) {
    var objs = cljs.core.seq(arglist__15216);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15217) {
    var objs = cljs.core.seq(arglist__15217);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
    }else {
      return null
    }
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15218) {
    var objs = cljs.core.seq(arglist__15218);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15219) {
    var objs = cljs.core.seq(arglist__15219);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
    }else {
      return null
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15220) {
    var objs = cljs.core.seq(arglist__15220);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y)
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__15221 = cljs.core.seq.call(null, self__.watches);
  var chunk__15222 = null;
  var count__15223 = 0;
  var i__15224 = 0;
  while(true) {
    if(i__15224 < count__15223) {
      var vec__15225 = cljs.core._nth.call(null, chunk__15222, i__15224);
      var key = cljs.core.nth.call(null, vec__15225, 0, null);
      var f = cljs.core.nth.call(null, vec__15225, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__15227 = seq__15221;
      var G__15228 = chunk__15222;
      var G__15229 = count__15223;
      var G__15230 = i__15224 + 1;
      seq__15221 = G__15227;
      chunk__15222 = G__15228;
      count__15223 = G__15229;
      i__15224 = G__15230;
      continue
    }else {
      var temp__4094__auto__ = cljs.core.seq.call(null, seq__15221);
      if(temp__4094__auto__) {
        var seq__15221__$1 = temp__4094__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__15221__$1)) {
          var c__9860__auto__ = cljs.core.chunk_first.call(null, seq__15221__$1);
          var G__15231 = cljs.core.chunk_rest.call(null, seq__15221__$1);
          var G__15232 = c__9860__auto__;
          var G__15233 = cljs.core.count.call(null, c__9860__auto__);
          var G__15234 = 0;
          seq__15221 = G__15231;
          chunk__15222 = G__15232;
          count__15223 = G__15233;
          i__15224 = G__15234;
          continue
        }else {
          var vec__15226 = cljs.core.first.call(null, seq__15221__$1);
          var key = cljs.core.nth.call(null, vec__15226, 0, null);
          var f = cljs.core.nth.call(null, vec__15226, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__15235 = cljs.core.next.call(null, seq__15221__$1);
          var G__15236 = null;
          var G__15237 = 0;
          var G__15238 = 0;
          seq__15221 = G__15235;
          chunk__15222 = G__15236;
          count__15223 = G__15237;
          i__15224 = G__15238;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__15242__delegate = function(x, p__15239) {
      var map__15241 = p__15239;
      var map__15241__$1 = cljs.core.seq_QMARK_.call(null, map__15241) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15241) : map__15241;
      var validator = cljs.core.get.call(null, map__15241__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__15241__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__15242 = function(x, var_args) {
      var p__15239 = null;
      if(arguments.length > 1) {
        p__15239 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15242__delegate.call(this, x, p__15239)
    };
    G__15242.cljs$lang$maxFixedArity = 1;
    G__15242.cljs$lang$applyTo = function(arglist__15243) {
      var x = cljs.core.first(arglist__15243);
      var p__15239 = cljs.core.rest(arglist__15243);
      return G__15242__delegate(x, p__15239)
    };
    G__15242.cljs$core$IFn$_invoke$arity$variadic = G__15242__delegate;
    return G__15242
  }();
  atom = function(x, var_args) {
    var p__15239 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4094__auto___15244 = a.validator;
  if(cljs.core.truth_(temp__4094__auto___15244)) {
    var validate_15245 = temp__4094__auto___15244;
    if(cljs.core.truth_(validate_15245.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_15246 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_15246, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__15247__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__15247 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__15247__delegate.call(this, a, f, x, y, z, more)
    };
    G__15247.cljs$lang$maxFixedArity = 5;
    G__15247.cljs$lang$applyTo = function(arglist__15248) {
      var a = cljs.core.first(arglist__15248);
      arglist__15248 = cljs.core.next(arglist__15248);
      var f = cljs.core.first(arglist__15248);
      arglist__15248 = cljs.core.next(arglist__15248);
      var x = cljs.core.first(arglist__15248);
      arglist__15248 = cljs.core.next(arglist__15248);
      var y = cljs.core.first(arglist__15248);
      arglist__15248 = cljs.core.next(arglist__15248);
      var z = cljs.core.first(arglist__15248);
      var more = cljs.core.rest(arglist__15248);
      return G__15247__delegate(a, f, x, y, z, more)
    };
    G__15247.cljs$core$IFn$_invoke$arity$variadic = G__15247__delegate;
    return G__15247
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15249) {
    var iref = cljs.core.first(arglist__15249);
    arglist__15249 = cljs.core.next(arglist__15249);
    var f = cljs.core.first(arglist__15249);
    var args = cljs.core.rest(arglist__15249);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__15250) {
    var map__15251 = p__15250;
    var map__15251__$1 = cljs.core.seq_QMARK_.call(null, map__15251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15251) : map__15251;
    var curr_state = map__15251__$1;
    var done = cljs.core.get.call(null, map__15251__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = function() {
  var obj15253 = {};
  return obj15253
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core._key__GT_js[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__15255 = k;
    if(G__15255) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto__ = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return G__15255.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__15255.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15255)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15255)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__15265 = x;
      if(G__15265) {
        var bit__9762__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__9141__auto__ = bit__9762__auto__;
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return G__15265.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__15265.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15265)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15265)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj15267 = {};
              return obj15267
            }();
            var seq__15268_15274 = cljs.core.seq.call(null, x);
            var chunk__15269_15275 = null;
            var count__15270_15276 = 0;
            var i__15271_15277 = 0;
            while(true) {
              if(i__15271_15277 < count__15270_15276) {
                var vec__15272_15278 = cljs.core._nth.call(null, chunk__15269_15275, i__15271_15277);
                var k_15279 = cljs.core.nth.call(null, vec__15272_15278, 0, null);
                var v_15280 = cljs.core.nth.call(null, vec__15272_15278, 1, null);
                m[cljs.core.key__GT_js.call(null, k_15279)] = clj__GT_js.call(null, v_15280);
                var G__15281 = seq__15268_15274;
                var G__15282 = chunk__15269_15275;
                var G__15283 = count__15270_15276;
                var G__15284 = i__15271_15277 + 1;
                seq__15268_15274 = G__15281;
                chunk__15269_15275 = G__15282;
                count__15270_15276 = G__15283;
                i__15271_15277 = G__15284;
                continue
              }else {
                var temp__4094__auto___15285 = cljs.core.seq.call(null, seq__15268_15274);
                if(temp__4094__auto___15285) {
                  var seq__15268_15286__$1 = temp__4094__auto___15285;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__15268_15286__$1)) {
                    var c__9860__auto___15287 = cljs.core.chunk_first.call(null, seq__15268_15286__$1);
                    var G__15288 = cljs.core.chunk_rest.call(null, seq__15268_15286__$1);
                    var G__15289 = c__9860__auto___15287;
                    var G__15290 = cljs.core.count.call(null, c__9860__auto___15287);
                    var G__15291 = 0;
                    seq__15268_15274 = G__15288;
                    chunk__15269_15275 = G__15289;
                    count__15270_15276 = G__15290;
                    i__15271_15277 = G__15291;
                    continue
                  }else {
                    var vec__15273_15292 = cljs.core.first.call(null, seq__15268_15286__$1);
                    var k_15293 = cljs.core.nth.call(null, vec__15273_15292, 0, null);
                    var v_15294 = cljs.core.nth.call(null, vec__15273_15292, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_15293)] = clj__GT_js.call(null, v_15294);
                    var G__15295 = cljs.core.next.call(null, seq__15268_15286__$1);
                    var G__15296 = null;
                    var G__15297 = 0;
                    var G__15298 = 0;
                    seq__15268_15274 = G__15295;
                    chunk__15269_15275 = G__15296;
                    count__15270_15276 = G__15297;
                    i__15271_15277 = G__15298;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj15300 = {};
  return obj15300
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null))
  };
  var js__GT_clj__2 = function() {
    var G__15321__delegate = function(x, opts) {
      if(function() {
        var G__15311 = x;
        if(G__15311) {
          var bit__9762__auto__ = null;
          if(cljs.core.truth_(function() {
            var or__9141__auto__ = bit__9762__auto__;
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return G__15311.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__15311.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__15311)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__15311)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__15312 = opts;
          var map__15312__$1 = cljs.core.seq_QMARK_.call(null, map__15312) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15312) : map__15312;
          var keywordize_keys = cljs.core.get.call(null, map__15312__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__15312, map__15312__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__9829__auto__ = function(map__15312, map__15312__$1, keywordize_keys, keyfn) {
                          return function iter__15317(s__15318) {
                            return new cljs.core.LazySeq(null, function(map__15312, map__15312__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__15318__$1 = s__15318;
                                while(true) {
                                  var temp__4094__auto__ = cljs.core.seq.call(null, s__15318__$1);
                                  if(temp__4094__auto__) {
                                    var s__15318__$2 = temp__4094__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__15318__$2)) {
                                      var c__9827__auto__ = cljs.core.chunk_first.call(null, s__15318__$2);
                                      var size__9828__auto__ = cljs.core.count.call(null, c__9827__auto__);
                                      var b__15320 = cljs.core.chunk_buffer.call(null, size__9828__auto__);
                                      if(function() {
                                        var i__15319 = 0;
                                        while(true) {
                                          if(i__15319 < size__9828__auto__) {
                                            var k = cljs.core._nth.call(null, c__9827__auto__, i__15319);
                                            cljs.core.chunk_append.call(null, b__15320, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__15322 = i__15319 + 1;
                                            i__15319 = G__15322;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15320), iter__15317.call(null, cljs.core.chunk_rest.call(null, s__15318__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15320), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__15318__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__15317.call(null, cljs.core.rest.call(null, s__15318__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__15312, map__15312__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__15312, map__15312__$1, keywordize_keys, keyfn);
                        return iter__9829__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__15312, map__15312__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__15321 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15321__delegate.call(this, x, opts)
    };
    G__15321.cljs$lang$maxFixedArity = 1;
    G__15321.cljs$lang$applyTo = function(arglist__15323) {
      var x = cljs.core.first(arglist__15323);
      var opts = cljs.core.rest(arglist__15323);
      return G__15321__delegate(x, opts)
    };
    G__15321.cljs$core$IFn$_invoke$arity$variadic = G__15321__delegate;
    return G__15321
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__15324__delegate = function(args) {
      var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var v = temp__4092__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__15324 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15324__delegate.call(this, args)
    };
    G__15324.cljs$lang$maxFixedArity = 0;
    G__15324.cljs$lang$applyTo = function(arglist__15325) {
      var args = cljs.core.seq(arglist__15325);
      return G__15324__delegate(args)
    };
    G__15324.cljs$core$IFn$_invoke$arity$variadic = G__15324__delegate;
    return G__15324
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__15326 = ret;
        f = G__15326;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__15327__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__15327 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15327__delegate.call(this, f, args)
    };
    G__15327.cljs$lang$maxFixedArity = 1;
    G__15327.cljs$lang$applyTo = function(arglist__15328) {
      var f = cljs.core.first(arglist__15328);
      var args = cljs.core.rest(arglist__15328);
      return G__15327__delegate(f, args)
    };
    G__15327.cljs$core$IFn$_invoke$arity$variadic = G__15327__delegate;
    return G__15327
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__15329) {
    var f = cljs.core.first(arglist__15329);
    var args = cljs.core.rest(arglist__15329);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__9141__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__9141__auto__) {
      return or__9141__auto__
    }else {
      var or__9141__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if(or__9141__auto____$1) {
        return or__9141__auto____$1
      }else {
        var and__9129__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__9129__auto__) {
          var and__9129__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__9129__auto____$1) {
            var and__9129__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__9129__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(!ret || i === cljs.core.count.call(null, parent)) {
                  return ret
                }else {
                  var G__15330 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__15331 = i + 1;
                  ret = G__15330;
                  i = G__15331;
                  continue
                }
                break
              }
            }else {
              return and__9129__auto____$2
            }
          }else {
            return and__9129__auto____$1
          }
        }else {
          return and__9129__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__9141__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null)
    }();
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__15332_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__15332_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__15332_SHARP_), cljs.core.second.call(null, p1__15332_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__15333_SHARP_, p2__15334_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__15333_SHARP_, p2__15334_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__9141__auto__ = cljs.core.truth_(function() {
    var and__9129__auto__ = xprefs;
    if(cljs.core.truth_(and__9129__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__9129__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__9141__auto__)) {
    return or__9141__auto__
  }else {
    var or__9141__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__15335 = cljs.core.rest.call(null, ps);
          ps = G__15335;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__9141__auto____$1)) {
      return or__9141__auto____$1
    }else {
      var or__9141__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__15336 = cljs.core.rest.call(null, ps);
            ps = G__15336;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__9141__auto____$2)) {
        return or__9141__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__9141__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__9141__auto__)) {
    return or__9141__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__15339) {
    var vec__15340 = p__15339;
    var k = cljs.core.nth.call(null, vec__15340, 0, null);
    var _ = cljs.core.nth.call(null, vec__15340, 1, null);
    var e = vec__15340;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__9141__auto__ = be == null;
        if(or__9141__auto__) {
          return or__9141__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = function() {
  var obj15342 = {};
  return obj15342
}();
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._reset[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._reset["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._add_method[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._add_method["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._remove_method[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._remove_method["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._prefer_method[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._prefer_method["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._get_method[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._get_method["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._methods[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._methods["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._prefers[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._prefers["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__9129__auto__ = mf;
    if(and__9129__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__9739__auto__ = mf == null ? null : mf;
    return function() {
      var or__9141__auto__ = cljs.core._dispatch[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core._dispatch["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null
  });
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4092__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4092__auto__)) {
    var target_fn = temp__4092__auto__;
    return target_fn
  }else {
    var temp__4092__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4092__auto____$1)) {
      var target_fn = temp__4092__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__15343__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__15343 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__15343__delegate.call(this, _, args)
  };
  G__15343.cljs$lang$maxFixedArity = 1;
  G__15343.cljs$lang$applyTo = function(arglist__15344) {
    var _ = cljs.core.first(arglist__15344);
    var args = cljs.core.rest(arglist__15344);
    return G__15343__delegate(_, args)
  };
  G__15343.cljs$core$IFn$_invoke$arity$variadic = G__15343__delegate;
  return G__15343
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__9683__auto__, writer__9684__auto__, opts__9685__auto__) {
  return cljs.core._write.call(null, writer__9684__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x)
};
goog.provide("cljs.core.logic.protocols");
goog.require("cljs.core");
cljs.core.logic.protocols.IBindable = function() {
  var obj13533 = {};
  return obj13533
}();
cljs.core.logic.protocols.ITreeTerm = function() {
  var obj13535 = {};
  return obj13535
}();
cljs.core.logic.protocols.IVar = function() {
  var obj13537 = {};
  return obj13537
}();
cljs.core.logic.protocols.IUninitialized = function() {
  var obj13539 = {};
  return obj13539
}();
cljs.core.logic.protocols._uninitialized = function _uninitialized(coll) {
  if(function() {
    var and__9129__auto__ = coll;
    if(and__9129__auto__) {
      return coll.cljs$core$logic$protocols$IUninitialized$_uninitialized$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return coll.cljs$core$logic$protocols$IUninitialized$_uninitialized$arity$1(coll)
  }else {
    var x__9739__auto__ = coll == null ? null : coll;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._uninitialized[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._uninitialized["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IUninitialized.-uninitialized", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.logic.protocols.IUnifyTerms = function() {
  var obj13541 = {};
  return obj13541
}();
cljs.core.logic.protocols.unify_terms = function unify_terms(u, v, s) {
  if(function() {
    var and__9129__auto__ = u;
    if(and__9129__auto__) {
      return u.cljs$core$logic$protocols$IUnifyTerms$unify_terms$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return u.cljs$core$logic$protocols$IUnifyTerms$unify_terms$arity$3(u, v, s)
  }else {
    var x__9739__auto__ = u == null ? null : u;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.unify_terms[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.unify_terms["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyTerms.unify-terms", u);
        }
      }
    }().call(null, u, v, s)
  }
};
cljs.core.logic.protocols.IUnifyWithRecord = function() {
  var obj13543 = {};
  return obj13543
}();
cljs.core.logic.protocols.unify_with_record = function unify_with_record(u, v, s) {
  if(function() {
    var and__9129__auto__ = u;
    if(and__9129__auto__) {
      return u.cljs$core$logic$protocols$IUnifyWithRecord$unify_with_record$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return u.cljs$core$logic$protocols$IUnifyWithRecord$unify_with_record$arity$3(u, v, s)
  }else {
    var x__9739__auto__ = u == null ? null : u;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.unify_with_record[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.unify_with_record["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithRecord.unify-with-record", u);
        }
      }
    }().call(null, u, v, s)
  }
};
cljs.core.logic.protocols.INonStorable = function() {
  var obj13545 = {};
  return obj13545
}();
cljs.core.logic.protocols.non_storable_QMARK_ = function non_storable_QMARK_(x) {
  var G__13547 = x;
  if(G__13547) {
    var bit__9762__auto__ = null;
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = bit__9762__auto__;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return G__13547.cljs$core$logic$protocols$INonStorable$
      }
    }())) {
      return true
    }else {
      if(!G__13547.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.INonStorable, G__13547)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.INonStorable, G__13547)
  }
};
cljs.core.logic.protocols.LConsSeq = function() {
  var obj13549 = {};
  return obj13549
}();
cljs.core.logic.protocols.lfirst = function lfirst(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$LConsSeq$lfirst$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$LConsSeq$lfirst$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.lfirst[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.lfirst["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "LConsSeq.lfirst", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.protocols.lnext = function lnext(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$LConsSeq$lnext$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$LConsSeq$lnext$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.lnext[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.lnext["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "LConsSeq.lnext", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.protocols.LConsPrint = function() {
  var obj13551 = {};
  return obj13551
}();
cljs.core.logic.protocols.toShortString = function toShortString(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$LConsPrint$toShortString$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$LConsPrint$toShortString$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.toShortString[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.toShortString["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "LConsPrint.toShortString", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.protocols.ISubstitutions = function() {
  var obj13553 = {};
  return obj13553
}();
cljs.core.logic.protocols.ext_no_check = function ext_no_check(this$, x, v) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutions$ext_no_check$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutions$ext_no_check$arity$3(this$, x, v)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.ext_no_check[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.ext_no_check["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.ext-no-check", this$);
        }
      }
    }().call(null, this$, x, v)
  }
};
cljs.core.logic.protocols.walk = function walk(this$, x) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutions$walk$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutions$walk$arity$2(this$, x)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.walk[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.walk["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.walk", this$);
        }
      }
    }().call(null, this$, x)
  }
};
cljs.core.logic.protocols.IReifyTerm = function() {
  var obj13555 = {};
  return obj13555
}();
cljs.core.logic.protocols.reify_term = function reify_term(v, s) {
  if(function() {
    var and__9129__auto__ = v;
    if(and__9129__auto__) {
      return v.cljs$core$logic$protocols$IReifyTerm$reify_term$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return v.cljs$core$logic$protocols$IReifyTerm$reify_term$arity$2(v, s)
  }else {
    var x__9739__auto__ = v == null ? null : v;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.reify_term[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.reify_term["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReifyTerm.reify-term", v);
        }
      }
    }().call(null, v, s)
  }
};
cljs.core.logic.protocols.IWalkTerm = function() {
  var obj13557 = {};
  return obj13557
}();
cljs.core.logic.protocols.walk_term = function walk_term(v, f) {
  if(function() {
    var and__9129__auto__ = v;
    if(and__9129__auto__) {
      return v.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return v.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2(v, f)
  }else {
    var x__9739__auto__ = v == null ? null : v;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.walk_term[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.walk_term["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWalkTerm.walk-term", v);
        }
      }
    }().call(null, v, f)
  }
};
cljs.core.logic.protocols.IOccursCheckTerm = function() {
  var obj13559 = {};
  return obj13559
}();
cljs.core.logic.protocols.occurs_check_term = function occurs_check_term(v, x, s) {
  if(function() {
    var and__9129__auto__ = v;
    if(and__9129__auto__) {
      return v.cljs$core$logic$protocols$IOccursCheckTerm$occurs_check_term$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return v.cljs$core$logic$protocols$IOccursCheckTerm$occurs_check_term$arity$3(v, x, s)
  }else {
    var x__9739__auto__ = v == null ? null : v;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.occurs_check_term[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.occurs_check_term["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IOccursCheckTerm.occurs-check-term", v);
        }
      }
    }().call(null, v, x, s)
  }
};
cljs.core.logic.protocols.IBuildTerm = function() {
  var obj13561 = {};
  return obj13561
}();
cljs.core.logic.protocols.build_term = function build_term(u, s) {
  if(function() {
    var and__9129__auto__ = u;
    if(and__9129__auto__) {
      return u.cljs$core$logic$protocols$IBuildTerm$build_term$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return u.cljs$core$logic$protocols$IBuildTerm$build_term$arity$2(u, s)
  }else {
    var x__9739__auto__ = u == null ? null : u;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.build_term[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.build_term["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IBuildTerm.build-term", u);
        }
      }
    }().call(null, u, s)
  }
};
cljs.core.logic.protocols.IBind = function() {
  var obj13563 = {};
  return obj13563
}();
cljs.core.logic.protocols.bind = function bind(this$, g) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IBind$bind$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IBind$bind$arity$2(this$, g)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.bind[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.bind["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IBind.bind", this$);
        }
      }
    }().call(null, this$, g)
  }
};
cljs.core.logic.protocols.IMPlus = function() {
  var obj13565 = {};
  return obj13565
}();
cljs.core.logic.protocols.mplus = function mplus(a, f) {
  if(function() {
    var and__9129__auto__ = a;
    if(and__9129__auto__) {
      return a.cljs$core$logic$protocols$IMPlus$mplus$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return a.cljs$core$logic$protocols$IMPlus$mplus$arity$2(a, f)
  }else {
    var x__9739__auto__ = a == null ? null : a;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.mplus[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.mplus["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMPlus.mplus", a);
        }
      }
    }().call(null, a, f)
  }
};
cljs.core.logic.protocols.ITake = function() {
  var obj13567 = {};
  return obj13567
}();
cljs.core.logic.protocols.take_STAR_ = function take_STAR_(a) {
  if(function() {
    var and__9129__auto__ = a;
    if(and__9129__auto__) {
      return a.cljs$core$logic$protocols$ITake$take_STAR_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return a.cljs$core$logic$protocols$ITake$take_STAR_$arity$1(a)
  }else {
    var x__9739__auto__ = a == null ? null : a;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.take_STAR_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.take_STAR_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITake.take*", a);
        }
      }
    }().call(null, a)
  }
};
cljs.core.logic.protocols.IIfA = function() {
  var obj13569 = {};
  return obj13569
}();
cljs.core.logic.protocols.ifa = function ifa(b, gs, c) {
  if(function() {
    var and__9129__auto__ = b;
    if(and__9129__auto__) {
      return b.cljs$core$logic$protocols$IIfA$ifa$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return b.cljs$core$logic$protocols$IIfA$ifa$arity$3(b, gs, c)
  }else {
    var x__9739__auto__ = b == null ? null : b;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.ifa[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.ifa["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IIfA.ifa", b);
        }
      }
    }().call(null, b, gs, c)
  }
};
cljs.core.logic.protocols.IIfU = function() {
  var obj13571 = {};
  return obj13571
}();
cljs.core.logic.protocols.ifu = function ifu(b, gs, c) {
  if(function() {
    var and__9129__auto__ = b;
    if(and__9129__auto__) {
      return b.cljs$core$logic$protocols$IIfU$ifu$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return b.cljs$core$logic$protocols$IIfU$ifu$arity$3(b, gs, c)
  }else {
    var x__9739__auto__ = b == null ? null : b;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.ifu[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.ifu["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IIfU.ifu", b);
        }
      }
    }().call(null, b, gs, c)
  }
};
cljs.core.logic.protocols.IRel = function() {
  var obj13573 = {};
  return obj13573
}();
cljs.core.logic.protocols.setfn = function setfn(this$, arity, f) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IRel$setfn$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IRel$setfn$arity$3(this$, arity, f)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.setfn[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.setfn["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IRel.setfn", this$);
        }
      }
    }().call(null, this$, arity, f)
  }
};
cljs.core.logic.protocols.indexes_for = function indexes_for(this$, arity) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IRel$indexes_for$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IRel$indexes_for$arity$2(this$, arity)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.indexes_for[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.indexes_for["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IRel.indexes-for", this$);
        }
      }
    }().call(null, this$, arity)
  }
};
cljs.core.logic.protocols.add_indexes = function add_indexes(this$, arity, index) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IRel$add_indexes$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IRel$add_indexes$arity$3(this$, arity, index)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.add_indexes[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.add_indexes["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IRel.add-indexes", this$);
        }
      }
    }().call(null, this$, arity, index)
  }
};
cljs.core.logic.protocols.ITabled = function() {
  var obj13575 = {};
  return obj13575
}();
cljs.core.logic.protocols._reify_tabled = function _reify_tabled(this$, v) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ITabled$_reify_tabled$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ITabled$_reify_tabled$arity$2(this$, v)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._reify_tabled[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._reify_tabled["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITabled.-reify-tabled", this$);
        }
      }
    }().call(null, this$, v)
  }
};
cljs.core.logic.protocols.reify_tabled = function reify_tabled(this$, v) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ITabled$reify_tabled$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ITabled$reify_tabled$arity$2(this$, v)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.reify_tabled[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.reify_tabled["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITabled.reify-tabled", this$);
        }
      }
    }().call(null, this$, v)
  }
};
cljs.core.logic.protocols.reuse = function reuse(this$, argv, cache, start, end) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ITabled$reuse$arity$5
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ITabled$reuse$arity$5(this$, argv, cache, start, end)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.reuse[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.reuse["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITabled.reuse", this$);
        }
      }
    }().call(null, this$, argv, cache, start, end)
  }
};
cljs.core.logic.protocols.subunify = function subunify(this$, arg, ans) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ITabled$subunify$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ITabled$subunify$arity$3(this$, arg, ans)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.subunify[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.subunify["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITabled.subunify", this$);
        }
      }
    }().call(null, this$, arg, ans)
  }
};
cljs.core.logic.protocols.ISuspendedStream = function() {
  var obj13577 = {};
  return obj13577
}();
cljs.core.logic.protocols.ready_QMARK_ = function ready_QMARK_(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISuspendedStream$ready_QMARK_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISuspendedStream$ready_QMARK_$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.ready_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.ready_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISuspendedStream.ready?", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.protocols.IAnswerCache = function() {
  var obj13579 = {};
  return obj13579
}();
cljs.core.logic.protocols._add = function _add(this$, x) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IAnswerCache$_add$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IAnswerCache$_add$arity$2(this$, x)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._add[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._add["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAnswerCache.-add", this$);
        }
      }
    }().call(null, this$, x)
  }
};
cljs.core.logic.protocols._cached_QMARK_ = function _cached_QMARK_(this$, x) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IAnswerCache$_cached_QMARK_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IAnswerCache$_cached_QMARK_$arity$2(this$, x)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._cached_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._cached_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAnswerCache.-cached?", this$);
        }
      }
    }().call(null, this$, x)
  }
};
cljs.core.logic.protocols.ISubstitutionsCLP = function() {
  var obj13581 = {};
  return obj13581
}();
cljs.core.logic.protocols.root_val = function root_val(this$, x) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutionsCLP$root_val$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutionsCLP$root_val$arity$2(this$, x)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.root_val[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.root_val["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutionsCLP.root-val", this$);
        }
      }
    }().call(null, this$, x)
  }
};
cljs.core.logic.protocols.root_var = function root_var(this$, x) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutionsCLP$root_var$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutionsCLP$root_var$arity$2(this$, x)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.root_var[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.root_var["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutionsCLP.root-var", this$);
        }
      }
    }().call(null, this$, x)
  }
};
cljs.core.logic.protocols.ext_run_cs = function ext_run_cs(this$, x, v) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutionsCLP$ext_run_cs$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutionsCLP$ext_run_cs$arity$3(this$, x, v)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.ext_run_cs[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.ext_run_cs["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutionsCLP.ext-run-cs", this$);
        }
      }
    }().call(null, this$, x, v)
  }
};
cljs.core.logic.protocols.queue = function queue(this$, c) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutionsCLP$queue$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutionsCLP$queue$arity$2(this$, c)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.queue[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.queue["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutionsCLP.queue", this$);
        }
      }
    }().call(null, this$, c)
  }
};
cljs.core.logic.protocols.update_var = function update_var(this$, x, v) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$ISubstitutionsCLP$update_var$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$ISubstitutionsCLP$update_var$arity$3(this$, x, v)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.update_var[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.update_var["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutionsCLP.update-var", this$);
        }
      }
    }().call(null, this$, x, v)
  }
};
cljs.core.logic.protocols.IConstraintStore = function() {
  var obj13583 = {};
  return obj13583
}();
cljs.core.logic.protocols.addc = function addc(this$, a, c) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IConstraintStore$addc$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IConstraintStore$addc$arity$3(this$, a, c)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.addc[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.addc["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStore.addc", this$);
        }
      }
    }().call(null, this$, a, c)
  }
};
cljs.core.logic.protocols.updatec = function updatec(this$, a, c) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IConstraintStore$updatec$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IConstraintStore$updatec$arity$3(this$, a, c)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.updatec[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.updatec["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStore.updatec", this$);
        }
      }
    }().call(null, this$, a, c)
  }
};
cljs.core.logic.protocols.remc = function remc(this$, a, c) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IConstraintStore$remc$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IConstraintStore$remc$arity$3(this$, a, c)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.remc[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.remc["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStore.remc", this$);
        }
      }
    }().call(null, this$, a, c)
  }
};
cljs.core.logic.protocols.runc = function runc(this$, c, state) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IConstraintStore$runc$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IConstraintStore$runc$arity$3(this$, c, state)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.runc[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.runc["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStore.runc", this$);
        }
      }
    }().call(null, this$, c, state)
  }
};
cljs.core.logic.protocols.constraints_for = function constraints_for(this$, a, x, ws) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IConstraintStore$constraints_for$arity$4
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IConstraintStore$constraints_for$arity$4(this$, a, x, ws)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.constraints_for[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.constraints_for["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStore.constraints-for", this$);
        }
      }
    }().call(null, this$, a, x, ws)
  }
};
cljs.core.logic.protocols.migrate = function migrate(this$, x, root) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$protocols$IConstraintStore$migrate$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$protocols$IConstraintStore$migrate$arity$3(this$, x, root)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.migrate[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.migrate["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStore.migrate", this$);
        }
      }
    }().call(null, this$, x, root)
  }
};
cljs.core.logic.protocols.IConstraintStep = function() {
  var obj13585 = {};
  return obj13585
}();
cljs.core.logic.protocols._step = function _step(c, s) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IConstraintStep$_step$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IConstraintStep$_step$arity$2(c, s)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._step[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._step["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintStep.-step", c);
        }
      }
    }().call(null, c, s)
  }
};
cljs.core.logic.protocols.IRunnable = function() {
  var obj13587 = {};
  return obj13587
}();
cljs.core.logic.protocols._runnable_QMARK_ = function _runnable_QMARK_(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._runnable_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._runnable_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.-runnable?", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.IEntailed = function() {
  var obj13589 = {};
  return obj13589
}();
cljs.core.logic.protocols._entailed_QMARK_ = function _entailed_QMARK_(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._entailed_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._entailed_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEntailed.-entailed?", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.IEntailedVar = function() {
  var obj13591 = {};
  return obj13591
}();
cljs.core.logic.protocols._entailed_var_QMARK_ = function _entailed_var_QMARK_(c, x) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IEntailedVar$_entailed_var_QMARK_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IEntailedVar$_entailed_var_QMARK_$arity$2(c, x)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._entailed_var_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._entailed_var_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEntailedVar.-entailed-var?", c);
        }
      }
    }().call(null, c, x)
  }
};
cljs.core.logic.protocols.IWithConstraintId = function() {
  var obj13593 = {};
  return obj13593
}();
cljs.core.logic.protocols._with_id = function _with_id(c, id) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IWithConstraintId$_with_id$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IWithConstraintId$_with_id$arity$2(c, id)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._with_id[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._with_id["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithConstraintId.-with-id", c);
        }
      }
    }().call(null, c, id)
  }
};
cljs.core.logic.protocols.IConstraintId = function() {
  var obj13595 = {};
  return obj13595
}();
cljs.core.logic.protocols._id = function _id(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IConstraintId$_id$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IConstraintId$_id$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._id[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._id["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintId.-id", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.id = function id(c) {
  if(function() {
    var G__13597 = c;
    if(G__13597) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto__ = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return G__13597.cljs$core$logic$protocols$IConstraintId$
        }
      }())) {
        return true
      }else {
        if(!G__13597.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IConstraintId, G__13597)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IConstraintId, G__13597)
    }
  }()) {
    return cljs.core.logic.protocols._id.call(null, c)
  }else {
    return(new cljs.core.Keyword("cljs.core.logic.protocols", "id", "cljs.core.logic.protocols/id", 2361823267)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c))
  }
};
cljs.core.logic.protocols.with_id = function with_id(c, id) {
  if(function() {
    var G__13599 = c;
    if(G__13599) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto__ = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return G__13599.cljs$core$logic$protocols$IWithConstraintId$
        }
      }())) {
        return true
      }else {
        if(!G__13599.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IWithConstraintId, G__13599)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IWithConstraintId, G__13599)
    }
  }()) {
    return cljs.core.logic.protocols._with_id.call(null, c, id)
  }else {
    return cljs.core.vary_meta.call(null, c, cljs.core.assoc, new cljs.core.Keyword("cljs.core.logic.protocols", "id", "cljs.core.logic.protocols/id", 2361823267), id)
  }
};
cljs.core.logic.protocols.IConstraintWatchedStores = function() {
  var obj13601 = {};
  return obj13601
}();
cljs.core.logic.protocols._watched_stores = function _watched_stores(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._watched_stores[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._watched_stores["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintWatchedStores.-watched-stores", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.IConstraintOp = function() {
  var obj13603 = {};
  return obj13603
}();
cljs.core.logic.protocols._rator = function _rator(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._rator[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._rator["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintOp.-rator", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols._rands = function _rands(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._rands[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._rands["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstraintOp.-rands", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.IReifiableConstraint = function() {
  var obj13605 = {};
  return obj13605
}();
cljs.core.logic.protocols._reifyc = function _reifyc(c, v, r, a) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4(c, v, r, a)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._reifyc[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._reifyc["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReifiableConstraint.-reifyc", c);
        }
      }
    }().call(null, c, v, r, a)
  }
};
cljs.core.logic.protocols.reifiable_QMARK_ = function reifiable_QMARK_(x) {
  var G__13607 = x;
  if(G__13607) {
    var bit__9762__auto__ = null;
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = bit__9762__auto__;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return G__13607.cljs$core$logic$protocols$IReifiableConstraint$
      }
    }())) {
      return true
    }else {
      if(!G__13607.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IReifiableConstraint, G__13607)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IReifiableConstraint, G__13607)
  }
};
cljs.core.logic.protocols.IEnforceableConstraint = function() {
  var obj13609 = {};
  return obj13609
}();
cljs.core.logic.protocols.enforceable_QMARK_ = function enforceable_QMARK_(x) {
  var G__13611 = x;
  if(G__13611) {
    var bit__9762__auto__ = null;
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = bit__9762__auto__;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return G__13611.cljs$core$logic$protocols$IEnforceableConstraint$
      }
    }())) {
      return true
    }else {
      if(!G__13611.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IEnforceableConstraint, G__13611)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IEnforceableConstraint, G__13611)
  }
};
cljs.core.logic.protocols.IUnwrapConstraint = function() {
  var obj13613 = {};
  return obj13613
}();
cljs.core.logic.protocols._unwrap = function _unwrap(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IUnwrapConstraint$_unwrap$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IUnwrapConstraint$_unwrap$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._unwrap[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._unwrap["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnwrapConstraint.-unwrap", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.IMergeDomains = function() {
  var obj13615 = {};
  return obj13615
}();
cljs.core.logic.protocols._merge_doms = function _merge_doms(a, b) {
  if(function() {
    var and__9129__auto__ = a;
    if(and__9129__auto__) {
      return a.cljs$core$logic$protocols$IMergeDomains$_merge_doms$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return a.cljs$core$logic$protocols$IMergeDomains$_merge_doms$arity$2(a, b)
  }else {
    var x__9739__auto__ = a == null ? null : a;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._merge_doms[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._merge_doms["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMergeDomains.-merge-doms", a);
        }
      }
    }().call(null, a, b)
  }
};
cljs.core.logic.protocols.IMemberCount = function() {
  var obj13617 = {};
  return obj13617
}();
cljs.core.logic.protocols._member_count = function _member_count(dom) {
  if(function() {
    var and__9129__auto__ = dom;
    if(and__9129__auto__) {
      return dom.cljs$core$logic$protocols$IMemberCount$_member_count$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return dom.cljs$core$logic$protocols$IMemberCount$_member_count$arity$1(dom)
  }else {
    var x__9739__auto__ = dom == null ? null : dom;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._member_count[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._member_count["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMemberCount.-member-count", dom);
        }
      }
    }().call(null, dom)
  }
};
cljs.core.logic.protocols.IForceAnswerTerm = function() {
  var obj13619 = {};
  return obj13619
}();
cljs.core.logic.protocols._force_ans = function _force_ans(v, x) {
  if(function() {
    var and__9129__auto__ = v;
    if(and__9129__auto__) {
      return v.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return v.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2(v, x)
  }else {
    var x__9739__auto__ = v == null ? null : v;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._force_ans[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._force_ans["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IForceAnswerTerm.-force-ans", v);
        }
      }
    }().call(null, v, x)
  }
};
cljs.core.logic.protocols.IDisunifyTerms = function() {
  var obj13621 = {};
  return obj13621
}();
cljs.core.logic.protocols._disunify_terms = function _disunify_terms(u, v, s, cs) {
  if(function() {
    var and__9129__auto__ = u;
    if(and__9129__auto__) {
      return u.cljs$core$logic$protocols$IDisunifyTerms$_disunify_terms$arity$4
    }else {
      return and__9129__auto__
    }
  }()) {
    return u.cljs$core$logic$protocols$IDisunifyTerms$_disunify_terms$arity$4(u, v, s, cs)
  }else {
    var x__9739__auto__ = u == null ? null : u;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._disunify_terms[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._disunify_terms["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisunifyTerms.-disunify-terms", u);
        }
      }
    }().call(null, u, v, s, cs)
  }
};
cljs.core.logic.protocols.ITreeConstraint = function() {
  var obj13623 = {};
  return obj13623
}();
cljs.core.logic.protocols.tree_constraint_QMARK_ = function tree_constraint_QMARK_(x) {
  var G__13625 = x;
  if(G__13625) {
    var bit__9762__auto__ = null;
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = bit__9762__auto__;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return G__13625.cljs$core$logic$protocols$ITreeConstraint$
      }
    }())) {
      return true
    }else {
      if(!G__13625.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.ITreeConstraint, G__13625)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.ITreeConstraint, G__13625)
  }
};
cljs.core.logic.protocols.IPrefix = function() {
  var obj13627 = {};
  return obj13627
}();
cljs.core.logic.protocols._prefix = function _prefix(c) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IPrefix$_prefix$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IPrefix$_prefix$arity$1(c)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._prefix[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._prefix["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrefix.-prefix", c);
        }
      }
    }().call(null, c)
  }
};
cljs.core.logic.protocols.IWithPrefix = function() {
  var obj13629 = {};
  return obj13629
}();
cljs.core.logic.protocols._with_prefix = function _with_prefix(c, p) {
  if(function() {
    var and__9129__auto__ = c;
    if(and__9129__auto__) {
      return c.cljs$core$logic$protocols$IWithPrefix$_with_prefix$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return c.cljs$core$logic$protocols$IWithPrefix$_with_prefix$arity$2(c, p)
  }else {
    var x__9739__auto__ = c == null ? null : c;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._with_prefix[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._with_prefix["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithPrefix.-with-prefix", c);
        }
      }
    }().call(null, c, p)
  }
};
cljs.core.logic.protocols.IUnifyWithPMap = function() {
  var obj13631 = {};
  return obj13631
}();
cljs.core.logic.protocols.unify_with_pmap = function unify_with_pmap(pmap, u, s) {
  if(function() {
    var and__9129__auto__ = pmap;
    if(and__9129__auto__) {
      return pmap.cljs$core$logic$protocols$IUnifyWithPMap$unify_with_pmap$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return pmap.cljs$core$logic$protocols$IUnifyWithPMap$unify_with_pmap$arity$3(pmap, u, s)
  }else {
    var x__9739__auto__ = pmap == null ? null : pmap;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols.unify_with_pmap[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols.unify_with_pmap["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithPMap.unify-with-pmap", pmap);
        }
      }
    }().call(null, pmap, u, s)
  }
};
cljs.core.logic.protocols.IConstrainTree = function() {
  var obj13633 = {};
  return obj13633
}();
cljs.core.logic.protocols._constrain_tree = function _constrain_tree(t, fc, s) {
  if(function() {
    var and__9129__auto__ = t;
    if(and__9129__auto__) {
      return t.cljs$core$logic$protocols$IConstrainTree$_constrain_tree$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return t.cljs$core$logic$protocols$IConstrainTree$_constrain_tree$arity$3(t, fc, s)
  }else {
    var x__9739__auto__ = t == null ? null : t;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._constrain_tree[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._constrain_tree["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConstrainTree.-constrain-tree", t);
        }
      }
    }().call(null, t, fc, s)
  }
};
cljs.core.logic.protocols.IFeature = function() {
  var obj13635 = {};
  return obj13635
}();
cljs.core.logic.protocols._feature = function _feature(x) {
  if(function() {
    var and__9129__auto__ = x;
    if(and__9129__auto__) {
      return x.cljs$core$logic$protocols$IFeature$_feature$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return x.cljs$core$logic$protocols$IFeature$_feature$arity$1(x)
  }else {
    var x__9739__auto__ = x == null ? null : x;
    return function() {
      var or__9141__auto__ = cljs.core.logic.protocols._feature[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.protocols._feature["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IFeature.-feature", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__15375 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__15375;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__15379 = cljs.core._EQ_;
    var expr__15380 = limit;
    if(cljs.core.truth_(pred__15379.call(null, 1, expr__15380))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null)
    }else {
      if(cljs.core.truth_(pred__15379.call(null, 2, expr__15380))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4092__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4092__auto__)) {
            var m = temp__4092__auto__;
            var index = s__$1.indexOf(m);
            var G__15382 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__15383 = limit__$1 - 1;
            var G__15384 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__15382;
            limit__$1 = G__15383;
            parts = G__15384;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__15385 = index - 1;
        index = G__15385;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4092__auto___15386 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4092__auto___15386)) {
        var replacement_15387 = temp__4092__auto___15386;
        buffer.append([cljs.core.str(replacement_15387)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__15388 = index + 1;
      index = G__15388;
      continue
    }
    break
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj15390 = {};
  return obj15390
}();
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__9129__auto__ = reader;
    if(and__9129__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__9739__auto__ = reader == null ? null : reader;
    return function() {
      var or__9141__auto__ = cljs.reader.read_char[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.reader.read_char["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__9129__auto__ = reader;
    if(and__9129__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__9739__auto__ = reader == null ? null : reader;
    return function() {
      var or__9141__auto__ = cljs.reader.unread[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.reader.unread["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if(self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx]
  }else {
    return self__.buffer.pop()
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch)
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1)
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__9141__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__9141__auto__)) {
    return or__9141__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch
  }())
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__15391) {
    var rdr = cljs.core.first(arglist__15391);
    var msg = cljs.core.rest(arglist__15391);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__9129__auto__ = !(ch === "#");
  if(and__9129__auto__) {
    var and__9129__auto____$1 = !(ch === "'");
    if(and__9129__auto____$1) {
      var and__9129__auto____$2 = !(ch === ":");
      if(and__9129__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__9129__auto____$2
      }
    }else {
      return and__9129__auto____$1
    }
  }else {
    return and__9129__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__15392 = function() {
        sb.append(ch);
        return sb
      }();
      var G__15393 = cljs.reader.read_char.call(null, rdr);
      sb = G__15392;
      ch = G__15393;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch === "\n" || ch === "\r" || ch == null) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!(group3 == null || group3.length < 1)) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(!(matches == null) && matches[0] === s) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\b"
            }else {
              if(c === "f") {
                return"\f"
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__15394 = cljs.reader.read_char.call(null, rdr);
      ch = G__15394;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4092__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var macrofn = temp__4092__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__15395 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__15395;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__15396 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__15396;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4092__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var obj = temp__4092__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = ch == null;
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__9141__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__15397 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__15398 = cljs.reader.read_char.call(null, reader);
      buffer = G__15397;
      ch = G__15398;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__15399 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__15400 = cljs.reader.read_char.call(null, reader);
        buffer = G__15399;
        ch = G__15400;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__15401 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__15402 = cljs.reader.read_char.call(null, reader);
            buffer = G__15401;
            ch = G__15402;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null)
  }else {
    if(typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null)
    }else {
      if(f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym)
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__15404 = o;
    if(G__15404) {
      var bit__9762__auto__ = G__15404.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__9762__auto__ || G__15404.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__15404.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__15404)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__15404)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "#") {
                                  return cljs.reader.read_dispatch
                                }else {
                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__15405 = reader;
        var G__15406 = eof_is_error;
        var G__15407 = sentinel;
        var G__15408 = is_recursive;
        reader = G__15405;
        eof_is_error = G__15406;
        sentinel = G__15407;
        is_recursive = G__15408;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__15409 = cljs.reader.read_comment.call(null, reader, ch);
          var G__15410 = eof_is_error;
          var G__15411 = sentinel;
          var G__15412 = is_recursive;
          reader = G__15409;
          eof_is_error = G__15410;
          sentinel = G__15411;
          is_recursive = G__15412;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__15413 = reader;
              var G__15414 = eof_is_error;
              var G__15415 = sentinel;
              var G__15416 = is_recursive;
              reader = G__15413;
              eof_is_error = G__15414;
              sentinel = G__15415;
              is_recursive = G__15416;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__15417 = b.append("0");
            b = G__15417;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div)
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400))
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if(cljs.core.not.call(null, isNaN(n))) {
    return n
  }else {
    return null
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if(low <= n && n <= high) {
  }else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""))
  }
  return n
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__15419 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__15419, 0, null);
  var years = cljs.core.nth.call(null, vec__15419, 1, null);
  var months = cljs.core.nth.call(null, vec__15419, 2, null);
  var days = cljs.core.nth.call(null, vec__15419, 3, null);
  var hours = cljs.core.nth.call(null, vec__15419, 4, null);
  var minutes = cljs.core.nth.call(null, vec__15419, 5, null);
  var seconds = cljs.core.nth.call(null, vec__15419, 6, null);
  var fraction = cljs.core.nth.call(null, vec__15419, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__15419, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__15419, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__15419, 10, null);
  var v = vec__15419;
  if(cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""))
  }else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, months);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 1
      }
    }();
    var days__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, days);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 1
      }
    }();
    var hours__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, hours);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 0
      }
    }();
    var minutes__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, minutes);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 0
      }
    }();
    var seconds__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, seconds);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 0
      }
    }();
    var fraction__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 0
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 0
      }
    }();
    var offset_minutes__$1 = function() {
      var or__9141__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return 0
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null)
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4092__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4092__auto__)) {
    var vec__15421 = temp__4092__auto__;
    var years = cljs.core.nth.call(null, vec__15421, 0, null);
    var months = cljs.core.nth.call(null, vec__15421, 1, null);
    var days = cljs.core.nth.call(null, vec__15421, 2, null);
    var hours = cljs.core.nth.call(null, vec__15421, 3, null);
    var minutes = cljs.core.nth.call(null, vec__15421, 4, null);
    var seconds = cljs.core.nth.call(null, vec__15421, 5, null);
    var ms = cljs.core.nth.call(null, vec__15421, 6, null);
    var offset = cljs.core.nth.call(null, vec__15421, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(typeof uuid === "string") {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__15345_SHARP_) {
    return max === p1__15345_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__15346__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__15346 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__15346__delegate.call(this, s1, s2, sets)
    };
    G__15346.cljs$lang$maxFixedArity = 2;
    G__15346.cljs$lang$applyTo = function(arglist__15347) {
      var s1 = cljs.core.first(arglist__15347);
      arglist__15347 = cljs.core.next(arglist__15347);
      var s2 = cljs.core.first(arglist__15347);
      var sets = cljs.core.rest(arglist__15347);
      return G__15346__delegate(s1, s2, sets)
    };
    G__15346.cljs$core$IFn$_invoke$arity$variadic = G__15346__delegate;
    return G__15346
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__15349 = s2;
        var G__15350 = s1;
        s1 = G__15349;
        s2 = G__15350;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__15351__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__15348_SHARP_) {
        return-cljs.core.count.call(null, p1__15348_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__15351 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__15351__delegate.call(this, s1, s2, sets)
    };
    G__15351.cljs$lang$maxFixedArity = 2;
    G__15351.cljs$lang$applyTo = function(arglist__15352) {
      var s1 = cljs.core.first(arglist__15352);
      arglist__15352 = cljs.core.next(arglist__15352);
      var s2 = cljs.core.first(arglist__15352);
      var sets = cljs.core.rest(arglist__15352);
      return G__15351__delegate(s1, s2, sets)
    };
    G__15351.cljs$core$IFn$_invoke$arity$variadic = G__15351__delegate;
    return G__15351
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__15353__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__15353 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__15353__delegate.call(this, s1, s2, sets)
    };
    G__15353.cljs$lang$maxFixedArity = 2;
    G__15353.cljs$lang$applyTo = function(arglist__15354) {
      var s1 = cljs.core.first(arglist__15354);
      arglist__15354 = cljs.core.next(arglist__15354);
      var s2 = cljs.core.first(arglist__15354);
      var sets = cljs.core.rest(arglist__15354);
      return G__15353__delegate(s1, s2, sets)
    };
    G__15353.cljs$core$IFn$_invoke$arity$variadic = G__15353__delegate;
    return G__15353
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__15355_SHARP_) {
    return cljs.core.select_keys.call(null, p1__15355_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__15358) {
    var vec__15359 = p__15358;
    var old = cljs.core.nth.call(null, vec__15359, 0, null);
    var new$ = cljs.core.nth.call(null, vec__15359, 1, null);
    if(cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__15360_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__15360_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__15363) {
    var vec__15364 = p__15363;
    var k = cljs.core.nth.call(null, vec__15364, 0, null);
    var v = cljs.core.nth.call(null, vec__15364, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k)
  }, cljs.core.PersistentArrayMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__15371 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__15371, 0, null);
      var s = cljs.core.nth.call(null, vec__15371, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if(cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__15365_SHARP_, p2__15366_SHARP_) {
            return cljs.core.conj.call(null, p1__15365_SHARP_, cljs.core.merge.call(null, p2__15366_SHARP_, x))
          }, ret, found)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__15372 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__15372, 0, null);
    var s = cljs.core.nth.call(null, vec__15372, 1, null);
    var k = cljs.core.nth.call(null, vec__15372, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if(cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__15367_SHARP_, p2__15368_SHARP_) {
          return cljs.core.conj.call(null, p1__15367_SHARP_, cljs.core.merge.call(null, p2__15368_SHARP_, x))
        }, ret, found)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__15373_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__15373_SHARP_)
  }, set1)
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__15374_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__15374_SHARP_)
  }, set2)
};
goog.provide("cljs.core.logic");
goog.require("cljs.core");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic.protocols");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("clojure.set");
cljs.core.logic._STAR_logic_dbs_STAR_ = cljs.core.PersistentVector.EMPTY;
cljs.core.logic.fk = new Error;
cljs.core.logic.assoc_meta = function assoc_meta(x, k, v) {
  return cljs.core.with_meta.call(null, x, cljs.core.assoc.call(null, cljs.core.meta.call(null, x), k, v))
};
cljs.core.logic.dissoc_meta = function dissoc_meta(x, k) {
  return cljs.core.with_meta.call(null, x, cljs.core.dissoc.call(null, cljs.core.meta.call(null, x), k))
};
cljs.core.logic.assoc_dom = function assoc_dom(x, k, v) {
  return cljs.core.assoc.call(null, x, new cljs.core.Keyword(null, "doms", "doms", 1016993507), cljs.core.assoc.call(null, x.doms, k, v))
};
cljs.core.logic.dissoc_dom = function dissoc_dom(x, k) {
  return cljs.core.assoc.call(null, x, new cljs.core.Keyword(null, "doms", "doms", 1016993507), cljs.core.dissoc.call(null, x.doms, k))
};
cljs.core.logic.record_QMARK_ = function record_QMARK_(x) {
  var G__13679 = x;
  if(G__13679) {
    var bit__9762__auto__ = G__13679.cljs$lang$protocol_mask$partition0$ & 67108864;
    if(bit__9762__auto__ || G__13679.cljs$core$IRecord$) {
      return true
    }else {
      if(!G__13679.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__13679)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__13679)
  }
};
cljs.core.logic.Pair = function(lhs, rhs) {
  this.lhs = lhs;
  this.rhs = rhs;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2149583122
};
cljs.core.logic.Pair.cljs$lang$type = true;
cljs.core.logic.Pair.cljs$lang$ctorStr = "cljs.core.logic/Pair";
cljs.core.logic.Pair.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/Pair")
};
cljs.core.logic.Pair.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("("), cljs.core.str(x__$1.lhs), cljs.core.str(" . "), cljs.core.str(x__$1.rhs), cljs.core.str(")")].join(""))
};
cljs.core.logic.Pair.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if(o instanceof cljs.core.logic.Pair) {
    return cljs.core._EQ_.call(null, self__.lhs, o.lhs) && cljs.core._EQ_.call(null, self__.rhs, o.rhs)
  }else {
    return false
  }
};
cljs.core.logic.Pair.prototype.cljs$core$IMapEntry$_key$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.lhs
};
cljs.core.logic.Pair.prototype.cljs$core$IMapEntry$_val$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.rhs
};
cljs.core.logic.Pair.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  var G__13680 = i;
  if(cljs.core._EQ_.call(null, 1, G__13680)) {
    return self__.rhs
  }else {
    if(cljs.core._EQ_.call(null, 0, G__13680)) {
      return self__.lhs
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw cljs.core.ex_info.call(null, "Index out of bounds", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "index", "index", 1114250308), i, new cljs.core.Keyword(null, "coll", "coll", 1016963678), this$__$1], null));
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.Pair.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, i, not_found) {
  var self__ = this;
  var ___$1 = this;
  var G__13681 = i;
  if(cljs.core._EQ_.call(null, 1, G__13681)) {
    return self__.rhs
  }else {
    if(cljs.core._EQ_.call(null, 0, G__13681)) {
      return self__.lhs
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.Pair.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return 2
};
cljs.core.logic.Pair.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.Pair.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13682 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "rhs", "rhs", 1014017135), G__13682)) {
    return self__.rhs
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "lhs", "lhs", 1014011369), G__13682)) {
      return self__.lhs
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.Pair.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str("("), cljs.core.str(self__.lhs), cljs.core.str(" . "), cljs.core.str(self__.rhs), cljs.core.str(")")].join("")
};
cljs.core.logic.__GT_Pair = function __GT_Pair(lhs, rhs) {
  return new cljs.core.logic.Pair(lhs, rhs)
};
cljs.core.logic.pair = function pair(lhs, rhs) {
  return new cljs.core.logic.Pair(lhs, rhs)
};
cljs.core.logic.var_rands = function var_rands(a, c) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.filter.call(null, cljs.core.logic.lvar_QMARK_, cljs.core.map.call(null, function(p1__13683_SHARP_) {
    return cljs.core.logic.protocols.root_var.call(null, a, p1__13683_SHARP_)
  }, cljs.core.logic.protocols._rands.call(null, c))))
};
cljs.core.logic.unbound_rands = function unbound_rands(a, c) {
  return cljs.core.filter.call(null, function(p1__13684_SHARP_) {
    return cljs.core.logic.lvar_QMARK_.call(null, cljs.core.logic.protocols.root_val.call(null, a, p1__13684_SHARP_))
  }, cljs.core.logic.var_rands.call(null, a, c))
};
cljs.core.logic.ConstraintStore = function(km, cm, cid, running) {
  this.km = km;
  this.cm = cm;
  this.cid = cid;
  this.running = running;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.logic.ConstraintStore.cljs$lang$type = true;
cljs.core.logic.ConstraintStore.cljs$lang$ctorStr = "cljs.core.logic/ConstraintStore";
cljs.core.logic.ConstraintStore.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/ConstraintStore")
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.count.call(null, self__.cm)
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$ = true;
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$addc$arity$3 = function(this$, a, c) {
  var self__ = this;
  var this$__$1 = this;
  var vars = cljs.core.logic.var_rands.call(null, a, c);
  var c__$1 = cljs.core.logic.protocols.with_id.call(null, c, self__.cid);
  var cs = cljs.core.reduce.call(null, function(vars, c__$1) {
    return function(cs, v) {
      return cljs.core.logic.add_var.call(null, cs, v, c__$1)
    }
  }(vars, c__$1), this$__$1, vars);
  return new cljs.core.logic.ConstraintStore(cs.km, cs.cm, self__.cid + 1, self__.running)
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$updatec$arity$3 = function(this$, a, c) {
  var self__ = this;
  var this$__$1 = this;
  var oc = self__.cm.call(null, cljs.core.logic.protocols.id.call(null, c));
  var nkm = function() {
    var G__13686 = c;
    if(G__13686) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto__ = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return G__13686.cljs$core$logic$protocols$IEntailedVar$
        }
      }())) {
        return true
      }else {
        if(!G__13686.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IEntailedVar, G__13686)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IEntailedVar, G__13686)
    }
  }() ? cljs.core.reduce.call(null, function(oc) {
    return function(km__$1, x) {
      if(cljs.core.truth_(cljs.core.logic.protocols._entailed_var_QMARK_.call(null, c, x))) {
        return cljs.core.dissoc.call(null, km__$1, x)
      }else {
        return km__$1
      }
    }
  }(oc), self__.km, cljs.core.logic.var_rands.call(null, a, oc)) : self__.km;
  return new cljs.core.logic.ConstraintStore(nkm, cljs.core.assoc.call(null, self__.cm, cljs.core.logic.protocols.id.call(null, c), c), self__.cid, self__.running)
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$remc$arity$3 = function(this$, a, c) {
  var self__ = this;
  var this$__$1 = this;
  var vs = cljs.core.logic.var_rands.call(null, a, c);
  var ocid = cljs.core.logic.protocols.id.call(null, c);
  var nkm = cljs.core.reduce.call(null, function(vs, ocid) {
    return function(km__$1, v) {
      var vcs = cljs.core.disj.call(null, cljs.core.get.call(null, km__$1, v), ocid);
      if(cljs.core.empty_QMARK_.call(null, vcs)) {
        return cljs.core.dissoc.call(null, km__$1, v)
      }else {
        return cljs.core.assoc.call(null, km__$1, v, vcs)
      }
    }
  }(vs, ocid), self__.km, vs);
  var ncm = cljs.core.dissoc.call(null, self__.cm, ocid);
  return new cljs.core.logic.ConstraintStore(nkm, ncm, self__.cid, self__.running)
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$runc$arity$3 = function(this$, c, state) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(state)) {
    return new cljs.core.logic.ConstraintStore(self__.km, self__.cm, self__.cid, cljs.core.conj.call(null, self__.running, cljs.core.logic.protocols.id.call(null, c)))
  }else {
    return new cljs.core.logic.ConstraintStore(self__.km, self__.cm, self__.cid, cljs.core.disj.call(null, self__.running, cljs.core.logic.protocols.id.call(null, c)))
  }
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$constraints_for$arity$4 = function(this$, a, x, ws) {
  var self__ = this;
  var this$__$1 = this;
  var temp__4094__auto__ = cljs.core.get.call(null, self__.km, cljs.core.logic.protocols.root_var.call(null, a, x));
  if(cljs.core.truth_(temp__4094__auto__)) {
    var ids = temp__4094__auto__;
    return cljs.core.filter.call(null, function(p1__13685_SHARP_) {
      return cljs.core.logic.protocols._watched_stores.call(null, p1__13685_SHARP_).call(null, ws)
    }, cljs.core.map.call(null, self__.cm, cljs.core.remove.call(null, self__.running, ids)))
  }else {
    return null
  }
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$logic$protocols$IConstraintStore$migrate$arity$3 = function(this$, x, root) {
  var self__ = this;
  var this$__$1 = this;
  var xcs = self__.km.call(null, x);
  var rootcs = self__.km.call(null, root, cljs.core.PersistentHashSet.EMPTY);
  var nkm = cljs.core.assoc.call(null, cljs.core.dissoc.call(null, self__.km, x), root, cljs.core.into.call(null, rootcs, xcs));
  return new cljs.core.logic.ConstraintStore(nkm, self__.cm, self__.cid, self__.running)
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.ConstraintStore.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13687 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "running", "running", 2564688177), G__13687)) {
    return self__.running
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cid", "cid", 1014002736), G__13687)) {
      return self__.cid
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cm", "cm", 1013907420), G__13687)) {
        return self__.cm
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "km", "km", 1013907668), G__13687)) {
          return self__.km
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return not_found
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.logic.__GT_ConstraintStore = function __GT_ConstraintStore(km, cm, cid, running) {
  return new cljs.core.logic.ConstraintStore(km, cm, cid, running)
};
cljs.core.logic.add_var = function add_var(cs, x, c) {
  if(cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, x))) {
  }else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("constraint store assoc expected logic var key: "), cljs.core.str(x)].join(""), cljs.core.PersistentArrayMap.EMPTY);
  }
  var cm = cs.cm;
  var km = cs.km;
  var cid = cs.cid;
  var nkm = cljs.core.update_in.call(null, km, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), cljs.core.fnil.call(null, function(cm, km, cid) {
    return function(s) {
      return cljs.core.conj.call(null, s, cid)
    }
  }(cm, km, cid), cljs.core.PersistentHashSet.EMPTY));
  var ncm = cljs.core.assoc.call(null, cm, cid, c);
  return new cljs.core.logic.ConstraintStore(nkm, ncm, cid, (new cljs.core.Keyword(null, "running", "running", 2564688177)).cljs$core$IFn$_invoke$arity$1(cs))
};
cljs.core.logic.make_cs = function make_cs() {
  return new cljs.core.logic.ConstraintStore(cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY, 0, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.logic.SubstValue = function(v, doms, eset, __meta, __extmap) {
  this.v = v;
  this.doms = doms;
  this.eset = eset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
cljs.core.logic.SubstValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9693__auto__) {
  var self__ = this;
  var this__9693__auto____$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, this__9693__auto____$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.logic.SubstValue.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9698__auto__, k__9699__auto__) {
  var self__ = this;
  var this__9698__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9698__auto____$1, k__9699__auto__, null)
};
cljs.core.logic.SubstValue.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9700__auto__, k13689, else__9701__auto__) {
  var self__ = this;
  var this__9700__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k13689, new cljs.core.Keyword(null, "v", "v", 1013904360))) {
    return self__.v
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k13689, new cljs.core.Keyword(null, "doms", "doms", 1016993507))) {
      return self__.doms
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k13689, new cljs.core.Keyword(null, "eset", "eset", 1017026895))) {
        return self__.eset
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k13689, else__9701__auto__)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.SubstValue.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9705__auto__, k__9706__auto__, G__13688) {
  var self__ = this;
  var this__9705__auto____$1 = this;
  var pred__13691 = cljs.core.keyword_identical_QMARK_;
  var expr__13692 = k__9706__auto__;
  if(cljs.core.truth_(pred__13691.call(null, new cljs.core.Keyword(null, "v", "v", 1013904360), expr__13692))) {
    return new cljs.core.logic.SubstValue(G__13688, self__.doms, self__.eset, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__13691.call(null, new cljs.core.Keyword(null, "doms", "doms", 1016993507), expr__13692))) {
      return new cljs.core.logic.SubstValue(self__.v, G__13688, self__.eset, self__.__meta, self__.__extmap, null)
    }else {
      if(cljs.core.truth_(pred__13691.call(null, new cljs.core.Keyword(null, "eset", "eset", 1017026895), expr__13692))) {
        return new cljs.core.logic.SubstValue(self__.v, self__.doms, G__13688, self__.__meta, self__.__extmap, null)
      }else {
        return new cljs.core.logic.SubstValue(self__.v, self__.doms, self__.eset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9706__auto__, G__13688), null)
      }
    }
  }
};
cljs.core.logic.SubstValue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9712__auto__, writer__9713__auto__, opts__9714__auto__) {
  var self__ = this;
  var this__9712__auto____$1 = this;
  var pr_pair__9715__auto__ = function(keyval__9716__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, cljs.core.pr_writer, "", " ", "", opts__9714__auto__, keyval__9716__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, pr_pair__9715__auto__, "#cljs.core.logic.SubstValue{", ", ", "}", opts__9714__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 1013904360), self__.v], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "doms", "doms", 1016993507), self__.doms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "eset", "eset", 1017026895), self__.eset], null)], null), self__.__extmap))
};
cljs.core.logic.SubstValue.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9703__auto__, entry__9704__auto__) {
  var self__ = this;
  var this__9703__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__9704__auto__)) {
    return cljs.core._assoc.call(null, this__9703__auto____$1, cljs.core._nth.call(null, entry__9704__auto__, 0), cljs.core._nth.call(null, entry__9704__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9703__auto____$1, entry__9704__auto__)
  }
};
cljs.core.logic.SubstValue.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(self__.v)].join("")
};
cljs.core.logic.SubstValue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9710__auto__) {
  var self__ = this;
  var this__9710__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 1013904360), self__.v], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "doms", "doms", 1016993507), self__.doms], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "eset", "eset", 1017026895), self__.eset], null)], null), self__.__extmap))
};
cljs.core.logic.SubstValue.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9702__auto__) {
  var self__ = this;
  var this__9702__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
cljs.core.logic.SubstValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9694__auto__, other__9695__auto__) {
  var self__ = this;
  var this__9694__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__9129__auto__ = other__9695__auto__;
    if(cljs.core.truth_(and__9129__auto__)) {
      return this__9694__auto____$1.constructor === other__9695__auto__.constructor && cljs.core.equiv_map.call(null, this__9694__auto____$1, other__9695__auto__)
    }else {
      return and__9129__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
cljs.core.logic.SubstValue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9697__auto__, G__13688) {
  var self__ = this;
  var this__9697__auto____$1 = this;
  return new cljs.core.logic.SubstValue(self__.v, self__.doms, self__.eset, G__13688, self__.__extmap, self__.__hash)
};
cljs.core.logic.SubstValue.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9696__auto__) {
  var self__ = this;
  var this__9696__auto____$1 = this;
  return self__.__meta
};
cljs.core.logic.SubstValue.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9707__auto__, k__9708__auto__) {
  var self__ = this;
  var this__9707__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "eset", "eset", 1017026895), null, new cljs.core.Keyword(null, "v", "v", 1013904360), null, new cljs.core.Keyword(null, "doms", "doms", 1016993507), null], null), null), k__9708__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9707__auto____$1), self__.__meta), k__9708__auto__)
  }else {
    return new cljs.core.logic.SubstValue(self__.v, self__.doms, self__.eset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9708__auto__)), null)
  }
};
cljs.core.logic.SubstValue.cljs$lang$type = true;
cljs.core.logic.SubstValue.cljs$lang$ctorPrSeq = function(this__9732__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.logic/SubstValue")
};
cljs.core.logic.SubstValue.cljs$lang$ctorPrWriter = function(this__9732__auto__, writer__9733__auto__) {
  return cljs.core._write.call(null, writer__9733__auto__, "cljs.core.logic/SubstValue")
};
cljs.core.logic.__GT_SubstValue = function __GT_SubstValue(v, doms, eset) {
  return new cljs.core.logic.SubstValue(v, doms, eset)
};
cljs.core.logic.map__GT_SubstValue = function map__GT_SubstValue(G__13690) {
  return new cljs.core.logic.SubstValue((new cljs.core.Keyword(null, "v", "v", 1013904360)).cljs$core$IFn$_invoke$arity$1(G__13690), (new cljs.core.Keyword(null, "doms", "doms", 1016993507)).cljs$core$IFn$_invoke$arity$1(G__13690), (new cljs.core.Keyword(null, "eset", "eset", 1017026895)).cljs$core$IFn$_invoke$arity$1(G__13690), null, cljs.core.dissoc.call(null, G__13690, new cljs.core.Keyword(null, "v", "v", 1013904360), new cljs.core.Keyword(null, "doms", "doms", 1016993507), new cljs.core.Keyword(null, 
  "eset", "eset", 1017026895)))
};
cljs.core.logic.subst_val_QMARK_ = function subst_val_QMARK_(x) {
  return x instanceof cljs.core.logic.SubstValue
};
cljs.core.logic.subst_val = function() {
  var subst_val = null;
  var subst_val__1 = function(x) {
    return new cljs.core.logic.SubstValue(x, null, null)
  };
  var subst_val__2 = function(x, doms) {
    return new cljs.core.logic.SubstValue(x, doms, null)
  };
  var subst_val__3 = function(x, doms, _meta) {
    return cljs.core.with_meta.call(null, new cljs.core.logic.SubstValue(x, doms, null), _meta)
  };
  var subst_val__4 = function(x, doms, eset, _meta) {
    return cljs.core.with_meta.call(null, new cljs.core.logic.SubstValue(x, doms, eset), _meta)
  };
  subst_val = function(x, doms, eset, _meta) {
    switch(arguments.length) {
      case 1:
        return subst_val__1.call(this, x);
      case 2:
        return subst_val__2.call(this, x, doms);
      case 3:
        return subst_val__3.call(this, x, doms, eset);
      case 4:
        return subst_val__4.call(this, x, doms, eset, _meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subst_val.cljs$core$IFn$_invoke$arity$1 = subst_val__1;
  subst_val.cljs$core$IFn$_invoke$arity$2 = subst_val__2;
  subst_val.cljs$core$IFn$_invoke$arity$3 = subst_val__3;
  subst_val.cljs$core$IFn$_invoke$arity$4 = subst_val__4;
  return subst_val
}();
cljs.core.logic.occurs_check = function occurs_check(s, u, v) {
  var v__$1 = cljs.core.logic.protocols.walk.call(null, s, v);
  return cljs.core.logic.protocols.occurs_check_term.call(null, v__$1, u, s)
};
cljs.core.logic.ext = function ext(s, u, v) {
  if(cljs.core.truth_(function() {
    var and__9129__auto__ = s.oc;
    if(cljs.core.truth_(and__9129__auto__)) {
      return cljs.core.logic.occurs_check.call(null, s, u, cljs.core.logic.subst_val_QMARK_.call(null, v) ? v.v : v)
    }else {
      return and__9129__auto__
    }
  }())) {
    return null
  }else {
    return cljs.core.logic.protocols.ext_no_check.call(null, s, u, v)
  }
};
cljs.core.logic.walk_STAR_ = function walk_STAR_(s, v) {
  var v__$1 = cljs.core.logic.protocols.walk.call(null, s, v);
  return cljs.core.logic.protocols.walk_term.call(null, v__$1, function(x) {
    var x__$1 = cljs.core.logic.protocols.walk.call(null, s, x);
    if(cljs.core.truth_(cljs.core.logic.tree_term_QMARK_.call(null, x__$1))) {
      return walk_STAR_.call(null, s, x__$1)
    }else {
      return x__$1
    }
  })
};
cljs.core.logic.unify = function unify(s, u, v) {
  if(u === v) {
    return s
  }else {
    var u__$1 = cljs.core.logic.protocols.walk.call(null, s, u);
    var v__$1 = cljs.core.logic.protocols.walk.call(null, s, v);
    if(cljs.core.truth_(function() {
      var and__9129__auto__ = cljs.core.logic.lvar_QMARK_.call(null, u__$1);
      if(cljs.core.truth_(and__9129__auto__)) {
        return cljs.core._EQ_.call(null, u__$1, v__$1)
      }else {
        return and__9129__auto__
      }
    }())) {
      return s
    }else {
      if(cljs.core.truth_(function() {
        var and__9129__auto__ = cljs.core.not.call(null, cljs.core.logic.lvar_QMARK_.call(null, u__$1));
        if(and__9129__auto__) {
          return cljs.core.logic.lvar_QMARK_.call(null, v__$1)
        }else {
          return and__9129__auto__
        }
      }())) {
        return cljs.core.logic.protocols.unify_terms.call(null, v__$1, u__$1, s)
      }else {
        return cljs.core.logic.protocols.unify_terms.call(null, u__$1, v__$1, s)
      }
    }
  }
};
cljs.core.logic.unbound_names = function() {
  var r = cljs.core.range.call(null, 100);
  return cljs.core.zipmap.call(null, r, cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.symbol, cljs.core.str), cljs.core.repeat.call(null, "_"), r))
}();
cljs.core.logic.reify_lvar_name = function reify_lvar_name(s) {
  var c = cljs.core.count.call(null, s);
  if(c < 100) {
    return cljs.core.logic.unbound_names.call(null, c)
  }else {
    return cljs.core.symbol.call(null, [cljs.core.str("_"), cljs.core.str(cljs.core.count.call(null, s))].join(""))
  }
};
cljs.core.logic._reify_STAR_ = function _reify_STAR_(s, v) {
  var v__$1 = cljs.core.logic.protocols.walk.call(null, s, v);
  return cljs.core.logic.protocols.reify_term.call(null, v__$1, s)
};
cljs.core.logic._reify = function() {
  var _reify = null;
  var _reify__2 = function(s, v) {
    var v__$1 = cljs.core.logic.walk_STAR_.call(null, s, v);
    return cljs.core.logic.walk_STAR_.call(null, cljs.core.logic._reify_STAR_.call(null, cljs.core.with_meta.call(null, cljs.core.logic.empty_s, cljs.core.meta.call(null, s)), v__$1), v__$1)
  };
  var _reify__3 = function(s, v, r) {
    var v__$1 = cljs.core.logic.walk_STAR_.call(null, s, v);
    return cljs.core.logic.walk_STAR_.call(null, cljs.core.logic._reify_STAR_.call(null, r, v__$1), v__$1)
  };
  _reify = function(s, v, r) {
    switch(arguments.length) {
      case 2:
        return _reify__2.call(this, s, v);
      case 3:
        return _reify__3.call(this, s, v, r)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reify.cljs$core$IFn$_invoke$arity$2 = _reify__2;
  _reify.cljs$core$IFn$_invoke$arity$3 = _reify__3;
  return _reify
}();
cljs.core.logic.build = function build(s, u) {
  return cljs.core.logic.protocols.build_term.call(null, u, s)
};
cljs.core.logic.Substitutions = function(s, vs, ts, cs, cq, cqs, oc, _meta) {
  this.s = s;
  this.vs = vs;
  this.ts = ts;
  this.cs = cs;
  this.cq = cq;
  this.cqs = cqs;
  this.oc = oc;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2491150
};
cljs.core.logic.Substitutions.cljs$lang$type = true;
cljs.core.logic.Substitutions.cljs$lang$ctorStr = "cljs.core.logic/Substitutions";
cljs.core.logic.Substitutions.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/Substitutions")
};
cljs.core.logic.Substitutions.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.Substitutions.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13694 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "oc", "oc", 1013907782), G__13694)) {
    return self__.oc
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cqs", "cqs", 1014002999), G__13694)) {
      return self__.cqs
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cq", "cq", 1013907424), G__13694)) {
        return self__.cq
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cs", "cs", 1013907426), G__13694)) {
          return self__.cs
        }else {
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ts", "ts", 1013907953), G__13694)) {
            return self__.ts
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "vs", "vs", 1013908015), G__13694)) {
              return self__.vs
            }else {
              if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "s", "s", 1013904357), G__13694)) {
                return self__.s
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return not_found
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "cqs", "cqs", 1014002999), null, new cljs.core.Keyword(null, "vs", "vs", 1013908015), null, new cljs.core.Keyword(null, "oc", "oc", 1013907782), null, new cljs.core.Keyword(null, "cq", "cq", 1013907424), null, new cljs.core.Keyword(null, "cs", "cs", 1013907426), null, new cljs.core.Keyword(null, "s", "s", 1013904357), null], null), null), k)
};
cljs.core.logic.Substitutions.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, k, v) {
  var self__ = this;
  var this$__$1 = this;
  var G__13695 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "oc", "oc", 1013907782), G__13695)) {
    return new cljs.core.logic.Substitutions(self__.s, self__.vs, self__.ts, self__.cs, self__.cq, self__.cqs, v, self__._meta)
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cqs", "cqs", 1014002999), G__13695)) {
      return new cljs.core.logic.Substitutions(self__.s, self__.vs, self__.ts, self__.cs, self__.cq, v, self__.oc, self__._meta)
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cq", "cq", 1013907424), G__13695)) {
        return new cljs.core.logic.Substitutions(self__.s, self__.vs, self__.ts, self__.cs, v, self__.cqs, self__.oc, self__._meta)
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cs", "cs", 1013907426), G__13695)) {
          return new cljs.core.logic.Substitutions(self__.s, self__.vs, self__.ts, v, self__.cq, self__.cqs, self__.oc, self__._meta)
        }else {
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ts", "ts", 1013907953), G__13695)) {
            return new cljs.core.logic.Substitutions(self__.s, self__.vs, v, self__.cs, self__.cq, self__.cqs, self__.oc, self__._meta)
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "vs", "vs", 1013908015), G__13695)) {
              return new cljs.core.logic.Substitutions(self__.s, v, self__.ts, self__.cs, self__.cq, self__.cqs, self__.oc, self__._meta)
            }else {
              if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "s", "s", 1013904357), G__13695)) {
                return new cljs.core.logic.Substitutions(v, self__.vs, self__.ts, self__.cs, self__.cq, self__.cqs, self__.oc, self__._meta)
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.ex_info.call(null, [cljs.core.str("Substitutions has no field for key"), cljs.core.str(k)].join(""), cljs.core.PersistentArrayMap.EMPTY);
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IMPlus$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IMPlus$mplus$arity$2 = function(this$, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.choice.call(null, this$__$1, f)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IBind$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IBind$bind$arity$2 = function(this$, g) {
  var self__ = this;
  var this$__$1 = this;
  return g.call(null, this$__$1)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITake$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITake$take_STAR_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.logic.Substitutions.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, p__13696) {
  var self__ = this;
  var vec__13697 = p__13696;
  var k = cljs.core.nth.call(null, vec__13697, 0, null);
  var v = cljs.core.nth.call(null, vec__13697, 1, null);
  var this$__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, k))) {
    return cljs.core.assoc.call(null, this$__$1, k, v)
  }else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("key must be a logic var")].join(""), cljs.core.PersistentArrayMap.EMPTY);
  }
};
cljs.core.logic.Substitutions.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(self__.s)].join("")
};
cljs.core.logic.Substitutions.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.count.call(null, self__.s)
};
cljs.core.logic.Substitutions.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1 === o || o instanceof cljs.core.logic.Substitutions && cljs.core._EQ_.call(null, self__.s, o.s)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutions$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutions$ext_no_check$arity$3 = function(this$, u, v) {
  var self__ = this;
  var this$__$1 = this;
  var u__$1 = cljs.core.not.call(null, cljs.core.logic.lvar_QMARK_.call(null, v)) ? cljs.core.logic.assoc_meta.call(null, u, new cljs.core.Keyword("cljs.core.logic", "root", "cljs.core.logic/root", 3673158879), true) : u;
  return new cljs.core.logic.Substitutions(cljs.core.assoc.call(null, self__.s, u__$1, v), cljs.core.truth_(self__.vs) ? cljs.core.conj.call(null, self__.vs, u__$1) : null, self__.ts, self__.cs, self__.cq, self__.cqs, self__.oc, self__._meta)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutions$walk$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.bindable_QMARK_.call(null, v))) {
    var lv = v;
    var me = cljs.core.find.call(null, self__.s, v);
    while(true) {
      if(me == null) {
        return lv
      }else {
        var v__$1 = cljs.core.key.call(null, me);
        var vp = cljs.core.val.call(null, me);
        if(cljs.core.not.call(null, cljs.core.logic.bindable_QMARK_.call(null, vp))) {
          if(cljs.core.logic.subst_val_QMARK_.call(null, vp)) {
            var sv = (new cljs.core.Keyword(null, "v", "v", 1013904360)).cljs$core$IFn$_invoke$arity$1(vp);
            if(cljs.core.keyword_identical_QMARK_.call(null, sv, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316))) {
              return cljs.core.with_meta.call(null, v__$1, cljs.core.assoc.call(null, cljs.core.meta.call(null, vp), new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316), true))
            }else {
              return sv
            }
          }else {
            return vp
          }
        }else {
          var G__13706 = vp;
          var G__13707 = cljs.core.find.call(null, self__.s, vp);
          lv = G__13706;
          me = G__13707;
          continue
        }
      }
      break
    }
  }else {
    return v
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.logic.Substitutions(self__.s, self__.vs, self__.ts, self__.cs, self__.cq, self__.cqs, self__.oc, new_meta)
};
cljs.core.logic.Substitutions.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__._meta
};
cljs.core.logic.Substitutions.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.empty_s
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutionsCLP$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutionsCLP$root_val$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v))) {
    var lv = v;
    var G__13699 = cljs.core.find.call(null, self__.s, v);
    var vec__13700 = G__13699;
    var v__$1 = cljs.core.nth.call(null, vec__13700, 0, null);
    var vp = cljs.core.nth.call(null, vec__13700, 1, null);
    var me = vec__13700;
    var lv__$1 = lv;
    var G__13699__$1 = G__13699;
    while(true) {
      var lv__$2 = lv__$1;
      var vec__13701 = G__13699__$1;
      var v__$2 = cljs.core.nth.call(null, vec__13701, 0, null);
      var vp__$1 = cljs.core.nth.call(null, vec__13701, 1, null);
      var me__$1 = vec__13701;
      if(me__$1 == null) {
        return lv__$2
      }else {
        if(cljs.core.not.call(null, cljs.core.logic.lvar_QMARK_.call(null, vp__$1))) {
          return vp__$1
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__13708 = vp__$1;
            var G__13709 = cljs.core.find.call(null, self__.s, vp__$1);
            lv__$1 = G__13708;
            G__13699__$1 = G__13709;
            continue
          }else {
            return null
          }
        }
      }
      break
    }
  }else {
    return v
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutionsCLP$root_var$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v))) {
    if(cljs.core.truth_((new cljs.core.Keyword("cljs.core.logic", "root", "cljs.core.logic/root", 3673158879)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v)))) {
      return v
    }else {
      var lv = v;
      var G__13703 = cljs.core.find.call(null, self__.s, v);
      var vec__13704 = G__13703;
      var v__$1 = cljs.core.nth.call(null, vec__13704, 0, null);
      var vp = cljs.core.nth.call(null, vec__13704, 1, null);
      var me = vec__13704;
      var lv__$1 = lv;
      var G__13703__$1 = G__13703;
      while(true) {
        var lv__$2 = lv__$1;
        var vec__13705 = G__13703__$1;
        var v__$2 = cljs.core.nth.call(null, vec__13705, 0, null);
        var vp__$1 = cljs.core.nth.call(null, vec__13705, 1, null);
        var me__$1 = vec__13705;
        if(me__$1 == null) {
          return lv__$2
        }else {
          if(cljs.core.not.call(null, cljs.core.logic.lvar_QMARK_.call(null, vp__$1))) {
            if(cljs.core.logic.subst_val_QMARK_.call(null, vp__$1)) {
              return cljs.core.with_meta.call(null, v__$2, cljs.core.meta.call(null, vp__$1))
            }else {
              return v__$2
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              var G__13710 = vp__$1;
              var G__13711 = cljs.core.find.call(null, self__.s, vp__$1);
              lv__$1 = G__13710;
              G__13703__$1 = G__13711;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return v
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutionsCLP$ext_run_cs$arity$3 = function(this$, x, v) {
  var self__ = this;
  var this$__$1 = this;
  var x__$1 = cljs.core.logic.protocols.root_var.call(null, this$__$1, x);
  var xs = cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x__$1, cljs.core.logic.protocols.root_var.call(null, this$__$1, v)], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x__$1], null);
  var s__$1 = cljs.core.truth_(self__.oc) ? cljs.core.logic.ext.call(null, this$__$1, x__$1, v) : cljs.core.logic.protocols.ext_no_check.call(null, this$__$1, x__$1, v);
  if(cljs.core.truth_(s__$1)) {
    return cljs.core.logic.run_constraints_STAR_.call(null, xs, self__.cs, new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440)).call(null, s__$1)
  }else {
    return null
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutionsCLP$queue$arity$2 = function(this$, c) {
  var self__ = this;
  var this$__$1 = this;
  var id = cljs.core.logic.protocols.id.call(null, c);
  if(cljs.core.not.call(null, self__.cqs.call(null, id))) {
    return cljs.core.assoc.call(null, cljs.core.assoc.call(null, this$__$1, new cljs.core.Keyword(null, "cq", "cq", 1013907424), cljs.core.conj.call(null, function() {
      var or__9141__auto__ = self__.cq;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), c)), new cljs.core.Keyword(null, "cqs", "cqs", 1014002999), cljs.core.conj.call(null, self__.cqs, id))
  }else {
    return this$__$1
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ISubstitutionsCLP$update_var$arity$3 = function(this$, x, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.assoc.call(null, this$__$1, new cljs.core.Keyword(null, "s", "s", 1013904357), cljs.core.assoc.call(null, this$__$1.s, x, v))
};
cljs.core.logic.__GT_Substitutions = function __GT_Substitutions(s, vs, ts, cs, cq, cqs, oc, _meta) {
  return new cljs.core.logic.Substitutions(s, vs, ts, cs, cq, cqs, oc, _meta)
};
cljs.core.logic.add_attr = function add_attr(s, x, attr, attrv) {
  var x__$1 = cljs.core.logic.protocols.root_var.call(null, s, x);
  var v = cljs.core.logic.protocols.root_val.call(null, s, x__$1);
  if(cljs.core.logic.subst_val_QMARK_.call(null, v)) {
    return cljs.core.logic.protocols.update_var.call(null, s, x__$1, cljs.core.logic.assoc_meta.call(null, v, attr, attrv))
  }else {
    var v__$1 = cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v)) ? new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316) : v;
    return cljs.core.logic.protocols.ext_no_check.call(null, s, x__$1, cljs.core.with_meta.call(null, cljs.core.logic.subst_val.call(null, v__$1), new cljs.core.PersistentArrayMap.fromArray([attr, attrv], true, false)))
  }
};
cljs.core.logic.rem_attr = function rem_attr(s, x, attr) {
  var x__$1 = cljs.core.logic.protocols.root_var.call(null, s, x);
  var v = cljs.core.logic.protocols.root_val.call(null, s, x__$1);
  if(cljs.core.logic.subst_val_QMARK_.call(null, v)) {
    var new_meta = cljs.core.dissoc.call(null, cljs.core.meta.call(null, v), attr);
    if(cljs.core.count.call(null, new_meta) === 0 && cljs.core.not_EQ_.call(null, v.v, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316))) {
      return cljs.core.logic.protocols.update_var.call(null, s, x__$1, v.v)
    }else {
      return cljs.core.logic.protocols.update_var.call(null, s, x__$1, cljs.core.with_meta.call(null, v, new_meta))
    }
  }else {
    return s
  }
};
cljs.core.logic.get_attr = function get_attr(s, x, attr) {
  var v = cljs.core.logic.protocols.root_val.call(null, s, x);
  if(cljs.core.logic.subst_val_QMARK_.call(null, v)) {
    return attr.call(null, cljs.core.meta.call(null, v))
  }else {
    return null
  }
};
cljs.core.logic.sync_eset = function sync_eset(s, v, seenset, f) {
  if(cljs.core.not_EQ_.call(null, seenset, new cljs.core.Keyword("cljs.core.logic", "no-prop", "cljs.core.logic/no-prop", 1476398058))) {
    return cljs.core.reduce.call(null, function(s__$1, y) {
      var y__$1 = cljs.core.logic.protocols.root_var.call(null, s__$1, y);
      if(!cljs.core.contains_QMARK_.call(null, seenset, y__$1)) {
        return f.call(null, s__$1, y__$1)
      }else {
        return s__$1
      }
    }, s, v.eset)
  }else {
    return s
  }
};
cljs.core.logic.add_dom = function() {
  var add_dom = null;
  var add_dom__4 = function(s, x, dom, domv) {
    var x__$1 = cljs.core.logic.protocols.root_var.call(null, s, x);
    return add_dom.call(null, s, x__$1, dom, domv, null)
  };
  var add_dom__5 = function(s, x, dom, domv, seenset) {
    var v = cljs.core.logic.protocols.root_val.call(null, s, x);
    var s__$1 = cljs.core.logic.subst_val_QMARK_.call(null, v) ? cljs.core.logic.protocols.update_var.call(null, s, x, cljs.core.logic.assoc_dom.call(null, v, dom, domv)) : function() {
      var v__$1 = cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v)) ? new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316) : v;
      return cljs.core.logic.protocols.ext_no_check.call(null, s, x, cljs.core.logic.subst_val.call(null, v__$1, new cljs.core.PersistentArrayMap.fromArray([dom, domv], true, false)))
    }();
    return cljs.core.logic.sync_eset.call(null, s__$1, v, seenset, function(s__$2, y) {
      return add_dom.call(null, s__$2, y, dom, domv, cljs.core.conj.call(null, function() {
        var or__9141__auto__ = seenset;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return cljs.core.PersistentHashSet.EMPTY
        }
      }(), x))
    })
  };
  add_dom = function(s, x, dom, domv, seenset) {
    switch(arguments.length) {
      case 4:
        return add_dom__4.call(this, s, x, dom, domv);
      case 5:
        return add_dom__5.call(this, s, x, dom, domv, seenset)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_dom.cljs$core$IFn$_invoke$arity$4 = add_dom__4;
  add_dom.cljs$core$IFn$_invoke$arity$5 = add_dom__5;
  return add_dom
}();
cljs.core.logic.update_dom = function() {
  var update_dom = null;
  var update_dom__4 = function(s, x, dom, f) {
    var x__$1 = cljs.core.logic.protocols.root_var.call(null, s, x);
    return update_dom.call(null, s, x__$1, dom, f, null)
  };
  var update_dom__5 = function(s, x, dom, f, seenset) {
    var v = cljs.core.logic.protocols.root_val.call(null, s, x);
    var v__$1 = cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v)) ? cljs.core.logic.subst_val.call(null, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316)) : v;
    var doms = v__$1.doms;
    var s__$1 = cljs.core.logic.protocols.update_var.call(null, s, x, cljs.core.logic.assoc_dom.call(null, v__$1, dom, f.call(null, cljs.core.get.call(null, doms, dom))));
    return cljs.core.logic.sync_eset.call(null, s__$1, v__$1, seenset, function(s__$2, y) {
      return update_dom.call(null, s__$2, y, dom, f, cljs.core.conj.call(null, function() {
        var or__9141__auto__ = seenset;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return cljs.core.PersistentHashSet.EMPTY
        }
      }(), x))
    })
  };
  update_dom = function(s, x, dom, f, seenset) {
    switch(arguments.length) {
      case 4:
        return update_dom__4.call(this, s, x, dom, f);
      case 5:
        return update_dom__5.call(this, s, x, dom, f, seenset)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_dom.cljs$core$IFn$_invoke$arity$4 = update_dom__4;
  update_dom.cljs$core$IFn$_invoke$arity$5 = update_dom__5;
  return update_dom
}();
cljs.core.logic.rem_dom = function() {
  var rem_dom = null;
  var rem_dom__3 = function(s, x, dom) {
    var x__$1 = cljs.core.logic.protocols.root_var.call(null, s, x);
    return rem_dom.call(null, s, x__$1, dom, null)
  };
  var rem_dom__4 = function(s, x, dom, seenset) {
    var v = cljs.core.logic.protocols.root_val.call(null, s, x);
    var s__$1 = cljs.core.logic.subst_val_QMARK_.call(null, v) ? function() {
      var new_doms = cljs.core.dissoc.call(null, v.doms, dom);
      if(cljs.core.count.call(null, new_doms) === 0 && cljs.core.not_EQ_.call(null, v.v, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316))) {
        return cljs.core.logic.protocols.update_var.call(null, s, x, v.v)
      }else {
        return cljs.core.logic.protocols.update_var.call(null, s, x, cljs.core.assoc.call(null, v, new cljs.core.Keyword(null, "doms", "doms", 1016993507), new_doms))
      }
    }() : s;
    return cljs.core.logic.sync_eset.call(null, s__$1, v, seenset, function(s__$2, y) {
      return rem_dom.call(null, s__$2, y, dom, cljs.core.conj.call(null, function() {
        var or__9141__auto__ = seenset;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return cljs.core.PersistentHashSet.EMPTY
        }
      }(), x))
    })
  };
  rem_dom = function(s, x, dom, seenset) {
    switch(arguments.length) {
      case 3:
        return rem_dom__3.call(this, s, x, dom);
      case 4:
        return rem_dom__4.call(this, s, x, dom, seenset)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rem_dom.cljs$core$IFn$_invoke$arity$3 = rem_dom__3;
  rem_dom.cljs$core$IFn$_invoke$arity$4 = rem_dom__4;
  return rem_dom
}();
cljs.core.logic.get_dom = function get_dom(s, x, dom) {
  var v = cljs.core.logic.protocols.root_val.call(null, s, x);
  if(cljs.core.logic.subst_val_QMARK_.call(null, v)) {
    var v_SINGLEQUOTE_ = (new cljs.core.Keyword(null, "v", "v", 1013904360)).cljs$core$IFn$_invoke$arity$1(v);
    if(cljs.core.not_EQ_.call(null, v_SINGLEQUOTE_, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316))) {
      return v_SINGLEQUOTE_
    }else {
      return dom.call(null, (new cljs.core.Keyword(null, "doms", "doms", 1016993507)).cljs$core$IFn$_invoke$arity$1(v))
    }
  }else {
    if(cljs.core.not.call(null, cljs.core.logic.lvar_QMARK_.call(null, v))) {
      return v
    }else {
      return null
    }
  }
};
cljs.core.logic.make_s = function() {
  var make_s = null;
  var make_s__0 = function() {
    return make_s.call(null, cljs.core.PersistentArrayMap.EMPTY)
  };
  var make_s__1 = function(m) {
    return make_s.call(null, m, cljs.core.logic.make_cs.call(null))
  };
  var make_s__2 = function(m, cs) {
    return new cljs.core.logic.Substitutions(m, null, null, cs, null, cljs.core.PersistentHashSet.EMPTY, true, null)
  };
  make_s = function(m, cs) {
    switch(arguments.length) {
      case 0:
        return make_s__0.call(this);
      case 1:
        return make_s__1.call(this, m);
      case 2:
        return make_s__2.call(this, m, cs)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_s.cljs$core$IFn$_invoke$arity$0 = make_s__0;
  make_s.cljs$core$IFn$_invoke$arity$1 = make_s__1;
  make_s.cljs$core$IFn$_invoke$arity$2 = make_s__2;
  return make_s
}();
cljs.core.logic.tabled_s = function() {
  var tabled_s = null;
  var tabled_s__0 = function() {
    return tabled_s.call(null, false)
  };
  var tabled_s__1 = function(oc) {
    return tabled_s.call(null, oc, null)
  };
  var tabled_s__2 = function(oc, meta) {
    return cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.with_meta.call(null, cljs.core.logic.make_s.call(null), meta), new cljs.core.Keyword(null, "oc", "oc", 1013907782), oc), new cljs.core.Keyword(null, "ts", "ts", 1013907953), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))
  };
  tabled_s = function(oc, meta) {
    switch(arguments.length) {
      case 0:
        return tabled_s__0.call(this);
      case 1:
        return tabled_s__1.call(this, oc);
      case 2:
        return tabled_s__2.call(this, oc, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tabled_s.cljs$core$IFn$_invoke$arity$0 = tabled_s__0;
  tabled_s.cljs$core$IFn$_invoke$arity$1 = tabled_s__1;
  tabled_s.cljs$core$IFn$_invoke$arity$2 = tabled_s__2;
  return tabled_s
}();
cljs.core.logic.empty_s = cljs.core.logic.make_s.call(null);
cljs.core.logic.empty_f = function empty_f() {
  return null
};
cljs.core.logic.subst_QMARK_ = function subst_QMARK_(x) {
  return x instanceof cljs.core.logic.Substitutions
};
cljs.core.logic.to_s = function to_s(v) {
  var s = cljs.core.reduce.call(null, function(m, p__13714) {
    var vec__13715 = p__13714;
    var k = cljs.core.nth.call(null, vec__13715, 0, null);
    var v__$1 = cljs.core.nth.call(null, vec__13715, 1, null);
    return cljs.core.assoc.call(null, m, k, v__$1)
  }, cljs.core.PersistentArrayMap.EMPTY, v);
  return cljs.core.logic.make_s.call(null, s, cljs.core.logic.make_cs.call(null))
};
cljs.core.logic.annotate = function annotate(k, v) {
  return function(a) {
    return cljs.core.vary_meta.call(null, a, cljs.core.assoc, k, v)
  }
};
cljs.core.logic.merge_doms = function merge_doms(s, x, doms) {
  var xdoms = (new cljs.core.Keyword(null, "doms", "doms", 1016993507)).cljs$core$IFn$_invoke$arity$1(cljs.core.logic.protocols.root_val.call(null, s, x));
  var doms__$1 = cljs.core.seq.call(null, doms);
  var s__$1 = s;
  while(true) {
    if(doms__$1) {
      var vec__13717 = cljs.core.first.call(null, doms__$1);
      var dom = cljs.core.nth.call(null, vec__13717, 0, null);
      var domv = cljs.core.nth.call(null, vec__13717, 1, null);
      var xdomv = cljs.core.get.call(null, xdoms, dom, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009));
      var ndomv = cljs.core.keyword_identical_QMARK_.call(null, xdomv, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009)) ? domv : cljs.core.logic.protocols._merge_doms.call(null, domv, xdomv);
      if(cljs.core.truth_(ndomv)) {
        var G__13718 = cljs.core.next.call(null, doms__$1);
        var G__13719 = cljs.core.logic.add_dom.call(null, s__$1, x, dom, ndomv, cljs.core.PersistentHashSet.EMPTY);
        doms__$1 = G__13718;
        s__$1 = G__13719;
        continue
      }else {
        return null
      }
    }else {
      return s__$1
    }
    break
  }
};
cljs.core.logic.update_eset = function update_eset(s, doms, eset) {
  var eset__$1 = cljs.core.seq.call(null, eset);
  var s__$1 = s;
  while(true) {
    if(eset__$1) {
      var temp__4094__auto__ = cljs.core.logic.merge_doms.call(null, s__$1, cljs.core.logic.protocols.root_var.call(null, s__$1, cljs.core.first.call(null, eset__$1)), doms);
      if(cljs.core.truth_(temp__4094__auto__)) {
        var s__$2 = temp__4094__auto__;
        var G__13720 = cljs.core.next.call(null, eset__$1);
        var G__13721 = s__$2;
        eset__$1 = G__13720;
        s__$1 = G__13721;
        continue
      }else {
        return null
      }
    }else {
      return s__$1
    }
    break
  }
};
cljs.core.logic.merge_with_root = function merge_with_root(s, x, root) {
  var xv = cljs.core.logic.protocols.root_val.call(null, s, x);
  var rootv = cljs.core.logic.protocols.root_val.call(null, s, root);
  var eset = clojure.set.union.call(null, (new cljs.core.Keyword(null, "eset", "eset", 1017026895)).cljs$core$IFn$_invoke$arity$1(rootv), (new cljs.core.Keyword(null, "eset", "eset", 1017026895)).cljs$core$IFn$_invoke$arity$1(xv));
  var doms = function() {
    var xd = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "doms", "doms", 1016993507)).cljs$core$IFn$_invoke$arity$1(xv));
    var rd = (new cljs.core.Keyword(null, "doms", "doms", 1016993507)).cljs$core$IFn$_invoke$arity$1(rootv);
    var r = cljs.core.PersistentArrayMap.EMPTY;
    while(true) {
      if(xd) {
        var vec__13724 = cljs.core.first.call(null, xd);
        var xk = cljs.core.nth.call(null, vec__13724, 0, null);
        var xv__$1 = cljs.core.nth.call(null, vec__13724, 1, null);
        var temp__4092__auto__ = cljs.core.find.call(null, rd, xk);
        if(cljs.core.truth_(temp__4092__auto__)) {
          var vec__13725 = temp__4092__auto__;
          var _ = cljs.core.nth.call(null, vec__13725, 0, null);
          var rv = cljs.core.nth.call(null, vec__13725, 1, null);
          var nd = cljs.core.logic.protocols._merge_doms.call(null, xv__$1, rv);
          if(cljs.core.truth_(nd)) {
            var G__13726 = cljs.core.next.call(null, xd);
            var G__13727 = cljs.core.dissoc.call(null, rd, xk);
            var G__13728 = cljs.core.assoc.call(null, r, xk, nd);
            xd = G__13726;
            rd = G__13727;
            r = G__13728;
            continue
          }else {
            return null
          }
        }else {
          var G__13729 = cljs.core.next.call(null, xd);
          var G__13730 = rd;
          var G__13731 = cljs.core.assoc.call(null, r, xk, xv__$1);
          xd = G__13729;
          rd = G__13730;
          r = G__13731;
          continue
        }
      }else {
        return cljs.core.merge.call(null, r, rd)
      }
      break
    }
  }();
  var nv = cljs.core.truth_(doms) ? cljs.core.logic.subst_val.call(null, (new cljs.core.Keyword(null, "v", "v", 1013904360)).cljs$core$IFn$_invoke$arity$1(rootv), doms, eset, cljs.core.merge.call(null, cljs.core.meta.call(null, xv), cljs.core.meta.call(null, rootv))) : null;
  if(cljs.core.truth_(nv)) {
    return cljs.core.logic.update_eset.call(null, cljs.core.logic.protocols.ext_no_check.call(null, s, root, nv), doms, eset)
  }else {
    return null
  }
};
cljs.core.logic.to_subst_val = function to_subst_val(v) {
  if(cljs.core.logic.subst_val_QMARK_.call(null, v)) {
    return v
  }else {
    return cljs.core.logic.subst_val.call(null, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316))
  }
};
cljs.core.logic.entangle = function entangle(s, x, y) {
  var x__$1 = cljs.core.logic.protocols.root_var.call(null, s, x);
  var y__$1 = cljs.core.logic.protocols.root_var.call(null, s, y);
  var xv = cljs.core.logic.to_subst_val.call(null, cljs.core.logic.protocols.root_val.call(null, s, x__$1));
  var yv = cljs.core.logic.to_subst_val.call(null, cljs.core.logic.protocols.root_val.call(null, s, y__$1));
  return cljs.core.logic.protocols.update_var.call(null, cljs.core.logic.protocols.update_var.call(null, s, x__$1, cljs.core.assoc.call(null, xv, new cljs.core.Keyword(null, "eset", "eset", 1017026895), cljs.core.conj.call(null, function() {
    var or__9141__auto__ = (new cljs.core.Keyword(null, "eset", "eset", 1017026895)).cljs$core$IFn$_invoke$arity$1(xv);
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  }(), y__$1))), y__$1, cljs.core.assoc.call(null, yv, new cljs.core.Keyword(null, "eset", "eset", 1017026895), cljs.core.conj.call(null, function() {
    var or__9141__auto__ = (new cljs.core.Keyword(null, "eset", "eset", 1017026895)).cljs$core$IFn$_invoke$arity$1(yv);
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  }(), x__$1)))
};
cljs.core.logic.LVar = function(id, unique, name, oname, hash, meta) {
  this.id = id;
  this.unique = unique;
  this.name = name;
  this.oname = oname;
  this.hash = hash;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2154168576
};
cljs.core.logic.LVar.cljs$lang$type = true;
cljs.core.logic.LVar.cljs$lang$ctorStr = "cljs.core.logic/LVar";
cljs.core.logic.LVar.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/LVar")
};
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IReifyTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IReifyTerm$reify_term$arity$2 = function(v, s) {
  var self__ = this;
  var v__$1 = this;
  var rf = (new cljs.core.Keyword(null, "reify-vars", "reify-vars", 4368745730)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, s));
  if(cljs.core.fn_QMARK_.call(null, rf)) {
    return rf.call(null, v__$1, s)
  }else {
    if(cljs.core.truth_(rf)) {
      return cljs.core.logic.ext.call(null, s, v__$1, cljs.core.logic.reify_lvar_name.call(null, s))
    }else {
      return cljs.core.logic.ext.call(null, s, v__$1, v__$1.oname)
    }
  }
};
cljs.core.logic.LVar.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.hash
};
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IUnifyTerms$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IUnifyTerms$unify_terms$arity$3 = function(u, v, s) {
  var self__ = this;
  var u__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.lvar_QMARK_.call(null, v))) {
    var repoint = cljs.core.truth_((new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, u__$1))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u__$1, v], null) : cljs.core.truth_((new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v))) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, u__$1], null) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? null : null;
    if(cljs.core.truth_(repoint)) {
      var vec__13732 = repoint;
      var root = cljs.core.nth.call(null, vec__13732, 0, null);
      var other = cljs.core.nth.call(null, vec__13732, 1, null);
      var s__$1 = cljs.core.assoc.call(null, s, new cljs.core.Keyword(null, "cs", "cs", 1013907426), cljs.core.logic.protocols.migrate.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(s), other, root));
      var s__$2 = cljs.core.truth_((new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, other))) ? cljs.core.logic.merge_with_root.call(null, s__$1, other, root) : s__$1;
      if(cljs.core.truth_(s__$2)) {
        return cljs.core.logic.protocols.ext_no_check.call(null, s__$2, other, root)
      }else {
        return null
      }
    }else {
      return cljs.core.logic.protocols.ext_no_check.call(null, s, u__$1, v)
    }
  }else {
    if(cljs.core.logic.protocols.non_storable_QMARK_.call(null, v)) {
      throw cljs.core.ex_info.call(null, [cljs.core.str(v), cljs.core.str(" is non-storable")].join(""), cljs.core.PersistentArrayMap.EMPTY);
    }else {
      if(cljs.core.not_EQ_.call(null, v, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009))) {
        if(cljs.core.truth_(cljs.core.logic.tree_term_QMARK_.call(null, v))) {
          return cljs.core.logic.ext.call(null, s, u__$1, v)
        }else {
          if(cljs.core.truth_((new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, u__$1)))) {
            return cljs.core.logic.protocols.ext_no_check.call(null, s, u__$1, cljs.core.assoc.call(null, cljs.core.logic.protocols.root_val.call(null, s, u__$1), new cljs.core.Keyword(null, "v", "v", 1013904360), v))
          }else {
            return cljs.core.logic.protocols.ext_no_check.call(null, s, u__$1, v)
          }
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return null
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.LVar.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.LVar.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13733 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), G__13733)) {
    return self__.id
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "oname", "oname", 1119788780), G__13733)) {
      return self__.oname
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), G__13733)) {
        return self__.name
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.LVar.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("\x3clvar:"), cljs.core.str((new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(x__$1)), cljs.core.str("\x3e")].join(""))
};
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IWalkTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return f.call(null, v__$1)
};
cljs.core.logic.LVar.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str("\x3clvar:"), cljs.core.str(self__.name), cljs.core.str("\x3e")].join("")
};
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IVar$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IOccursCheckTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IOccursCheckTerm$occurs_check_term$arity$3 = function(v, x, s) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core._EQ_.call(null, cljs.core.logic.protocols.walk.call(null, s, v__$1), x)
};
cljs.core.logic.LVar.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  if(function() {
    var G__13734 = o;
    if(G__13734) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto__ = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          return G__13734.cljs$core$logic$protocols$IVar$
        }
      }())) {
        return true
      }else {
        if(!G__13734.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IVar, G__13734)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IVar, G__13734)
    }
  }()) {
    if(cljs.core.truth_(self__.unique)) {
      return self__.id === (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(o)
    }else {
      return self__.name === (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(o)
    }
  }else {
    return false
  }
};
cljs.core.logic.LVar.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.logic.LVar(self__.id, self__.unique, self__.name, self__.oname, self__.hash, new_meta)
};
cljs.core.logic.LVar.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta
};
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IBuildTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IBuildTerm$build_term$arity$2 = function(u, s) {
  var self__ = this;
  var u__$1 = this;
  var m = s.s;
  var cs = s.cs;
  var lv = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "ignore", "ignore", 1464039307, null));
  if(cljs.core.contains_QMARK_.call(null, m, u__$1)) {
    return s
  }else {
    return cljs.core.logic.make_s.call(null, cljs.core.assoc.call(null, m, u__$1, lv), cs)
  }
};
cljs.core.logic.__GT_LVar = function __GT_LVar(id, unique, name, oname, hash, meta) {
  return new cljs.core.logic.LVar(id, unique, name, oname, hash, meta)
};
cljs.core.logic.next_id = function next_id() {
  return cljs.reader.read_string.call(null, clojure.string.replace.call(null, [cljs.core.str(cljs.core.gensym.call(null))].join(""), /G__/, ""))
};
cljs.core.logic.lvar = function() {
  var lvar = null;
  var lvar__0 = function() {
    var id = cljs.core.logic.next_id.call(null);
    var name = [cljs.core.str(id)].join("");
    return new cljs.core.logic.LVar(id, true, name, null, cljs.core.hash.call(null, name), null)
  };
  var lvar__1 = function(name) {
    return lvar.call(null, name, true)
  };
  var lvar__2 = function(name, unique) {
    var oname = name;
    var id = cljs.core.truth_(unique) ? cljs.core.logic.next_id.call(null) : name;
    var name__$1 = cljs.core.truth_(unique) ? [cljs.core.str(name), cljs.core.str("__"), cljs.core.str(id)].join("") : [cljs.core.str(name)].join("");
    return new cljs.core.logic.LVar(id, unique, name__$1, oname, cljs.core.hash.call(null, name__$1), null)
  };
  lvar = function(name, unique) {
    switch(arguments.length) {
      case 0:
        return lvar__0.call(this);
      case 1:
        return lvar__1.call(this, name);
      case 2:
        return lvar__2.call(this, name, unique)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lvar.cljs$core$IFn$_invoke$arity$0 = lvar__0;
  lvar.cljs$core$IFn$_invoke$arity$1 = lvar__1;
  lvar.cljs$core$IFn$_invoke$arity$2 = lvar__2;
  return lvar
}();
cljs.core.logic.lvar_QMARK_ = function lvar_QMARK_(x) {
  var G__13736 = x;
  if(G__13736) {
    var bit__9762__auto__ = null;
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = bit__9762__auto__;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return G__13736.cljs$core$logic$protocols$IVar$
      }
    }())) {
      return true
    }else {
      if(!G__13736.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IVar, G__13736)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IVar, G__13736)
  }
};
cljs.core.logic.lvars = function lvars(n) {
  return cljs.core.repeatedly.call(null, n, cljs.core.logic.lvar)
};
cljs.core.logic.bindable_QMARK_ = function bindable_QMARK_(x) {
  var or__9141__auto__ = cljs.core.logic.lvar_QMARK_.call(null, x);
  if(or__9141__auto__) {
    return or__9141__auto__
  }else {
    var G__13740 = x;
    if(G__13740) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto____$1 = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto____$1)) {
          return or__9141__auto____$1
        }else {
          return G__13740.cljs$core$logic$protocols$IBindable$
        }
      }())) {
        return true
      }else {
        if(!G__13740.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IBindable, G__13740)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IBindable, G__13740)
    }
  }
};
cljs.core.logic.LCons = function(a, d, cache, meta) {
  this.a = a;
  this.d = d;
  this.cache = cache;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2154168320
};
cljs.core.logic.LCons.cljs$lang$type = true;
cljs.core.logic.LCons.cljs$lang$ctorStr = "cljs.core.logic/LCons";
cljs.core.logic.LCons.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/LCons")
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IReifyTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IReifyTerm$reify_term$arity$2 = function(v, s) {
  var self__ = this;
  var v__$1 = this;
  var v__$2 = v__$1;
  var s__$1 = s;
  while(true) {
    if(cljs.core.truth_(cljs.core.logic.lcons_QMARK_.call(null, v__$2))) {
      var G__13741 = cljs.core.logic.protocols.lnext.call(null, v__$2);
      var G__13742 = cljs.core.logic._reify_STAR_.call(null, s__$1, cljs.core.logic.protocols.lfirst.call(null, v__$2));
      v__$2 = G__13741;
      s__$1 = G__13742;
      continue
    }else {
      return cljs.core.logic._reify_STAR_.call(null, s__$1, v__$2)
    }
    break
  }
};
cljs.core.logic.LCons.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.cache === -1) {
    self__.cache = (31 | 0) * cljs.core.hash.call(null, self__.d) + cljs.core.hash.call(null, self__.a);
    return self__.cache
  }else {
    return self__.cache
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IUnifyTerms$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IUnifyTerms$unify_terms$arity$3 = function(u, v, s) {
  var self__ = this;
  var u__$1 = this;
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    var u__$2 = u__$1;
    var v__$1 = cljs.core.seq.call(null, v);
    var s__$1 = s;
    while(true) {
      if(!(v__$1 == null)) {
        if(cljs.core.truth_(cljs.core.logic.lcons_QMARK_.call(null, u__$2))) {
          var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, cljs.core.logic.protocols.lfirst.call(null, u__$2), cljs.core.first.call(null, v__$1));
          if(cljs.core.truth_(temp__4092__auto__)) {
            var s__$2 = temp__4092__auto__;
            var G__13743 = cljs.core.logic.protocols.lnext.call(null, u__$2);
            var G__13744 = cljs.core.next.call(null, v__$1);
            var G__13745 = s__$2;
            u__$2 = G__13743;
            v__$1 = G__13744;
            s__$1 = G__13745;
            continue
          }else {
            return null
          }
        }else {
          return cljs.core.logic.unify.call(null, s__$1, u__$2, v__$1)
        }
      }else {
        if(cljs.core.logic.lvar_QMARK_.call(null, u__$2)) {
          var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, u__$2, cljs.core.List.EMPTY);
          if(cljs.core.truth_(temp__4092__auto__)) {
            var s__$2 = temp__4092__auto__;
            return s__$2
          }else {
            return cljs.core.logic.unify.call(null, s__$1, u__$2, null)
          }
        }else {
          return null
        }
      }
      break
    }
  }else {
    if(cljs.core.truth_(cljs.core.logic.lcons_QMARK_.call(null, v))) {
      var u__$2 = u__$1;
      var v__$1 = v;
      var s__$1 = s;
      while(true) {
        if(cljs.core.logic.lvar_QMARK_.call(null, u__$2)) {
          return cljs.core.logic.unify.call(null, s__$1, u__$2, v__$1)
        }else {
          if(cljs.core.logic.lvar_QMARK_.call(null, v__$1)) {
            return cljs.core.logic.unify.call(null, s__$1, v__$1, u__$2)
          }else {
            if(cljs.core.truth_(function() {
              var and__9129__auto__ = cljs.core.logic.lcons_QMARK_.call(null, u__$2);
              if(cljs.core.truth_(and__9129__auto__)) {
                return cljs.core.logic.lcons_QMARK_.call(null, v__$1)
              }else {
                return and__9129__auto__
              }
            }())) {
              var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, cljs.core.logic.protocols.lfirst.call(null, u__$2), cljs.core.logic.protocols.lfirst.call(null, v__$1));
              if(cljs.core.truth_(temp__4092__auto__)) {
                var s__$2 = temp__4092__auto__;
                var G__13746 = cljs.core.logic.protocols.lnext.call(null, u__$2);
                var G__13747 = cljs.core.logic.protocols.lnext.call(null, v__$1);
                var G__13748 = s__$2;
                u__$2 = G__13746;
                v__$1 = G__13747;
                s__$1 = G__13748;
                continue
              }else {
                return null
              }
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core.logic.unify.call(null, s__$1, u__$2, v__$1)
              }else {
                return null
              }
            }
          }
        }
        break
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$LConsSeq$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$LConsSeq$lfirst$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.a
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$LConsSeq$lnext$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.d
};
cljs.core.logic.LCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(x__$1)].join(""))
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IWalkTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.logic.lcons.call(null, f.call(null, cljs.core.logic.protocols.lfirst.call(null, v__$1)), f.call(null, cljs.core.logic.protocols.lnext.call(null, v__$1)))
};
cljs.core.logic.LCons.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  if(self__.d instanceof cljs.core.logic.LCons) {
    return[cljs.core.str("("), cljs.core.str(self__.a), cljs.core.str(" "), cljs.core.str(cljs.core.logic.protocols.toShortString.call(null, self__.d)), cljs.core.str(")")].join("")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return[cljs.core.str("("), cljs.core.str(self__.a), cljs.core.str(" . "), cljs.core.str(self__.d), cljs.core.str(")")].join("")
    }else {
      return null
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$LConsPrint$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$LConsPrint$toShortString$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.d instanceof cljs.core.logic.LCons) {
    return[cljs.core.str(self__.a), cljs.core.str(" "), cljs.core.str(cljs.core.logic.protocols.toShortString.call(null, self__.d))].join("")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return[cljs.core.str(self__.a), cljs.core.str(" . "), cljs.core.str(self__.d)].join("")
    }else {
      return null
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$ITreeTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IOccursCheckTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IOccursCheckTerm$occurs_check_term$arity$3 = function(v, x, s) {
  var self__ = this;
  var v__$1 = this;
  var v__$2 = v__$1;
  var x__$1 = x;
  var s__$1 = s;
  while(true) {
    if(cljs.core.truth_(cljs.core.logic.lcons_QMARK_.call(null, v__$2))) {
      var or__9141__auto__ = cljs.core.logic.occurs_check.call(null, s__$1, x__$1, cljs.core.logic.protocols.lfirst.call(null, v__$2));
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        var G__13749 = cljs.core.logic.protocols.lnext.call(null, v__$2);
        var G__13750 = x__$1;
        var G__13751 = s__$1;
        v__$2 = G__13749;
        x__$1 = G__13750;
        s__$1 = G__13751;
        continue
      }
    }else {
      return cljs.core.logic.occurs_check.call(null, s__$1, x__$1, v__$2)
    }
    break
  }
};
cljs.core.logic.LCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  var or__9141__auto__ = this$__$1 === o;
  if(or__9141__auto__) {
    return or__9141__auto__
  }else {
    var and__9129__auto__ = o instanceof cljs.core.logic.LCons;
    if(and__9129__auto__) {
      var me = this$__$1;
      var you = o;
      while(true) {
        if(me == null) {
          return you == null
        }else {
          if(cljs.core.logic.lvar_QMARK_.call(null, me)) {
            return true
          }else {
            if(cljs.core.logic.lvar_QMARK_.call(null, you)) {
              return true
            }else {
              if(cljs.core.truth_(function() {
                var and__9129__auto____$1 = cljs.core.logic.lcons_QMARK_.call(null, me);
                if(cljs.core.truth_(and__9129__auto____$1)) {
                  return cljs.core.logic.lcons_QMARK_.call(null, you)
                }else {
                  return and__9129__auto____$1
                }
              }())) {
                var mef = cljs.core.logic.protocols.lfirst.call(null, me);
                var youf = cljs.core.logic.protocols.lfirst.call(null, you);
                var and__9129__auto____$1 = cljs.core._EQ_.call(null, mef, youf) || cljs.core.logic.lvar_QMARK_.call(null, mef) || cljs.core.logic.lvar_QMARK_.call(null, youf);
                if(and__9129__auto____$1) {
                  var G__13752 = cljs.core.logic.protocols.lnext.call(null, me);
                  var G__13753 = cljs.core.logic.protocols.lnext.call(null, you);
                  me = G__13752;
                  you = G__13753;
                  continue
                }else {
                  return and__9129__auto____$1
                }
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core._EQ_.call(null, me, you)
                }else {
                  return null
                }
              }
            }
          }
        }
        break
      }
    }else {
      return and__9129__auto__
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.logic.LCons(self__.a, self__.d, self__.cache, new_meta)
};
cljs.core.logic.LCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IBuildTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IBuildTerm$build_term$arity$2 = function(u, s) {
  var self__ = this;
  var u__$1 = this;
  var u__$2 = u__$1;
  var s__$1 = s;
  while(true) {
    if(cljs.core.truth_(cljs.core.logic.lcons_QMARK_.call(null, u__$2))) {
      var G__13754 = cljs.core.logic.protocols.lnext.call(null, u__$2);
      var G__13755 = cljs.core.logic.build.call(null, s__$1, cljs.core.logic.protocols.lfirst.call(null, u__$2));
      u__$2 = G__13754;
      s__$1 = G__13755;
      continue
    }else {
      return cljs.core.logic.build.call(null, s__$1, u__$2)
    }
    break
  }
};
cljs.core.logic.__GT_LCons = function __GT_LCons(a, d, cache, meta) {
  return new cljs.core.logic.LCons(a, d, cache, meta)
};
cljs.core.logic.lcons = function lcons(a, d) {
  if(cljs.core.coll_QMARK_.call(null, d) || d == null) {
    return cljs.core.cons.call(null, a, cljs.core.seq.call(null, d))
  }else {
    return new cljs.core.logic.LCons(a, d, -1, null)
  }
};
cljs.core.logic.lcons_QMARK_ = function lcons_QMARK_(x) {
  return x instanceof cljs.core.logic.LCons
};
cljs.core.logic.tree_term_QMARK_ = function tree_term_QMARK_(x) {
  var or__9141__auto__ = cljs.core.coll_QMARK_.call(null, x);
  if(or__9141__auto__) {
    return or__9141__auto__
  }else {
    var G__13759 = x;
    if(G__13759) {
      var bit__9762__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__9141__auto____$1 = bit__9762__auto__;
        if(cljs.core.truth_(or__9141__auto____$1)) {
          return or__9141__auto____$1
        }else {
          return G__13759.cljs$core$logic$protocols$ITreeTerm$
        }
      }())) {
        return true
      }else {
        if(!G__13759.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.ITreeTerm, G__13759)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.ITreeTerm, G__13759)
    }
  }
};
cljs.core.logic.unify_with_sequential_STAR_ = function unify_with_sequential_STAR_(u, v, s) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    if(cljs.core.counted_QMARK_.call(null, u) && cljs.core.counted_QMARK_.call(null, v) && !cljs.core._EQ_.call(null, cljs.core.count.call(null, u), cljs.core.count.call(null, v))) {
      return null
    }else {
      var u__$1 = cljs.core._seq.call(null, u);
      var v__$1 = cljs.core._seq.call(null, v);
      var s__$1 = s;
      while(true) {
        if(!(u__$1 == null)) {
          if(!(v__$1 == null)) {
            var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, cljs.core.first.call(null, u__$1), cljs.core.first.call(null, v__$1));
            if(cljs.core.truth_(temp__4092__auto__)) {
              var s__$2 = temp__4092__auto__;
              var G__13760 = cljs.core.next.call(null, u__$1);
              var G__13761 = cljs.core.next.call(null, v__$1);
              var G__13762 = s__$2;
              u__$1 = G__13760;
              v__$1 = G__13761;
              s__$1 = G__13762;
              continue
            }else {
              return null
            }
          }else {
            return null
          }
        }else {
          if(!(v__$1 == null)) {
            return null
          }else {
            return s__$1
          }
        }
        break
      }
    }
  }else {
    if(cljs.core.logic.lcons_QMARK_.call(null, v)) {
      return cljs.core.logic.protocols.unify_terms.call(null, v, u, s)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.unify_with_map_STAR_ = function unify_with_map_STAR_(u, v, s) {
  if(cljs.core._EQ_.call(null, cljs.core.count.call(null, u), cljs.core.count.call(null, v))) {
    var ks = cljs.core.keys.call(null, u);
    var s__$1 = s;
    while(true) {
      if(cljs.core.seq.call(null, ks)) {
        var kf = cljs.core.first.call(null, ks);
        var vf = cljs.core.get.call(null, v, kf, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009));
        if(cljs.core.keyword_identical_QMARK_.call(null, vf, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009))) {
          return null
        }else {
          var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, cljs.core.get.call(null, u, kf), vf);
          if(cljs.core.truth_(temp__4092__auto__)) {
            var s__$2 = temp__4092__auto__;
            var G__13763 = cljs.core.next.call(null, ks);
            var G__13764 = s__$2;
            ks = G__13763;
            s__$1 = G__13764;
            continue
          }else {
            return null
          }
        }
      }else {
        return s__$1
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.logic.protocols.IUnifyTerms["_"] = true;
cljs.core.logic.protocols.unify_terms["_"] = function(u, v, s) {
  if(cljs.core.sequential_QMARK_.call(null, u)) {
    return cljs.core.logic.unify_with_sequential_STAR_.call(null, u, v, s)
  }else {
    if(cljs.core.map_QMARK_.call(null, u)) {
      if(function() {
        var G__13765 = v;
        if(G__13765) {
          var bit__9762__auto__ = null;
          if(cljs.core.truth_(function() {
            var or__9141__auto__ = bit__9762__auto__;
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return G__13765.cljs$core$logic$protocols$IUnifyWithRecord$
            }
          }())) {
            return true
          }else {
            if(!G__13765.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IUnifyWithRecord, G__13765)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IUnifyWithRecord, G__13765)
        }
      }()) {
        return cljs.core.logic.protocols.unify_with_record.call(null, v, u, s)
      }else {
        if(cljs.core.map_QMARK_.call(null, v)) {
          return cljs.core.logic.unify_with_map_STAR_.call(null, u, v, s)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return null
          }else {
            return null
          }
        }
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core._EQ_.call(null, u, v)) {
          return s
        }else {
          return null
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.protocols.IUnifyTerms["null"] = true;
cljs.core.logic.protocols.unify_terms["null"] = function(u, v, s) {
  if(v == null) {
    return s
  }else {
    return null
  }
};
cljs.core.logic.protocols.IReifyTerm["_"] = true;
cljs.core.logic.protocols.reify_term["_"] = function(v, s) {
  if(cljs.core.coll_QMARK_.call(null, v)) {
    var v__$1 = v;
    var s__$1 = s;
    while(true) {
      if(cljs.core.seq.call(null, v__$1)) {
        var G__13766 = cljs.core.next.call(null, v__$1);
        var G__13767 = cljs.core.logic._reify_STAR_.call(null, s__$1, cljs.core.first.call(null, v__$1));
        v__$1 = G__13766;
        s__$1 = G__13767;
        continue
      }else {
        return s__$1
      }
      break
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return s
    }else {
      return null
    }
  }
};
cljs.core.logic.protocols.IReifyTerm["null"] = true;
cljs.core.logic.protocols.reify_term["null"] = function(v, s) {
  return s
};
cljs.core.logic.walk_record_term = function walk_record_term(v, f) {
  return cljs.core.with_meta.call(null, function() {
    var v__$1 = v;
    var r = cljs.core.logic.protocols._uninitialized.call(null, v__$1);
    while(true) {
      if(cljs.core.seq.call(null, v__$1)) {
        var vec__13769 = cljs.core.first.call(null, v__$1);
        var vfk = cljs.core.nth.call(null, vec__13769, 0, null);
        var vfv = cljs.core.nth.call(null, vec__13769, 1, null);
        var G__13770 = cljs.core.next.call(null, v__$1);
        var G__13771 = cljs.core.assoc.call(null, r, cljs.core.logic.protocols.walk_term.call(null, f.call(null, vfk), f), cljs.core.logic.protocols.walk_term.call(null, f.call(null, vfv), f));
        v__$1 = G__13770;
        r = G__13771;
        continue
      }else {
        return r
      }
      break
    }
  }(), cljs.core.meta.call(null, v))
};
cljs.core.logic.walk_term_map_STAR_ = function walk_term_map_STAR_(v, f) {
  return cljs.core.with_meta.call(null, function() {
    var v__$1 = v;
    var r = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(cljs.core.seq.call(null, v__$1)) {
        var vec__13773 = cljs.core.first.call(null, v__$1);
        var vfk = cljs.core.nth.call(null, vec__13773, 0, null);
        var vfv = cljs.core.nth.call(null, vec__13773, 1, null);
        var G__13774 = cljs.core.next.call(null, v__$1);
        var G__13775 = cljs.core.assoc_BANG_.call(null, r, cljs.core.logic.protocols.walk_term.call(null, f.call(null, vfk), f), cljs.core.logic.protocols.walk_term.call(null, f.call(null, vfv), f));
        v__$1 = G__13774;
        r = G__13775;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, r)
      }
      break
    }
  }(), cljs.core.meta.call(null, v))
};
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$IWalkTerm$ = true;
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2 = function(v, f) {
  var v__$1 = this;
  return cljs.core.with_meta.call(null, function() {
    var v__$2 = v__$1;
    var r = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
    while(true) {
      if(cljs.core.seq.call(null, v__$2)) {
        var G__13777 = cljs.core.next.call(null, v__$2);
        var G__13778 = cljs.core.conj_BANG_.call(null, r, cljs.core.logic.protocols.walk_term.call(null, f.call(null, cljs.core.first.call(null, v__$2)), f));
        v__$2 = G__13777;
        r = G__13778;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, r)
      }
      break
    }
  }(), cljs.core.meta.call(null, v__$1))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$logic$protocols$IWalkTerm$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2 = function(v, f) {
  var v__$1 = this;
  return cljs.core.logic.walk_term_map_STAR_.call(null, v__$1, f)
};
cljs.core.PersistentHashMap.prototype.cljs$core$logic$protocols$IWalkTerm$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2 = function(v, f) {
  var v__$1 = this;
  return cljs.core.logic.walk_term_map_STAR_.call(null, v__$1, f)
};
cljs.core.logic.protocols.IWalkTerm["_"] = true;
cljs.core.logic.protocols.walk_term["_"] = function(v, f) {
  if(cljs.core.seq_QMARK_.call(null, v)) {
    return cljs.core.with_meta.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__13776_SHARP_) {
      return cljs.core.logic.protocols.walk_term.call(null, f.call(null, p1__13776_SHARP_), f)
    }, v)), cljs.core.meta.call(null, v))
  }else {
    if(cljs.core.logic.record_QMARK_.call(null, v)) {
      return cljs.core.logic.walk_record_term.call(null, v, f)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return f.call(null, v)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.protocols.IWalkTerm["null"] = true;
cljs.core.logic.protocols.walk_term["null"] = function(v, f) {
  return f.call(null, null)
};
cljs.core.logic.protocols.IOccursCheckTerm["_"] = true;
cljs.core.logic.protocols.occurs_check_term["_"] = function(v, x, s) {
  if(cljs.core.coll_QMARK_.call(null, v)) {
    var v__$1 = v;
    var x__$1 = x;
    var s__$1 = s;
    while(true) {
      if(cljs.core.seq.call(null, v__$1)) {
        var or__9141__auto__ = cljs.core.logic.occurs_check.call(null, s__$1, x__$1, cljs.core.first.call(null, v__$1));
        if(cljs.core.truth_(or__9141__auto__)) {
          return or__9141__auto__
        }else {
          var G__13779 = cljs.core.next.call(null, v__$1);
          var G__13780 = x__$1;
          var G__13781 = s__$1;
          v__$1 = G__13779;
          x__$1 = G__13780;
          s__$1 = G__13781;
          continue
        }
      }else {
        return false
      }
      break
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return false
    }else {
      return null
    }
  }
};
cljs.core.logic.protocols.IOccursCheckTerm["null"] = true;
cljs.core.logic.protocols.occurs_check_term["null"] = function(v, x, s) {
  return false
};
cljs.core.logic.protocols.IBuildTerm["_"] = true;
cljs.core.logic.protocols.build_term["_"] = function(u, s) {
  if(cljs.core.coll_QMARK_.call(null, u)) {
    return cljs.core.reduce.call(null, cljs.core.logic.build, s, u)
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return s
    }else {
      return null
    }
  }
};
cljs.core.logic.protocols.IBuildTerm["null"] = true;
cljs.core.logic.protocols.build_term["null"] = function(u, s) {
  return s
};
cljs.core.logic.composeg = function() {
  var composeg = null;
  var composeg__0 = function() {
    return cljs.core.identity
  };
  var composeg__2 = function(g0, g1) {
    return function(a) {
      var a__$1 = g0.call(null, a);
      var and__9129__auto__ = a__$1;
      if(cljs.core.truth_(and__9129__auto__)) {
        return g1.call(null, a__$1)
      }else {
        return and__9129__auto__
      }
    }
  };
  composeg = function(g0, g1) {
    switch(arguments.length) {
      case 0:
        return composeg__0.call(this);
      case 2:
        return composeg__2.call(this, g0, g1)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  composeg.cljs$core$IFn$_invoke$arity$0 = composeg__0;
  composeg.cljs$core$IFn$_invoke$arity$2 = composeg__2;
  return composeg
}();
cljs.core.logic.Choice = function(a, f) {
  this.a = a;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 256
};
cljs.core.logic.Choice.cljs$lang$type = true;
cljs.core.logic.Choice.cljs$lang$ctorStr = "cljs.core.logic/Choice";
cljs.core.logic.Choice.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/Choice")
};
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$ITake$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$ITake$take_STAR_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons.call(null, self__.a, new cljs.core.LazySeq(null, function() {
      return cljs.core.logic.protocols.take_STAR_.call(null, self__.f)
    }, null, null))
  }, null, null)
};
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IMPlus$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IMPlus$mplus$arity$2 = function(this$, fp) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.logic.Choice(self__.a, function() {
    return cljs.core.logic.protocols.mplus.call(null, fp.call(null), self__.f)
  })
};
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IBind$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IBind$bind$arity$2 = function(this$, g) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.protocols.mplus.call(null, g.call(null, self__.a), function() {
    return cljs.core.logic.protocols.bind.call(null, self__.f, g)
  })
};
cljs.core.logic.Choice.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.Choice.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13782 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "a", "a", 1013904339), G__13782)) {
    return self__.a
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return not_found
    }else {
      return null
    }
  }
};
cljs.core.logic.__GT_Choice = function __GT_Choice(a, f) {
  return new cljs.core.logic.Choice(a, f)
};
cljs.core.logic.choice = function choice(a, f) {
  return new cljs.core.logic.Choice(a, f)
};
cljs.core.logic.protocols.ITake["null"] = true;
cljs.core.logic.protocols.take_STAR_["null"] = function(_) {
  return cljs.core.List.EMPTY
};
cljs.core.logic.protocols.IMPlus["null"] = true;
cljs.core.logic.protocols.mplus["null"] = function(_, f) {
  return f.call(null)
};
cljs.core.logic.protocols.IBind["null"] = true;
cljs.core.logic.protocols.bind["null"] = function(_, g) {
  return null
};
cljs.core.logic.protocols.IBind["_"] = true;
cljs.core.logic.protocols.bind["_"] = function(this$, g) {
  if(cljs.core.fn_QMARK_.call(null, this$)) {
    return function _inc() {
      return cljs.core.logic.protocols.bind.call(null, this$.call(null), g)
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw cljs.core.ex_info.call(null, "No protocol method", cljs.core.PersistentArrayMap.EMPTY);
    }else {
      return null
    }
  }
};
cljs.core.logic.protocols.IMPlus["_"] = true;
cljs.core.logic.protocols.mplus["_"] = function(this$, f) {
  if(cljs.core.fn_QMARK_.call(null, this$)) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, f.call(null), this$)
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return new cljs.core.logic.Choice(this$, f)
    }else {
      return null
    }
  }
};
cljs.core.logic.protocols.ITake["_"] = true;
cljs.core.logic.protocols.take_STAR_["_"] = function(this$) {
  if(cljs.core.fn_QMARK_.call(null, this$)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.logic.protocols.take_STAR_.call(null, this$.call(null))
    }, null, null)
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return this$
    }else {
      return null
    }
  }
};
cljs.core.logic.succeed = function succeed(a) {
  return a
};
cljs.core.logic.fail = function fail(a) {
  return null
};
cljs.core.logic.s_SHARP_ = cljs.core.logic.succeed;
cljs.core.logic.u_SHARP_ = cljs.core.logic.fail;
cljs.core.logic.ext_run_csg = function ext_run_csg(u, v) {
  return function(a) {
    return cljs.core.logic.protocols.ext_run_cs.call(null, a, u, v)
  }
};
cljs.core.logic._EQ__EQ_ = function _EQ__EQ_(u, v) {
  return function(a) {
    var has_cs_QMARK_ = cljs.core.count.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a)) > 0;
    var ap = cljs.core.logic.unify.call(null, has_cs_QMARK_ ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "vs", "vs", 1013908015), cljs.core.PersistentVector.EMPTY) : a, u, v);
    var vs = has_cs_QMARK_ ? (new cljs.core.Keyword(null, "vs", "vs", 1013908015)).cljs$core$IFn$_invoke$arity$1(ap) : null;
    var changed_QMARK_ = cljs.core.count.call(null, vs) > 0;
    if(changed_QMARK_) {
      return cljs.core.logic.run_constraints_STAR_.call(null, vs, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(ap), new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440)).call(null, cljs.core.assoc.call(null, ap, new cljs.core.Keyword(null, "vs", "vs", 1013908015), null))
    }else {
      return ap
    }
  }
};
cljs.core.logic.solutions = function() {
  var solutions = null;
  var solutions__2 = function(s, g) {
    return solutions.call(null, s, cljs.core.logic.lvar.call(null), g)
  };
  var solutions__3 = function(s, q, g) {
    return cljs.core.logic.protocols.take_STAR_.call(null, function(a__8646__auto__) {
      return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, g), cljs.core.logic.reifyg.call(null, q))
    }.call(null, s))
  };
  solutions = function(s, q, g) {
    switch(arguments.length) {
      case 2:
        return solutions__2.call(this, s, q);
      case 3:
        return solutions__3.call(this, s, q, g)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  solutions.cljs$core$IFn$_invoke$arity$2 = solutions__2;
  solutions.cljs$core$IFn$_invoke$arity$3 = solutions__3;
  return solutions
}();
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IIfA$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IIfA$ifa$arity$3 = function(b, gs, c) {
  var b__$1 = this;
  return cljs.core.reduce.call(null, cljs.core.logic.protocols.bind, b__$1, gs)
};
cljs.core.logic.protocols.IIfA["_"] = true;
cljs.core.logic.protocols.ifa["_"] = function(b, gs, c) {
  if(cljs.core.fn_QMARK_.call(null, b)) {
    return function _inc() {
      return cljs.core.logic.protocols.ifa.call(null, b.call(null), gs, c)
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return null
    }else {
      return null
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IIfA$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IIfA$ifa$arity$3 = function(b, gs, c) {
  var b__$1 = this;
  return cljs.core.reduce.call(null, cljs.core.logic.protocols.bind, b__$1, gs)
};
cljs.core.logic.protocols.IIfA["null"] = true;
cljs.core.logic.protocols.ifa["null"] = function(b, gs, c) {
  if(cljs.core.truth_(c)) {
    return cljs.core.force.call(null, c)
  }else {
    return null
  }
};
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IIfU$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$protocols$IIfU$ifu$arity$3 = function(b, gs, c) {
  var b__$1 = this;
  return cljs.core.reduce.call(null, cljs.core.logic.protocols.bind, (new cljs.core.Keyword(null, "a", "a", 1013904339)).cljs$core$IFn$_invoke$arity$1(b__$1), gs)
};
cljs.core.logic.protocols.IIfU["_"] = true;
cljs.core.logic.protocols.ifu["_"] = function(b, gs, c) {
  if(cljs.core.fn_QMARK_.call(null, b)) {
    return function _inc() {
      return cljs.core.logic.protocols.ifu.call(null, b.call(null), gs, c)
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return null
    }else {
      return null
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IIfU$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$IIfU$ifu$arity$3 = function(b, gs, c) {
  var b__$1 = this;
  return cljs.core.reduce.call(null, cljs.core.logic.protocols.bind, b__$1, gs)
};
cljs.core.logic.protocols.IIfU["null"] = true;
cljs.core.logic.protocols.ifu["null"] = function(b, gs, c) {
  if(cljs.core.truth_(c)) {
    return cljs.core.force.call(null, c)
  }else {
    return null
  }
};
cljs.core.logic.onceo = function onceo(g) {
  return function(a13784) {
    return cljs.core.logic.protocols.ifu.call(null, g.call(null, a13784), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.logic.copy_term = function copy_term(u, v) {
  return function(a13786) {
    var u__$1 = cljs.core.logic.walk_STAR_.call(null, a13786, u);
    return function(a__8595__auto__) {
      return function _inc() {
        return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.walk_STAR_.call(null, cljs.core.logic.build.call(null, cljs.core.logic.empty_s, u__$1), u__$1), v))
      }
    }.call(null, a13786)
  }
};
cljs.core.logic.nilo = function nilo(a) {
  return cljs.core.logic._EQ__EQ_.call(null, null, a)
};
cljs.core.logic.emptyo = function emptyo(a) {
  return cljs.core.logic._EQ__EQ_.call(null, cljs.core.List.EMPTY, a)
};
cljs.core.logic.conso = function conso(a, d, l) {
  return cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, a, d), l)
};
cljs.core.logic.firsto = function firsto(l, a) {
  return function(a__8595__auto__) {
    return function _inc() {
      var d = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "d", "d", -1640531427, null));
      return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic.conso.call(null, a, d, l))
    }
  }
};
cljs.core.logic.resto = function resto(l, d) {
  return function(a__8595__auto__) {
    return function _inc() {
      var a = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "a", "a", -1640531430, null));
      return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, a, d), l))
    }
  }
};
cljs.core.logic.everyg = function everyg(g, coll) {
  return function(a) {
    var coll__$1 = cljs.core.logic.protocols.walk.call(null, a, coll);
    return function everyg_STAR_(g__$1, coll__$2) {
      if(cljs.core.seq.call(null, coll__$2)) {
        return function(a__8646__auto__) {
          return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, g__$1.call(null, cljs.core.first.call(null, coll__$2))), everyg_STAR_.call(null, g__$1, cljs.core.next.call(null, coll__$2)))
        }
      }else {
        return cljs.core.logic.s_SHARP_
      }
    }.call(null, g, coll__$1).call(null, a)
  }
};
cljs.core.logic.membero = function membero(x, l) {
  return function(a13788) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13788, function(a__8595__auto__) {
        return function _inc__$1() {
          var tail = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "tail", "tail", -1636979191, null));
          return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, x, tail), l))
        }
      }), function() {
        return cljs.core.logic.protocols.bind.call(null, a13788, function(a__8595__auto__) {
          return function _inc__$1() {
            var head = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "head", "head", -1637333095, null));
            var tail = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "tail", "tail", -1636979191, null));
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, head, tail), l)), membero.call(null, x, tail))
          }
        })
      })
    }
  }
};
cljs.core.logic.member1o = function member1o(x, l) {
  return function(a13790) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13790, function(a__8595__auto__) {
        return function _inc__$1() {
          var tail = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "tail", "tail", -1636979191, null));
          return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, x, tail), l))
        }
      }), function() {
        return cljs.core.logic.protocols.bind.call(null, a13790, function(a__8595__auto__) {
          return function _inc__$1() {
            var head = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "head", "head", -1637333095, null));
            var tail = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "tail", "tail", -1636979191, null));
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, head, tail), l)), cljs.core.logic._BANG__EQ_.call(null, x, head)), member1o.call(null, x, tail))
          }
        })
      })
    }
  }
};
cljs.core.logic.appendo = function appendo(x, y, z) {
  return function(a13792) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13792, function(a__8595__auto__) {
        return function _inc__$1() {
          return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.List.EMPTY, x)), function(a__8595__auto____$1) {
            return function _inc__$1() {
              return cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, cljs.core.logic._EQ__EQ_.call(null, y, z))
            }
          })
        }
      }), function() {
        return cljs.core.logic.protocols.bind.call(null, a13792, function(a__8595__auto__) {
          return function _inc__$1() {
            var a = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "a", "a", -1640531430, null));
            var d = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "d", "d", -1640531427, null));
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, a, d), x)), function(a__8595__auto____$1) {
              return function _inc__$1() {
                var r = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "r", "r", -1640531413, null));
                return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, a, r), z)), appendo.call(null, d, y, r))
              }
            })
          }
        })
      })
    }
  }
};
cljs.core.logic.permuteo = function permuteo(xl, yl) {
  return function(a13794) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13794, function(a__8595__auto__) {
        return function _inc__$1() {
          return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.List.EMPTY, xl)), function(a__8595__auto____$1) {
            return function _inc__$1() {
              return cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, cljs.core.logic._EQ__EQ_.call(null, cljs.core.List.EMPTY, yl))
            }
          })
        }
      }), function() {
        return cljs.core.logic.protocols.bind.call(null, a13794, function(a__8595__auto__) {
          return function _inc__$1() {
            var xs = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "xs", "xs", -1640527692, null));
            var x = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "x", "x", -1640531407, null));
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, x, xs), xl)), function(a__8595__auto____$1) {
              return function _inc__$1() {
                var ys = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "ys", "ys", -1640527661, null));
                return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, permuteo.call(null, xs, ys)), cljs.core.logic.rembero.call(null, x, yl, ys))
              }
            })
          }
        })
      })
    }
  }
};
cljs.core.logic.to_stream = function to_stream(aseq) {
  var aseq__$1 = cljs.core.drop_while.call(null, cljs.core.nil_QMARK_, aseq);
  if(cljs.core.seq.call(null, aseq__$1)) {
    return cljs.core.logic.choice.call(null, cljs.core.first.call(null, aseq__$1), function() {
      return to_stream.call(null, cljs.core.next.call(null, aseq__$1))
    })
  }else {
    return null
  }
};
cljs.core.logic.AnswerCache = function(ansl, anss, _meta) {
  this.ansl = ansl;
  this.anss = anss;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147877120
};
cljs.core.logic.AnswerCache.cljs$lang$type = true;
cljs.core.logic.AnswerCache.cljs$lang$ctorStr = "cljs.core.logic/AnswerCache";
cljs.core.logic.AnswerCache.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/AnswerCache")
};
cljs.core.logic.AnswerCache.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(x__$1)].join(""))
};
cljs.core.logic.AnswerCache.prototype.cljs$core$logic$protocols$IAnswerCache$ = true;
cljs.core.logic.AnswerCache.prototype.cljs$core$logic$protocols$IAnswerCache$_add$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.logic.AnswerCache(cljs.core.conj.call(null, self__.ansl, x), cljs.core.conj.call(null, self__.anss, x), self__._meta)
};
cljs.core.logic.AnswerCache.prototype.cljs$core$logic$protocols$IAnswerCache$_cached_QMARK_$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  var anss__$1 = self__.anss;
  return cljs.core.contains_QMARK_.call(null, anss__$1, x)
};
cljs.core.logic.AnswerCache.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.AnswerCache.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13795 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "anss", "anss", 1016903359), G__13795)) {
    return self__.anss
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ansl", "ansl", 1016903352), G__13795)) {
      return self__.ansl
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.AnswerCache.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.logic.AnswerCache(self__.ansl, self__.anss, new_meta)
};
cljs.core.logic.AnswerCache.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta
};
cljs.core.logic.AnswerCache.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return[cljs.core.str("\x3canswer-cache:"), cljs.core.str(cljs.core.pr_str.call(null, self__.ansl)), cljs.core.str("\x3e")].join("")
};
cljs.core.logic.__GT_AnswerCache = function __GT_AnswerCache(ansl, anss, _meta) {
  return new cljs.core.logic.AnswerCache(ansl, anss, _meta)
};
cljs.core.logic.answer_cache = function answer_cache() {
  return new cljs.core.logic.AnswerCache(cljs.core.List.EMPTY, cljs.core.PersistentHashSet.EMPTY, null)
};
cljs.core.logic.SuspendedStream = function(cache, ansv_STAR_, f, __meta, __extmap) {
  this.cache = cache;
  this.ansv_STAR_ = ansv_STAR_;
  this.f = f;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9693__auto__) {
  var self__ = this;
  var this__9693__auto____$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, this__9693__auto____$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9698__auto__, k__9699__auto__) {
  var self__ = this;
  var this__9698__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9698__auto____$1, k__9699__auto__, null)
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9700__auto__, k13797, else__9701__auto__) {
  var self__ = this;
  var this__9700__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k13797, new cljs.core.Keyword(null, "cache", "cache", 1108321012))) {
    return self__.cache
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k13797, new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004))) {
      return self__.ansv_STAR_
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k13797, new cljs.core.Keyword(null, "f", "f", 1013904344))) {
        return self__.f
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k13797, else__9701__auto__)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9705__auto__, k__9706__auto__, G__13796) {
  var self__ = this;
  var this__9705__auto____$1 = this;
  var pred__13799 = cljs.core.keyword_identical_QMARK_;
  var expr__13800 = k__9706__auto__;
  if(cljs.core.truth_(pred__13799.call(null, new cljs.core.Keyword(null, "cache", "cache", 1108321012), expr__13800))) {
    return new cljs.core.logic.SuspendedStream(G__13796, self__.ansv_STAR_, self__.f, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__13799.call(null, new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004), expr__13800))) {
      return new cljs.core.logic.SuspendedStream(self__.cache, G__13796, self__.f, self__.__meta, self__.__extmap, null)
    }else {
      if(cljs.core.truth_(pred__13799.call(null, new cljs.core.Keyword(null, "f", "f", 1013904344), expr__13800))) {
        return new cljs.core.logic.SuspendedStream(self__.cache, self__.ansv_STAR_, G__13796, self__.__meta, self__.__extmap, null)
      }else {
        return new cljs.core.logic.SuspendedStream(self__.cache, self__.ansv_STAR_, self__.f, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9706__auto__, G__13796), null)
      }
    }
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9712__auto__, writer__9713__auto__, opts__9714__auto__) {
  var self__ = this;
  var this__9712__auto____$1 = this;
  var pr_pair__9715__auto__ = function(keyval__9716__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, cljs.core.pr_writer, "", " ", "", opts__9714__auto__, keyval__9716__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, pr_pair__9715__auto__, "#cljs.core.logic.SuspendedStream{", ", ", "}", opts__9714__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cache", "cache", 1108321012), self__.cache], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004), self__.ansv_STAR_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), self__.f], null)], null), self__.__extmap))
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9703__auto__, entry__9704__auto__) {
  var self__ = this;
  var this__9703__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__9704__auto__)) {
    return cljs.core._assoc.call(null, this__9703__auto____$1, cljs.core._nth.call(null, entry__9704__auto__, 0), cljs.core._nth.call(null, entry__9704__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9703__auto____$1, entry__9704__auto__)
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9710__auto__) {
  var self__ = this;
  var this__9710__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cache", "cache", 1108321012), self__.cache], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004), self__.ansv_STAR_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), self__.f], null)], null), self__.__extmap))
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9702__auto__) {
  var self__ = this;
  var this__9702__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9694__auto__, other__9695__auto__) {
  var self__ = this;
  var this__9694__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__9129__auto__ = other__9695__auto__;
    if(cljs.core.truth_(and__9129__auto__)) {
      return this__9694__auto____$1.constructor === other__9695__auto__.constructor && cljs.core.equiv_map.call(null, this__9694__auto____$1, other__9695__auto__)
    }else {
      return and__9129__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9697__auto__, G__13796) {
  var self__ = this;
  var this__9697__auto____$1 = this;
  return new cljs.core.logic.SuspendedStream(self__.cache, self__.ansv_STAR_, self__.f, G__13796, self__.__extmap, self__.__hash)
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9696__auto__) {
  var self__ = this;
  var this__9696__auto____$1 = this;
  return self__.__meta
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9707__auto__, k__9708__auto__) {
  var self__ = this;
  var this__9707__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "f", "f", 1013904344), null, new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004), null, new cljs.core.Keyword(null, "cache", "cache", 1108321012), null], null), null), k__9708__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9707__auto____$1), self__.__meta), k__9708__auto__)
  }else {
    return new cljs.core.logic.SuspendedStream(self__.cache, self__.ansv_STAR_, self__.f, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9708__auto__)), null)
  }
};
cljs.core.logic.SuspendedStream.prototype.cljs$core$logic$protocols$ISuspendedStream$ = true;
cljs.core.logic.SuspendedStream.prototype.cljs$core$logic$protocols$ISuspendedStream$ready_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return!((new cljs.core.Keyword(null, "ansl", "ansl", 1016903352)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.cache)) === self__.ansv_STAR_)
};
cljs.core.logic.SuspendedStream.cljs$lang$type = true;
cljs.core.logic.SuspendedStream.cljs$lang$ctorPrSeq = function(this__9732__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.logic/SuspendedStream")
};
cljs.core.logic.SuspendedStream.cljs$lang$ctorPrWriter = function(this__9732__auto__, writer__9733__auto__) {
  return cljs.core._write.call(null, writer__9733__auto__, "cljs.core.logic/SuspendedStream")
};
cljs.core.logic.__GT_SuspendedStream = function __GT_SuspendedStream(cache, ansv_STAR_, f) {
  return new cljs.core.logic.SuspendedStream(cache, ansv_STAR_, f)
};
cljs.core.logic.map__GT_SuspendedStream = function map__GT_SuspendedStream(G__13798) {
  return new cljs.core.logic.SuspendedStream((new cljs.core.Keyword(null, "cache", "cache", 1108321012)).cljs$core$IFn$_invoke$arity$1(G__13798), (new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004)).cljs$core$IFn$_invoke$arity$1(G__13798), (new cljs.core.Keyword(null, "f", "f", 1013904344)).cljs$core$IFn$_invoke$arity$1(G__13798), null, cljs.core.dissoc.call(null, G__13798, new cljs.core.Keyword(null, "cache", "cache", 1108321012), new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004), 
  new cljs.core.Keyword(null, "f", "f", 1013904344)))
};
cljs.core.logic.make_suspended_stream = function make_suspended_stream(cache, ansv_STAR_, f) {
  return new cljs.core.logic.SuspendedStream(cache, ansv_STAR_, f)
};
cljs.core.logic.suspended_stream_QMARK_ = function suspended_stream_QMARK_(x) {
  return x instanceof cljs.core.logic.SuspendedStream
};
cljs.core.logic.waiting_stream_QMARK_ = function waiting_stream_QMARK_(x) {
  return cljs.core.vector_QMARK_.call(null, x)
};
cljs.core.logic.waiting_stream_check = function waiting_stream_check(w, success_cont, failure_cont) {
  var w__$1 = w;
  var a = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(w__$1 == null) {
      return failure_cont.call(null)
    }else {
      if(cljs.core.truth_(cljs.core.logic.protocols.ready_QMARK_.call(null, cljs.core.first.call(null, w__$1)))) {
        return success_cont.call(null, function(w__$1, a) {
          return function() {
            var ss = cljs.core.first.call(null, w__$1);
            var f = (new cljs.core.Keyword(null, "f", "f", 1013904344)).cljs$core$IFn$_invoke$arity$1(ss);
            var w__$2 = cljs.core.into.call(null, a, cljs.core.next.call(null, w__$1));
            if(cljs.core.empty_QMARK_.call(null, w__$2)) {
              return f.call(null)
            }else {
              return cljs.core.logic.protocols.mplus.call(null, f.call(null), function(w__$1, a, ss, f, w__$2) {
                return function() {
                  return w__$2
                }
              }(w__$1, a, ss, f, w__$2))
            }
          }
        }(w__$1, a))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__13802 = cljs.core.next.call(null, w__$1);
          var G__13803 = cljs.core.conj.call(null, a, cljs.core.first.call(null, w__$1));
          w__$1 = G__13802;
          a = G__13803;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITabled$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITabled$_reify_tabled$arity$2 = function(this$, v) {
  var this$__$1 = this;
  var v__$1 = cljs.core.logic.protocols.walk.call(null, this$__$1, v);
  if(cljs.core.logic.lvar_QMARK_.call(null, v__$1)) {
    return cljs.core.logic.protocols.ext_no_check.call(null, this$__$1, v__$1, cljs.core.logic.lvar.call(null, cljs.core.count.call(null, (new cljs.core.Keyword(null, "s", "s", 1013904357)).cljs$core$IFn$_invoke$arity$1(this$__$1))))
  }else {
    if(cljs.core.coll_QMARK_.call(null, v__$1)) {
      return cljs.core.logic.protocols._reify_tabled.call(null, cljs.core.logic.protocols._reify_tabled.call(null, this$__$1, cljs.core.first.call(null, v__$1)), cljs.core.next.call(null, v__$1))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return this$__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITabled$reify_tabled$arity$2 = function(this$, v) {
  var this$__$1 = this;
  var v__$1 = cljs.core.logic.walk_STAR_.call(null, this$__$1, v);
  return cljs.core.logic.walk_STAR_.call(null, cljs.core.logic.protocols._reify_tabled.call(null, cljs.core.logic.empty_s, v__$1), v__$1)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITabled$reuse$arity$5 = function(this$, argv, cache, start, end) {
  var this$__$1 = this;
  var start__$1 = function() {
    var or__9141__auto__ = start;
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return(new cljs.core.Keyword(null, "ansl", "ansl", 1016903352)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cache))
    }
  }();
  var end__$1 = function() {
    var or__9141__auto__ = end;
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return 0
    }
  }();
  var reuse_loop = function reuse_loop(ansv_STAR_) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, ansv_STAR_), end__$1)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.make_suspended_stream.call(null, cache, start__$1, function() {
        return cljs.core.logic.protocols.reuse.call(null, this$__$1, argv, cache, (new cljs.core.Keyword(null, "ansl", "ansl", 1016903352)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cache)), cljs.core.count.call(null, start__$1))
      })], null)
    }else {
      var ans = cljs.core.first.call(null, ansv_STAR_);
      return new cljs.core.logic.Choice(cljs.core.logic.protocols.subunify.call(null, this$__$1, argv, cljs.core.logic.protocols.reify_tabled.call(null, this$__$1, ans)), function() {
        return reuse_loop.call(null, cljs.core.rest.call(null, ansv_STAR_))
      })
    }
  };
  return reuse_loop.call(null, start__$1)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$protocols$ITabled$subunify$arity$3 = function(this$, arg, ans) {
  var this$__$1 = this;
  var arg__$1 = cljs.core.logic.protocols.walk.call(null, this$__$1, arg);
  if(cljs.core._EQ_.call(null, arg__$1, ans)) {
    return this$__$1
  }else {
    if(cljs.core.logic.lvar_QMARK_.call(null, arg__$1)) {
      return cljs.core.logic.protocols.ext_no_check.call(null, this$__$1, arg__$1, ans)
    }else {
      if(cljs.core.coll_QMARK_.call(null, arg__$1)) {
        return cljs.core.logic.protocols.subunify.call(null, cljs.core.logic.protocols.subunify.call(null, this$__$1, cljs.core.next.call(null, arg__$1), cljs.core.next.call(null, ans)), cljs.core.first.call(null, arg__$1), cljs.core.first.call(null, ans))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return this$__$1
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$ITake$ = true;
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$ITake$take_STAR_$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.logic.waiting_stream_check.call(null, this$__$1, function(f) {
    return cljs.core.logic.protocols.take_STAR_.call(null, f)
  }, function() {
    return cljs.core.List.EMPTY
  })
};
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$IMPlus$ = true;
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$IMPlus$mplus$arity$2 = function(this$, f) {
  var this$__$1 = this;
  return cljs.core.logic.waiting_stream_check.call(null, this$__$1, function(fp) {
    return cljs.core.logic.protocols.mplus.call(null, fp, f)
  }, function() {
    var a_inf = f.call(null);
    if(cljs.core.logic.waiting_stream_QMARK_.call(null, a_inf)) {
      return cljs.core.into.call(null, a_inf, this$__$1)
    }else {
      return cljs.core.logic.protocols.mplus.call(null, a_inf, function() {
        return this$__$1
      })
    }
  })
};
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$IBind$ = true;
cljs.core.PersistentVector.prototype.cljs$core$logic$protocols$IBind$bind$arity$2 = function(this$, g) {
  var this$__$1 = this;
  return cljs.core.logic.waiting_stream_check.call(null, this$__$1, function(f) {
    return cljs.core.logic.protocols.bind.call(null, f, g)
  }, function() {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, function(ss) {
      return cljs.core.logic.make_suspended_stream.call(null, (new cljs.core.Keyword(null, "cache", "cache", 1108321012)).cljs$core$IFn$_invoke$arity$1(ss), (new cljs.core.Keyword(null, "ansv*", "ansv*", 1106877004)).cljs$core$IFn$_invoke$arity$1(ss), function() {
        return cljs.core.logic.protocols.bind.call(null, (new cljs.core.Keyword(null, "f", "f", 1013904344)).cljs$core$IFn$_invoke$arity$1(ss).call(null), g)
      })
    }, this$__$1))
  })
};
cljs.core.logic.master = function master(argv, cache) {
  return function(a) {
    var rargv = cljs.core.logic._reify.call(null, a, argv);
    if(cljs.core.truth_(cljs.core.logic.protocols._cached_QMARK_.call(null, cljs.core.deref.call(null, cache), rargv))) {
      return null
    }else {
      cljs.core.swap_BANG_.call(null, cache, function(cache__$1) {
        if(cljs.core.truth_(cljs.core.logic.protocols._cached_QMARK_.call(null, cache__$1, rargv))) {
          return cache__$1
        }else {
          return cljs.core.logic.protocols._add.call(null, cache__$1, cljs.core.logic.protocols.reify_tabled.call(null, a, argv))
        }
      });
      return a
    }
  }
};
cljs.core.logic.addcg = function addcg(c) {
  return function(a) {
    var a__$1 = cljs.core.reduce.call(null, function(a__$1, x) {
      return cljs.core.logic.protocols.ext_no_check.call(null, a__$1, x, cljs.core.logic.subst_val.call(null, new cljs.core.Keyword("cljs.core.logic", "unbound", "cljs.core.logic/unbound", 1803671316)))
    }, a, cljs.core.logic.unbound_rands.call(null, a, c));
    return cljs.core.assoc.call(null, a__$1, new cljs.core.Keyword(null, "cs", "cs", 1013907426), cljs.core.logic.protocols.addc.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a__$1), a__$1, c))
  }
};
cljs.core.logic.updatecg = function updatecg(c) {
  return function(a) {
    return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "cs", "cs", 1013907426), cljs.core.logic.protocols.updatec.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a), a, c))
  }
};
cljs.core.logic.remcg = function remcg(c) {
  return function(a) {
    return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "cs", "cs", 1013907426), cljs.core.logic.protocols.remc.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a), a, c))
  }
};
cljs.core.logic.runcg = function runcg(c) {
  return function(a) {
    return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "cs", "cs", 1013907426), cljs.core.logic.protocols.runc.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a), c, true))
  }
};
cljs.core.logic.stopcg = function stopcg(c) {
  return function(a) {
    return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "cs", "cs", 1013907426), cljs.core.logic.protocols.runc.call(null, (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a), c, false))
  }
};
cljs.core.logic.ientailed_QMARK_ = function ientailed_QMARK_(c) {
  var G__13805 = c;
  if(G__13805) {
    var bit__9762__auto__ = null;
    if(cljs.core.truth_(function() {
      var or__9141__auto__ = bit__9762__auto__;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return G__13805.cljs$core$logic$protocols$IEntailed$
      }
    }())) {
      return true
    }else {
      if(!G__13805.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IEntailed, G__13805)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.logic.protocols.IEntailed, G__13805)
  }
};
cljs.core.logic.entailed_QMARK_ = function entailed_QMARK_(c, c_SINGLEQUOTE_, a) {
  var id = cljs.core.logic.protocols.id.call(null, c);
  var and__9129__auto__ = function() {
    var or__9141__auto__ = (new cljs.core.Keyword(null, "cm", "cm", 1013907420)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a)).call(null, id);
    if(cljs.core.truth_(or__9141__auto__)) {
      return or__9141__auto__
    }else {
      return id == null
    }
  }();
  if(cljs.core.truth_(and__9129__auto__)) {
    return cljs.core.logic.protocols._entailed_QMARK_.call(null, c_SINGLEQUOTE_)
  }else {
    return and__9129__auto__
  }
};
cljs.core.logic.run_constraint = function run_constraint(c) {
  return function(a) {
    var c_SINGLEQUOTE_ = cljs.core.logic.protocols._step.call(null, c, a);
    if(!cljs.core.logic.ientailed_QMARK_.call(null, c_SINGLEQUOTE_) || !cljs.core.logic.entailed_QMARK_.call(null, c, c_SINGLEQUOTE_, a)) {
      if(cljs.core.truth_(cljs.core.logic.protocols._runnable_QMARK_.call(null, c_SINGLEQUOTE_))) {
        return cljs.core.logic.composeg.call(null, cljs.core.logic.runcg.call(null, c), cljs.core.logic.composeg.call(null, c_SINGLEQUOTE_, cljs.core.logic.stopcg.call(null, c))).call(null, a)
      }else {
        return a
      }
    }else {
      return cljs.core.logic.remcg.call(null, c).call(null, a)
    }
  }
};
cljs.core.logic.fix_constraints = function fix_constraints(a) {
  var a__$1 = a;
  while(true) {
    if(cljs.core.truth_(a__$1)) {
      var cq = (new cljs.core.Keyword(null, "cq", "cq", 1013907424)).cljs$core$IFn$_invoke$arity$1(a__$1);
      if(cljs.core.count.call(null, cq) === 0) {
        return cljs.core.assoc.call(null, a__$1, new cljs.core.Keyword(null, "cq", "cq", 1013907424), null)
      }else {
        var c = cljs.core.first.call(null, cq);
        var G__13806 = cljs.core.logic.run_constraint.call(null, c).call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, a__$1, new cljs.core.Keyword(null, "cq", "cq", 1013907424), cljs.core.subvec.call(null, (new cljs.core.Keyword(null, "cq", "cq", 1013907424)).cljs$core$IFn$_invoke$arity$1(a__$1), 1)), new cljs.core.Keyword(null, "cqs", "cqs", 1014002999), cljs.core.disj.call(null, (new cljs.core.Keyword(null, "cqs", "cqs", 1014002999)).cljs$core$IFn$_invoke$arity$1(a__$1), cljs.core.logic.protocols.id.call(null, 
        c))));
        a__$1 = G__13806;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.logic.run_constraints = function run_constraints(xcs) {
  return function(a) {
    var cq = (new cljs.core.Keyword(null, "cq", "cq", 1013907424)).cljs$core$IFn$_invoke$arity$1(a);
    var a__$1 = cljs.core.reduce.call(null, function(cq) {
      return function(a__$1, c) {
        return cljs.core.logic.protocols.queue.call(null, a__$1, c)
      }
    }(cq), cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "cq", "cq", 1013907424), function() {
      var or__9141__auto__ = cq;
      if(cljs.core.truth_(or__9141__auto__)) {
        return or__9141__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }()), xcs);
    if(cljs.core.truth_(cq)) {
      return a__$1
    }else {
      return cljs.core.logic.fix_constraints.call(null, a__$1)
    }
  }
};
cljs.core.logic.run_constraints_STAR_ = function run_constraints_STAR_(xs, cs, ws) {
  if(cljs.core.count.call(null, cs) === 0 || cljs.core.seq.call(null, xs) == null) {
    return cljs.core.logic.s_SHARP_
  }else {
    return function(a) {
      var xcs = cljs.core.logic.protocols.constraints_for.call(null, cs, a, cljs.core.first.call(null, xs), ws);
      if(cljs.core.seq.call(null, xcs)) {
        return cljs.core.logic.composeg.call(null, cljs.core.logic.run_constraints.call(null, xcs), run_constraints_STAR_.call(null, cljs.core.next.call(null, xs), cs, ws)).call(null, a)
      }else {
        return run_constraints_STAR_.call(null, cljs.core.next.call(null, xs), cs, ws).call(null, a)
      }
    }
  }
};
cljs.core.logic.verify_all_bound = function verify_all_bound(a, constrained) {
  var verify_all_bound_STAR_ = function verify_all_bound_STAR_(a__$1, constrained__$1) {
    while(true) {
      if(cljs.core.truth_(constrained__$1)) {
        var x = cljs.core.first.call(null, constrained__$1);
        if(cljs.core.logic.lvar_QMARK_.call(null, x) && cljs.core.logic.lvar_QMARK_.call(null, cljs.core.logic.protocols.walk.call(null, a__$1, x)) && cljs.core.logic.get_dom.call(null, a__$1, x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947)) == null) {
          throw cljs.core.ex_info.call(null, [cljs.core.str("Constrained variable "), cljs.core.str(x), cljs.core.str(" without domain")].join(""), cljs.core.PersistentArrayMap.EMPTY);
        }else {
          var G__13807 = a__$1;
          var G__13808 = cljs.core.next.call(null, constrained__$1);
          a__$1 = G__13807;
          constrained__$1 = G__13808;
          continue
        }
      }else {
        return null
      }
      break
    }
  };
  return verify_all_bound_STAR_.call(null, a, cljs.core.seq.call(null, constrained))
};
cljs.core.logic.enforceable_constrained = function enforceable_constrained(a) {
  var cs = (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a);
  var km = (new cljs.core.Keyword(null, "km", "km", 1013907668)).cljs$core$IFn$_invoke$arity$1(cs);
  var cm = (new cljs.core.Keyword(null, "cm", "cm", 1013907420)).cljs$core$IFn$_invoke$arity$1(cs);
  var vs = cljs.core.keys.call(null, km);
  return cljs.core.filter.call(null, function(v) {
    return cljs.core.some.call(null, function(cid) {
      var temp__4094__auto__ = cljs.core.get.call(null, cm, cid);
      if(cljs.core.truth_(temp__4094__auto__)) {
        var c = temp__4094__auto__;
        return cljs.core.logic.protocols.enforceable_QMARK_.call(null, c)
      }else {
        return null
      }
    }, cljs.core.get.call(null, km, v))
  }, vs)
};
cljs.core.logic.enforce_constraints = function enforce_constraints(x) {
  return function(a__8646__auto__) {
    return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, cljs.core.logic.force_ans.call(null, x)), function(a) {
      var constrained = cljs.core.logic.enforceable_constrained.call(null, a);
      cljs.core.logic.verify_all_bound.call(null, a, constrained);
      return cljs.core.logic.onceo.call(null, cljs.core.logic.force_ans.call(null, constrained)).call(null, a)
    })
  }
};
cljs.core.logic.reify_constraints = function reify_constraints(v, r, a) {
  var cs = (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a);
  var rcs = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, function(cs) {
    return function(p1__13810_SHARP_) {
      return!(p1__13810_SHARP_ == null)
    }
  }(cs), cljs.core.map.call(null, function(cs) {
    return function(p1__13809_SHARP_) {
      return cljs.core.logic.protocols._reifyc.call(null, p1__13809_SHARP_, v, r, a)
    }
  }(cs), cljs.core.filter.call(null, cljs.core.logic.protocols.reifiable_QMARK_, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "cm", "cm", 1013907420)).cljs$core$IFn$_invoke$arity$1(cs))))));
  if(cljs.core.empty_QMARK_.call(null, rcs)) {
    return cljs.core.logic.choice.call(null, v, cljs.core.logic.empty_f)
  }else {
    return cljs.core.logic.choice.call(null, cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, v), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "-", "-", 1013904287)), rcs)), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
    cljs.core.List.EMPTY, 1618), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 16), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1618), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
    cljs.core.List.EMPTY, 29))))), cljs.core.logic.empty_f)
  }
};
cljs.core.logic.reifyg = function reifyg(x) {
  return function(a__8646__auto__) {
    return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, cljs.core.logic.enforce_constraints.call(null, x)), function(a) {
      var v = cljs.core.logic.walk_STAR_.call(null, a, x);
      var r = cljs.core.logic._reify_STAR_.call(null, cljs.core.with_meta.call(null, cljs.core.logic.empty_s, cljs.core.meta.call(null, a)), v);
      if(cljs.core.count.call(null, r) === 0) {
        return cljs.core.logic.choice.call(null, v, cljs.core.logic.empty_f)
      }else {
        var v__$1 = cljs.core.logic.walk_STAR_.call(null, r, v);
        return cljs.core.logic.reify_constraints.call(null, v__$1, r, a)
      }
    })
  }
};
cljs.core.logic.cgoal = function cgoal(c) {
  if(typeof cljs.core.logic.t13815 !== "undefined") {
  }else {
    cljs.core.logic.t13815 = function(c, cgoal, meta13816) {
      this.c = c;
      this.cgoal = cgoal;
      this.meta13816 = meta13816;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393217
    };
    cljs.core.logic.t13815.cljs$lang$type = true;
    cljs.core.logic.t13815.cljs$lang$ctorStr = "cljs.core.logic/t13815";
    cljs.core.logic.t13815.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13815")
    };
    cljs.core.logic.t13815.prototype.cljs$core$logic$protocols$IUnwrapConstraint$ = true;
    cljs.core.logic.t13815.prototype.cljs$core$logic$protocols$IUnwrapConstraint$_unwrap$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.c
    };
    cljs.core.logic.t13815.prototype.call = function(self__, a) {
      var self__ = this;
      var self____$1 = this;
      var _ = self____$1;
      var c_SINGLEQUOTE_ = cljs.core.logic.protocols._step.call(null, self__.c, a);
      if(cljs.core.truth_(cljs.core.logic.protocols._runnable_QMARK_.call(null, c_SINGLEQUOTE_))) {
        var temp__4094__auto__ = c_SINGLEQUOTE_.call(null, a);
        if(cljs.core.truth_(temp__4094__auto__)) {
          var a__$1 = temp__4094__auto__;
          var c_SINGLEQUOTE___$1 = cljs.core.logic.protocols._step.call(null, self__.c, a__$1);
          if(cljs.core.logic.ientailed_QMARK_.call(null, c_SINGLEQUOTE___$1) && !cljs.core.logic.entailed_QMARK_.call(null, self__.c, c_SINGLEQUOTE___$1, a__$1)) {
            return cljs.core.logic.addcg.call(null, self__.c).call(null, a__$1)
          }else {
            return a__$1
          }
        }else {
          return null
        }
      }else {
        return cljs.core.logic.addcg.call(null, self__.c).call(null, a)
      }
    };
    cljs.core.logic.t13815.prototype.apply = function(self__, args13818) {
      var self__ = this;
      var self____$1 = this;
      return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13818)))
    };
    cljs.core.logic.t13815.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
      var self__ = this;
      var _ = this;
      var c_SINGLEQUOTE_ = cljs.core.logic.protocols._step.call(null, self__.c, a);
      if(cljs.core.truth_(cljs.core.logic.protocols._runnable_QMARK_.call(null, c_SINGLEQUOTE_))) {
        var temp__4094__auto__ = c_SINGLEQUOTE_.call(null, a);
        if(cljs.core.truth_(temp__4094__auto__)) {
          var a__$1 = temp__4094__auto__;
          var c_SINGLEQUOTE___$1 = cljs.core.logic.protocols._step.call(null, self__.c, a__$1);
          if(cljs.core.logic.ientailed_QMARK_.call(null, c_SINGLEQUOTE___$1) && !cljs.core.logic.entailed_QMARK_.call(null, self__.c, c_SINGLEQUOTE___$1, a__$1)) {
            return cljs.core.logic.addcg.call(null, self__.c).call(null, a__$1)
          }else {
            return a__$1
          }
        }else {
          return null
        }
      }else {
        return cljs.core.logic.addcg.call(null, self__.c).call(null, a)
      }
    };
    cljs.core.logic.t13815.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13817) {
      var self__ = this;
      var _13817__$1 = this;
      return self__.meta13816
    };
    cljs.core.logic.t13815.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13817, meta13816__$1) {
      var self__ = this;
      var _13817__$1 = this;
      return new cljs.core.logic.t13815(self__.c, self__.cgoal, meta13816__$1)
    };
    cljs.core.logic.__GT_t13815 = function __GT_t13815(c__$1, cgoal__$1, meta13816) {
      return new cljs.core.logic.t13815(c__$1, cgoal__$1, meta13816)
    }
  }
  return new cljs.core.logic.t13815(c, cgoal, null)
};
cljs.core.logic.get_dom_fd = function get_dom_fd(a, x) {
  if(cljs.core.logic.lvar_QMARK_.call(null, x)) {
    return cljs.core.logic.get_dom.call(null, a, x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947))
  }else {
    return x
  }
};
cljs.core.logic.sort_by_member_count = function sort_by_member_count(a) {
  return function(x, y) {
    var dx = cljs.core.logic.get_dom_fd.call(null, a, x);
    var dy = cljs.core.logic.get_dom_fd.call(null, a, y);
    return cljs.core.logic.protocols._member_count.call(null, dx) < cljs.core.logic.protocols._member_count.call(null, dy)
  }
};
cljs.core.logic.sort_by_strategy = function sort_by_strategy(v, x, a) {
  var G__13820 = (new cljs.core.Keyword("cljs.core.logic", "strategy", "cljs.core.logic/strategy", 3884554094)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, x));
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.core.logic", "ff", "cljs.core.logic/ff", 3673845945), G__13820)) {
    return cljs.core.seq.call(null, cljs.core.sort.call(null, cljs.core.logic.sort_by_member_count.call(null, a), v))
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return v
    }else {
      return null
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IForceAnswerTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2 = function(v, x) {
  var v__$1 = this;
  var loop = function loop(ys) {
    return function(a__8646__auto__) {
      return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, cljs.core.logic.force_ans.call(null, cljs.core.logic.protocols.lfirst.call(null, ys))), cljs.core.logic.lcons_QMARK_.call(null, cljs.core.logic.protocols.lnext.call(null, ys)) ? loop.call(null, cljs.core.logic.protocols.lnext.call(null, ys)) : cljs.core.logic.s_SHARP_)
    }
  };
  return loop.call(null, v__$1)
};
cljs.core.logic.protocols.IForceAnswerTerm["_"] = true;
cljs.core.logic.protocols._force_ans["_"] = function(v, x) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    var loop = function loop(ys) {
      if(cljs.core.truth_(ys)) {
        return function(a__8646__auto__) {
          return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, cljs.core.logic.force_ans.call(null, cljs.core.first.call(null, ys))), function(a) {
            var temp__4092__auto__ = cljs.core.logic.sort_by_strategy.call(null, cljs.core.next.call(null, ys), x, a);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var ys__$1 = temp__4092__auto__;
              return loop.call(null, ys__$1).call(null, a)
            }else {
              return a
            }
          })
        }
      }else {
        return cljs.core.logic.s_SHARP_
      }
    };
    return loop.call(null, cljs.core.seq.call(null, v))
  }else {
    if(cljs.core.map_QMARK_.call(null, v)) {
      var loop = function loop(ys) {
        if(cljs.core.truth_(ys)) {
          return function(a__8646__auto__) {
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, cljs.core.logic.force_ans.call(null, cljs.core.val.call(null, cljs.core.first.call(null, ys)))), loop.call(null, cljs.core.next.call(null, ys)))
          }
        }else {
          return cljs.core.logic.s_SHARP_
        }
      };
      return loop.call(null, cljs.core.seq.call(null, v))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.logic.lvar_QMARK_.call(null, x)) {
          return cljs.core.logic.ext_run_csg.call(null, x, v)
        }else {
          return cljs.core.logic.s_SHARP_
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.protocols.IForceAnswerTerm["null"] = true;
cljs.core.logic.protocols._force_ans["null"] = function(v, x) {
  return cljs.core.logic.s_SHARP_
};
cljs.core.logic.force_ans = function force_ans(x) {
  return function(a) {
    return function() {
      var v = cljs.core.logic.protocols.walk.call(null, a, x);
      if(cljs.core.logic.lvar_QMARK_.call(null, v)) {
        return cljs.core.logic.protocols._force_ans.call(null, cljs.core.logic.get_dom_fd.call(null, a, x), v)
      }else {
        var x__$1 = cljs.core.logic.protocols.root_var.call(null, a, x);
        if(cljs.core.sequential_QMARK_.call(null, v)) {
          return cljs.core.logic.protocols._force_ans.call(null, cljs.core.logic.sort_by_strategy.call(null, v, x__$1, a), x__$1)
        }else {
          return cljs.core.logic.protocols._force_ans.call(null, v, x__$1)
        }
      }
    }().call(null, a)
  }
};
cljs.core.logic.distribute = function distribute(v_STAR_, strategy) {
  return function(a) {
    return cljs.core.logic.add_attr.call(null, a, v_STAR_, new cljs.core.Keyword("cljs.core.logic", "strategy", "cljs.core.logic/strategy", 3884554094), new cljs.core.Keyword("cljs.core.logic", "ff", "cljs.core.logic/ff", 3673845945))
  }
};
cljs.core.logic.disunify = function() {
  var disunify = null;
  var disunify__3 = function(s, u, v) {
    return disunify.call(null, s, u, v, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefixc", "prefixc", 695243651), cljs.core.PersistentArrayMap.EMPTY], null))
  };
  var disunify__4 = function(s, u, v, cs) {
    if(u === v) {
      return cs
    }else {
      var u__$1 = cljs.core.logic.protocols.walk.call(null, s, u);
      var v__$1 = cljs.core.logic.protocols.walk.call(null, s, v);
      if(u__$1 === v__$1) {
        return cs
      }else {
        if(!cljs.core.logic.lvar_QMARK_.call(null, u__$1) && cljs.core.logic.lvar_QMARK_.call(null, v__$1)) {
          return cljs.core.logic.protocols._disunify_terms.call(null, v__$1, u__$1, s, cs)
        }else {
          return cljs.core.logic.protocols._disunify_terms.call(null, u__$1, v__$1, s, cs)
        }
      }
    }
  };
  disunify = function(s, u, v, cs) {
    switch(arguments.length) {
      case 3:
        return disunify__3.call(this, s, u, v);
      case 4:
        return disunify__4.call(this, s, u, v, cs)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disunify.cljs$core$IFn$_invoke$arity$3 = disunify__3;
  disunify.cljs$core$IFn$_invoke$arity$4 = disunify__4;
  return disunify
}();
cljs.core.logic.protocols.IDisunifyTerms["_"] = true;
cljs.core.logic.protocols._disunify_terms["_"] = function(u, v, s, cs) {
  if(cljs.core.sequential_QMARK_.call(null, u)) {
    if(cljs.core.sequential_QMARK_.call(null, v)) {
      var u__$1 = cljs.core.seq.call(null, u);
      var v__$1 = cljs.core.seq.call(null, v);
      var cs__$1 = cs;
      while(true) {
        if(u__$1) {
          if(v__$1) {
            var uv = cljs.core.first.call(null, u__$1);
            var vv = cljs.core.first.call(null, v__$1);
            var cs__$2 = cljs.core.logic.disunify.call(null, s, uv, vv, cs__$1);
            if(cljs.core.truth_(cs__$2)) {
              var G__13823 = cljs.core.next.call(null, u__$1);
              var G__13824 = cljs.core.next.call(null, v__$1);
              var G__13825 = cs__$2;
              u__$1 = G__13823;
              v__$1 = G__13824;
              cs__$1 = G__13825;
              continue
            }else {
              return null
            }
          }else {
            return null
          }
        }else {
          if(v__$1 == null) {
            return cs__$1
          }else {
            return null
          }
        }
        break
      }
    }else {
      return null
    }
  }else {
    if(cljs.core.map_QMARK_.call(null, u)) {
      if(cljs.core.map_QMARK_.call(null, v) && cljs.core._EQ_.call(null, cljs.core.count.call(null, u), cljs.core.count.call(null, v))) {
        var ks = cljs.core.seq.call(null, cljs.core.keys.call(null, u));
        var cs__$1 = cs;
        while(true) {
          if(ks) {
            var kf = cljs.core.first.call(null, ks);
            var vf = cljs.core.get.call(null, v, kf, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009));
            if(cljs.core._EQ_.call(null, vf, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009))) {
              return null
            }else {
              var temp__4092__auto__ = cljs.core.logic.disunify.call(null, s, cljs.core.get.call(null, u, kf), vf, cs__$1);
              if(cljs.core.truth_(temp__4092__auto__)) {
                var cs__$2 = temp__4092__auto__;
                var G__13826 = cljs.core.next.call(null, ks);
                var G__13827 = cs__$2;
                ks = G__13826;
                cs__$1 = G__13827;
                continue
              }else {
                return null
              }
            }
          }else {
            return cs__$1
          }
          break
        }
      }else {
        return null
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(!cljs.core._EQ_.call(null, u, v)) {
          return null
        }else {
          return cs
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IDisunifyTerms$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$protocols$IDisunifyTerms$_disunify_terms$arity$4 = function(u, v, s, p__13821) {
  var map__13822 = p__13821;
  var map__13822__$1 = cljs.core.seq_QMARK_.call(null, map__13822) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13822) : map__13822;
  var cs = map__13822__$1;
  var pc = cljs.core.get.call(null, map__13822__$1, new cljs.core.Keyword(null, "prefixc", "prefixc", 695243651));
  var u__$1 = this;
  return cljs.core.assoc.call(null, cs, new cljs.core.Keyword(null, "prefixc", "prefixc", 695243651), cljs.core.assoc.call(null, pc, u__$1, v))
};
cljs.core.logic.protocols.IDisunifyTerms["null"] = true;
cljs.core.logic.protocols._disunify_terms["null"] = function(u, v, s, cs) {
  if(!(v == null)) {
    return null
  }else {
    return cs
  }
};
cljs.core.logic.recover_vars_from_term = function recover_vars_from_term(x) {
  var r = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  cljs.core.logic.protocols.walk_term.call(null, x, function(x__$1) {
    if(cljs.core.logic.lvar_QMARK_.call(null, x__$1)) {
      cljs.core.swap_BANG_.call(null, r, cljs.core.conj, x__$1);
      return x__$1
    }else {
      return x__$1
    }
  });
  return cljs.core.deref.call(null, r)
};
cljs.core.logic.recover_vars = function recover_vars(p) {
  var p__$1 = cljs.core.seq.call(null, p);
  var r = cljs.core.PersistentHashSet.EMPTY;
  while(true) {
    if(p__$1) {
      var vec__13829 = cljs.core.first.call(null, p__$1);
      var u = cljs.core.nth.call(null, vec__13829, 0, null);
      var v = cljs.core.nth.call(null, vec__13829, 1, null);
      var G__13830 = cljs.core.next.call(null, p__$1);
      var G__13831 = clojure.set.union.call(null, r, cljs.core.logic.recover_vars_from_term.call(null, u), cljs.core.logic.recover_vars_from_term.call(null, v));
      p__$1 = G__13830;
      r = G__13831;
      continue
    }else {
      return r
    }
    break
  }
};
cljs.core.logic._BANG__EQ_c = function _BANG__EQ_c(p) {
  if(typeof cljs.core.logic.t13844 !== "undefined") {
  }else {
    cljs.core.logic.t13844 = function(p, _BANG__EQ_c, meta13845) {
      this.p = p;
      this._BANG__EQ_c = _BANG__EQ_c;
      this.meta13845 = meta13845;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.t13844.cljs$lang$type = true;
    cljs.core.logic.t13844.cljs$lang$ctorStr = "cljs.core.logic/t13844";
    cljs.core.logic.t13844.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13844")
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "!\x3d", "cljs.core.logic/!\x3d", 1019412108, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1838), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1838), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 36)))))
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.seq.call(null, cljs.core.logic.recover_vars.call(null, self__.p))
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(this$, v, r, a) {
      var self__ = this;
      var this$__$1 = this;
      var p_STAR_ = cljs.core.logic._reify.call(null, a, cljs.core.map.call(null, function(p__13847) {
        var vec__13848 = p__13847;
        var lhs = cljs.core.nth.call(null, vec__13848, 0, null);
        var rhs = cljs.core.nth.call(null, vec__13848, 1, null);
        return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, lhs), cljs.core._conj.call(null, cljs.core.List.EMPTY, rhs))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1833), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 48), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1833), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 59)))))
      }, self__.p), r);
      if(cljs.core.empty_QMARK_.call(null, p_STAR_)) {
        return cljs.core.List.EMPTY
      }else {
        return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "!\x3d", "!\x3d", -1640530443, null)), p_STAR_)), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1836), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 12), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1836), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 23)))))
      }
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IWithPrefix$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IWithPrefix$_with_prefix$arity$2 = function(_, p__$2) {
      var self__ = this;
      var ___$1 = this;
      return self__._BANG__EQ_c.call(null, p__$2)
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IPrefix$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IPrefix$_prefix$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.p
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      if(typeof cljs.core.logic.t13849 !== "undefined") {
      }else {
        cljs.core.logic.t13849 = function(s, this$, meta13845, p, _BANG__EQ_c, meta13850) {
          this.s = s;
          this.this$ = this$;
          this.meta13845 = meta13845;
          this.p = p;
          this._BANG__EQ_c = _BANG__EQ_c;
          this.meta13850 = meta13850;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.t13849.cljs$lang$type = true;
        cljs.core.logic.t13849.cljs$lang$ctorStr = "cljs.core.logic/t13849";
        cljs.core.logic.t13849.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13849")
        };
        cljs.core.logic.t13849.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.t13849.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.empty_QMARK_.call(null, self__.p)
        };
        cljs.core.logic.t13849.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.t13849.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.some.call(null, function(p1__13832_SHARP_) {
            return cljs.core.not_EQ_.call(null, cljs.core.logic.protocols.walk.call(null, self__.s, p1__13832_SHARP_), p1__13832_SHARP_)
          }, cljs.core.logic.recover_vars.call(null, self__.p))
        };
        cljs.core.logic.t13849.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var p__$3 = function() {
            var sp = cljs.core.seq.call(null, self__.p);
            var p__$3 = self__.p;
            while(true) {
              if(sp) {
                var vec__13853 = cljs.core.first.call(null, sp);
                var x = cljs.core.nth.call(null, vec__13853, 0, null);
                var v = cljs.core.nth.call(null, vec__13853, 1, null);
                var xv = cljs.core.logic.walk_STAR_.call(null, s__$2, x);
                var vv = cljs.core.logic.walk_STAR_.call(null, s__$2, v);
                if(cljs.core._EQ_.call(null, xv, vv)) {
                  var G__13855 = cljs.core.next.call(null, sp);
                  var G__13856 = cljs.core.dissoc.call(null, p__$3, x);
                  sp = G__13855;
                  p__$3 = G__13856;
                  continue
                }else {
                  if(cljs.core.logic.unify.call(null, s__$2, xv, vv) == null) {
                    return null
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      var G__13857 = cljs.core.next.call(null, sp);
                      var G__13858 = cljs.core.assoc.call(null, cljs.core.dissoc.call(null, p__$3, x), xv, vv);
                      sp = G__13857;
                      p__$3 = G__13858;
                      continue
                    }else {
                      return null
                    }
                  }
                }
              }else {
                return p__$3
              }
              break
            }
          }();
          if(cljs.core.truth_(p__$3)) {
            if(cljs.core.empty_QMARK_.call(null, p__$3)) {
              return null
            }else {
              return cljs.core.logic.composeg.call(null, cljs.core.logic.remcg.call(null, self__.this$), cljs.core.logic.cgoal.call(null, self__._BANG__EQ_c.call(null, p__$3))).call(null, s__$2)
            }
          }else {
            return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$2)
          }
        };
        cljs.core.logic.t13849.prototype.apply = function(self__, args13852) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13852)))
        };
        cljs.core.logic.t13849.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          var p__$3 = function() {
            var sp = cljs.core.seq.call(null, self__.p);
            var p__$3 = self__.p;
            while(true) {
              if(sp) {
                var vec__13854 = cljs.core.first.call(null, sp);
                var x = cljs.core.nth.call(null, vec__13854, 0, null);
                var v = cljs.core.nth.call(null, vec__13854, 1, null);
                var xv = cljs.core.logic.walk_STAR_.call(null, s__$2, x);
                var vv = cljs.core.logic.walk_STAR_.call(null, s__$2, v);
                if(cljs.core._EQ_.call(null, xv, vv)) {
                  var G__13859 = cljs.core.next.call(null, sp);
                  var G__13860 = cljs.core.dissoc.call(null, p__$3, x);
                  sp = G__13859;
                  p__$3 = G__13860;
                  continue
                }else {
                  if(cljs.core.logic.unify.call(null, s__$2, xv, vv) == null) {
                    return null
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      var G__13861 = cljs.core.next.call(null, sp);
                      var G__13862 = cljs.core.assoc.call(null, cljs.core.dissoc.call(null, p__$3, x), xv, vv);
                      sp = G__13861;
                      p__$3 = G__13862;
                      continue
                    }else {
                      return null
                    }
                  }
                }
              }else {
                return p__$3
              }
              break
            }
          }();
          if(cljs.core.truth_(p__$3)) {
            if(cljs.core.empty_QMARK_.call(null, p__$3)) {
              return null
            }else {
              return cljs.core.logic.composeg.call(null, cljs.core.logic.remcg.call(null, self__.this$), cljs.core.logic.cgoal.call(null, self__._BANG__EQ_c.call(null, p__$3))).call(null, s__$2)
            }
          }else {
            return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$2)
          }
        };
        cljs.core.logic.t13849.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13851) {
          var self__ = this;
          var _13851__$1 = this;
          return self__.meta13850
        };
        cljs.core.logic.t13849.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13851, meta13850__$1) {
          var self__ = this;
          var _13851__$1 = this;
          return new cljs.core.logic.t13849(self__.s, self__.this$, self__.meta13845, self__.p, self__._BANG__EQ_c, meta13850__$1)
        };
        cljs.core.logic.__GT_t13849 = function __GT_t13849(s__$1, this$__$2, meta13845__$1, p__$2, _BANG__EQ_c__$2, meta13850) {
          return new cljs.core.logic.t13849(s__$1, this$__$2, meta13845__$1, p__$2, _BANG__EQ_c__$2, meta13850)
        }
      }
      return new cljs.core.logic.t13849(s, this$__$1, self__.meta13845, self__.p, self__._BANG__EQ_c, null)
    };
    cljs.core.logic.t13844.prototype.cljs$core$logic$protocols$ITreeConstraint$ = true;
    cljs.core.logic.t13844.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13846) {
      var self__ = this;
      var _13846__$1 = this;
      return self__.meta13845
    };
    cljs.core.logic.t13844.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13846, meta13845__$1) {
      var self__ = this;
      var _13846__$1 = this;
      return new cljs.core.logic.t13844(self__.p, self__._BANG__EQ_c, meta13845__$1)
    };
    cljs.core.logic.__GT_t13844 = function __GT_t13844(p__$1, _BANG__EQ_c__$1, meta13845) {
      return new cljs.core.logic.t13844(p__$1, _BANG__EQ_c__$1, meta13845)
    }
  }
  return new cljs.core.logic.t13844(p, _BANG__EQ_c, null)
};
cljs.core.logic._BANG__EQ_ = function _BANG__EQ_(u, v) {
  return function(a) {
    var cs = cljs.core.logic.disunify.call(null, a, u, v);
    if(!(cs == null)) {
      var p = (new cljs.core.Keyword(null, "prefixc", "prefixc", 695243651)).cljs$core$IFn$_invoke$arity$1(cs);
      if(cljs.core.empty_QMARK_.call(null, p)) {
        return null
      }else {
        if(cljs.core.truth_(cljs.core.some.call(null, function(p__13865) {
          var vec__13866 = p__13865;
          var u__$1 = cljs.core.nth.call(null, vec__13866, 0, null);
          var v__$1 = cljs.core.nth.call(null, vec__13866, 1, null);
          return cljs.core.logic.unify.call(null, a, u__$1, v__$1) == null
        }, p))) {
          return a
        }else {
          return cljs.core.logic.cgoal.call(null, cljs.core.logic._BANG__EQ_c.call(null, p)).call(null, a)
        }
      }
    }else {
      return a
    }
  }
};
cljs.core.logic.distincto = function distincto(l) {
  return function(a13868) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13868, function(a__8595__auto__) {
        return function _inc__$1() {
          return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.List.EMPTY, l))
        }
      }), function() {
        return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13868, function(a__8595__auto__) {
          return function _inc__$1() {
            var h = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "h", "h", -1640531423, null));
            return cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [h], null), l))
          }
        }), function() {
          return cljs.core.logic.protocols.bind.call(null, a13868, function(a__8595__auto__) {
            return function _inc__$1() {
              var t = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "t", "t", -1640531411, null));
              var h1 = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "h1", "h1", -1640528254, null));
              var h0 = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "h0", "h0", -1640528255, null));
              return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, h0, cljs.core.logic.lcons.call(null, h1, t)), l)), cljs.core.logic._BANG__EQ_.call(null, h0, h1)), distincto.call(null, cljs.core.logic.lcons.call(null, h0, t))), distincto.call(null, cljs.core.logic.lcons.call(null, h1, t)))
            }
          })
        })
      })
    }
  }
};
cljs.core.logic.rembero = function rembero(x, l, o) {
  return function(a13870) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13870, function(a__8595__auto__) {
        return function _inc__$1() {
          var xs = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "xs", "xs", -1640527692, null));
          return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, x, xs), l)), function(a__8595__auto____$1) {
            return function _inc__$1() {
              return cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, cljs.core.logic._EQ__EQ_.call(null, xs, o))
            }
          })
        }
      }), function() {
        return cljs.core.logic.protocols.bind.call(null, a13870, function(a__8595__auto__) {
          return function _inc__$1() {
            var ys = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "ys", "ys", -1640527661, null));
            var y = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "y", "y", -1640531406, null));
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, y, ys), l)), function(a__8595__auto____$1) {
              return function _inc__$1() {
                var zs = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "zs", "zs", -1640527630, null));
                return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, y, zs), o)), cljs.core.logic._BANG__EQ_.call(null, y, x)), rembero.call(null, x, ys, zs))
              }
            })
          }
        })
      })
    }
  }
};
cljs.core.logic.unify_with_pmap_STAR_ = function unify_with_pmap_STAR_(u, v, s) {
  var ks = cljs.core.keys.call(null, u);
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, ks)) {
      var kf = cljs.core.first.call(null, ks);
      var vf = cljs.core.get.call(null, v, kf, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009));
      if(cljs.core._EQ_.call(null, vf, new cljs.core.Keyword("cljs.core.logic", "not-found", "cljs.core.logic/not-found", 3358757009))) {
        return null
      }else {
        var uf = cljs.core.get.call(null, u, kf);
        if(cljs.core.logic.lvar_QMARK_.call(null, vf)) {
          var G__13871 = cljs.core.next.call(null, ks);
          var G__13872 = cljs.core.logic.featurec.call(null, vf, uf).call(null, s__$1);
          ks = G__13871;
          s__$1 = G__13872;
          continue
        }else {
          if(cljs.core.map_QMARK_.call(null, uf)) {
            var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, cljs.core.logic.partial_map.call(null, uf), vf);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var s__$2 = temp__4092__auto__;
              var G__13873 = cljs.core.next.call(null, ks);
              var G__13874 = s__$2;
              ks = G__13873;
              s__$1 = G__13874;
              continue
            }else {
              return null
            }
          }else {
            var temp__4092__auto__ = cljs.core.logic.unify.call(null, s__$1, uf, vf);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var s__$2 = temp__4092__auto__;
              var G__13875 = cljs.core.next.call(null, ks);
              var G__13876 = s__$2;
              ks = G__13875;
              s__$1 = G__13876;
              continue
            }else {
              return null
            }
          }
        }
      }
    }else {
      return s__$1
    }
    break
  }
};
cljs.core.logic.PMap = function(__meta, __extmap) {
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 0) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
cljs.core.logic.PMap.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9693__auto__) {
  var self__ = this;
  var this__9693__auto____$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, this__9693__auto____$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$IUnifyTerms$ = true;
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$IUnifyTerms$unify_terms$arity$3 = function(u, v, s) {
  var self__ = this;
  var u__$1 = this;
  if(cljs.core.map_QMARK_.call(null, v)) {
    return cljs.core.logic.unify_with_pmap_STAR_.call(null, u__$1, v, s)
  }else {
    return null
  }
};
cljs.core.logic.PMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9698__auto__, k__9699__auto__) {
  var self__ = this;
  var this__9698__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9698__auto____$1, k__9699__auto__, null)
};
cljs.core.logic.PMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9700__auto__, k13878, else__9701__auto__) {
  var self__ = this;
  var this__9700__auto____$1 = this;
  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
    return cljs.core.get.call(null, self__.__extmap, k13878, else__9701__auto__)
  }else {
    return null
  }
};
cljs.core.logic.PMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9705__auto__, k__9706__auto__, G__13877) {
  var self__ = this;
  var this__9705__auto____$1 = this;
  var pred__13880 = cljs.core.keyword_identical_QMARK_;
  var expr__13881 = k__9706__auto__;
  return new cljs.core.logic.PMap(self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9706__auto__, G__13877), null)
};
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$IUnifyWithRecord$ = true;
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$IUnifyWithRecord$unify_with_record$arity$3 = function(u, v, s) {
  var self__ = this;
  var u__$1 = this;
  if(cljs.core.map_QMARK_.call(null, v)) {
    return cljs.core.logic.unify_with_pmap_STAR_.call(null, u__$1, v, s)
  }else {
    return null
  }
};
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$IUninitialized$ = true;
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$IUninitialized$_uninitialized$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.logic.PMap
};
cljs.core.logic.PMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9712__auto__, writer__9713__auto__, opts__9714__auto__) {
  var self__ = this;
  var this__9712__auto____$1 = this;
  var pr_pair__9715__auto__ = function(keyval__9716__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, cljs.core.pr_writer, "", " ", "", opts__9714__auto__, keyval__9716__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, pr_pair__9715__auto__, "#cljs.core.logic.PMap{", ", ", "}", opts__9714__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap))
};
cljs.core.logic.PMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9703__auto__, entry__9704__auto__) {
  var self__ = this;
  var this__9703__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__9704__auto__)) {
    return cljs.core._assoc.call(null, this__9703__auto____$1, cljs.core._nth.call(null, entry__9704__auto__, 0), cljs.core._nth.call(null, entry__9704__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9703__auto____$1, entry__9704__auto__)
  }
};
cljs.core.logic.PMap.prototype.cljs$core$logic$protocols$INonStorable$ = true;
cljs.core.logic.PMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9710__auto__) {
  var self__ = this;
  var this__9710__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap))
};
cljs.core.logic.PMap.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9702__auto__) {
  var self__ = this;
  var this__9702__auto____$1 = this;
  return 0 + cljs.core.count.call(null, self__.__extmap)
};
cljs.core.logic.PMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9694__auto__, other__9695__auto__) {
  var self__ = this;
  var this__9694__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__9129__auto__ = other__9695__auto__;
    if(cljs.core.truth_(and__9129__auto__)) {
      return this__9694__auto____$1.constructor === other__9695__auto__.constructor && cljs.core.equiv_map.call(null, this__9694__auto____$1, other__9695__auto__)
    }else {
      return and__9129__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
cljs.core.logic.PMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9697__auto__, G__13877) {
  var self__ = this;
  var this__9697__auto____$1 = this;
  return new cljs.core.logic.PMap(G__13877, self__.__extmap, self__.__hash)
};
cljs.core.logic.PMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9696__auto__) {
  var self__ = this;
  var this__9696__auto____$1 = this;
  return self__.__meta
};
cljs.core.logic.PMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9707__auto__, k__9708__auto__) {
  var self__ = this;
  var this__9707__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.EMPTY, k__9708__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9707__auto____$1), self__.__meta), k__9708__auto__)
  }else {
    return new cljs.core.logic.PMap(self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9708__auto__)), null)
  }
};
cljs.core.logic.PMap.cljs$lang$type = true;
cljs.core.logic.PMap.cljs$lang$ctorPrSeq = function(this__9732__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.logic/PMap")
};
cljs.core.logic.PMap.cljs$lang$ctorPrWriter = function(this__9732__auto__, writer__9733__auto__) {
  return cljs.core._write.call(null, writer__9733__auto__, "cljs.core.logic/PMap")
};
cljs.core.logic.__GT_PMap = function __GT_PMap() {
  return new cljs.core.logic.PMap
};
cljs.core.logic.map__GT_PMap = function map__GT_PMap(G__13879) {
  return new cljs.core.logic.PMap(null, cljs.core.dissoc.call(null, G__13879))
};
cljs.core.logic.partial_map = function partial_map(m) {
  return cljs.core.logic.map__GT_PMap.call(null, m)
};
cljs.core.logic.partial_map_QMARK_ = function partial_map_QMARK_(x) {
  return x instanceof cljs.core.logic.PMap
};
cljs.core.logic.protocols.IFeature["_"] = true;
cljs.core.logic.protocols._feature["_"] = function(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.logic.partial_map.call(null, x)
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return null
    }else {
      return null
    }
  }
};
cljs.core.logic._featurec = function _featurec(x, fs) {
  if(typeof cljs.core.logic.t13890 !== "undefined") {
  }else {
    cljs.core.logic.t13890 = function(fs, x, _featurec, meta13891) {
      this.fs = fs;
      this.x = x;
      this._featurec = _featurec;
      this.meta13891 = meta13891;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.t13890.cljs$lang$type = true;
    cljs.core.logic.t13890.cljs$lang$ctorStr = "cljs.core.logic/t13890";
    cljs.core.logic.t13890.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13890")
    };
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(_, v, r, a) {
      var self__ = this;
      var ___$1 = this;
      var fs__$2 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.fs);
      var r__$1 = cljs.core.logic._reify_STAR_.call(null, r, cljs.core.logic.walk_STAR_.call(null, a, fs__$2));
      return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "featurec", "cljs.core.logic/featurec", -851976461, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 1955), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 11), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1955), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 19)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.logic.walk_STAR_.call(null, r__$1, self__.x)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.logic.walk_STAR_.call(null, r__$1, fs__$2)))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
      1955), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 10), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1955), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
      47)))))
    };
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "featurec", "cljs.core.logic/featurec", -851976461, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1949), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1949), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 42)))))
    };
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x], null)
    };
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.t13890.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      if(typeof cljs.core.logic.t13893 !== "undefined") {
      }else {
        cljs.core.logic.t13893 = function(s, this$, meta13891, fs, x, _featurec, meta13894) {
          this.s = s;
          this.this$ = this$;
          this.meta13891 = meta13891;
          this.fs = fs;
          this.x = x;
          this._featurec = _featurec;
          this.meta13894 = meta13894;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.t13893.cljs$lang$type = true;
        cljs.core.logic.t13893.cljs$lang$ctorStr = "cljs.core.logic/t13893";
        cljs.core.logic.t13893.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13893")
        };
        cljs.core.logic.t13893.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.t13893.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return!cljs.core.logic.lvar_QMARK_.call(null, cljs.core.logic.protocols.walk.call(null, self__.s, self__.x))
        };
        cljs.core.logic.t13893.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return cljs.core.logic.composeg.call(null, cljs.core.logic._EQ__EQ_.call(null, self__.fs, self__.x), cljs.core.logic.remcg.call(null, self__.this$)).call(null, s__$2)
        };
        cljs.core.logic.t13893.prototype.apply = function(self__, args13896) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13896)))
        };
        cljs.core.logic.t13893.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          return cljs.core.logic.composeg.call(null, cljs.core.logic._EQ__EQ_.call(null, self__.fs, self__.x), cljs.core.logic.remcg.call(null, self__.this$)).call(null, s__$2)
        };
        cljs.core.logic.t13893.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13895) {
          var self__ = this;
          var _13895__$1 = this;
          return self__.meta13894
        };
        cljs.core.logic.t13893.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13895, meta13894__$1) {
          var self__ = this;
          var _13895__$1 = this;
          return new cljs.core.logic.t13893(self__.s, self__.this$, self__.meta13891, self__.fs, self__.x, self__._featurec, meta13894__$1)
        };
        cljs.core.logic.__GT_t13893 = function __GT_t13893(s__$1, this$__$2, meta13891__$1, fs__$2, x__$2, _featurec__$2, meta13894) {
          return new cljs.core.logic.t13893(s__$1, this$__$2, meta13891__$1, fs__$2, x__$2, _featurec__$2, meta13894)
        }
      }
      return new cljs.core.logic.t13893(s, this$__$1, self__.meta13891, self__.fs, self__.x, self__._featurec, null)
    };
    cljs.core.logic.t13890.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13892) {
      var self__ = this;
      var _13892__$1 = this;
      return self__.meta13891
    };
    cljs.core.logic.t13890.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13892, meta13891__$1) {
      var self__ = this;
      var _13892__$1 = this;
      return new cljs.core.logic.t13890(self__.fs, self__.x, self__._featurec, meta13891__$1)
    };
    cljs.core.logic.__GT_t13890 = function __GT_t13890(fs__$1, x__$1, _featurec__$1, meta13891) {
      return new cljs.core.logic.t13890(fs__$1, x__$1, _featurec__$1, meta13891)
    }
  }
  return new cljs.core.logic.t13890(fs, x, _featurec, null)
};
cljs.core.logic.featurec = function featurec(x, fs) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic._featurec.call(null, x, cljs.core.logic.partial_map.call(null, fs)))
};
cljs.core.logic.ground_term_QMARK_ = function ground_term_QMARK_(x, s) {
  var _ground_term_QMARK_ = function _ground_term_QMARK_(x__$1, s__$1) {
    var x__$2 = cljs.core.logic.protocols.walk.call(null, s__$1, x__$1);
    if(cljs.core.logic.lvar_QMARK_.call(null, x__$2)) {
      throw cljs.core.logic.fk;
    }else {
      return cljs.core.logic.protocols.walk_term.call(null, x__$2, function(x__$3) {
        var x__$4 = cljs.core.logic.protocols.walk.call(null, s__$1, x__$3);
        if(cljs.core.logic.lvar_QMARK_.call(null, x__$4)) {
          throw cljs.core.logic.fk;
        }else {
          if(cljs.core.logic.tree_term_QMARK_.call(null, x__$4)) {
            return _ground_term_QMARK_.call(null, x__$4, s__$1)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return x__$4
            }else {
              return null
            }
          }
        }
      })
    }
  };
  try {
    _ground_term_QMARK_.call(null, x, s);
    return true
  }catch(e13898) {
    if(e13898 instanceof Error) {
      var e = e13898;
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13898;
      }else {
        return null
      }
    }
  }
};
cljs.core.logic._predc = function() {
  var _predc = null;
  var _predc__2 = function(x, p) {
    return _predc.call(null, x, p, p)
  };
  var _predc__3 = function(x, p, pform) {
    if(typeof cljs.core.logic.t13906 !== "undefined") {
    }else {
      cljs.core.logic.t13906 = function(pform, p, x, _predc, meta13907) {
        this.pform = pform;
        this.p = p;
        this.x = x;
        this._predc = _predc;
        this.meta13907 = meta13907;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.logic.t13906.cljs$lang$type = true;
      cljs.core.logic.t13906.cljs$lang$ctorStr = "cljs.core.logic/t13906";
      cljs.core.logic.t13906.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
        return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13906")
      };
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
      };
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(c, v, r, s) {
        var self__ = this;
        var c__$1 = this;
        if(cljs.core.not_EQ_.call(null, self__.p, self__.pform) && cljs.core.fn_QMARK_.call(null, self__.pform)) {
          return self__.pform.call(null, c__$1, v, r, s)
        }else {
          return self__.pform
        }
      };
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        if(cljs.core.seq_QMARK_.call(null, self__.pform)) {
          return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "predc", "cljs.core.logic/predc", 895622310, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
          cljs.core.List.EMPTY, 2008), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 24), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2008), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
          cljs.core.List.EMPTY, 29)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pform))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2008), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, 
          cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2008), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 37)))))
        }else {
          return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "predc", "cljs.core.logic/predc", 895622310, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2009), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
          cljs.core._conj.call(null, cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2009), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 44)))))
        }
      };
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x], null)
      };
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
      cljs.core.logic.t13906.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
        var self__ = this;
        var this$__$1 = this;
        if(typeof cljs.core.logic.t13909 !== "undefined") {
        }else {
          cljs.core.logic.t13909 = function(s, this$, meta13907, pform, p, x, _predc, meta13910) {
            this.s = s;
            this.this$ = this$;
            this.meta13907 = meta13907;
            this.pform = pform;
            this.p = p;
            this.x = x;
            this._predc = _predc;
            this.meta13910 = meta13910;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393217
          };
          cljs.core.logic.t13909.cljs$lang$type = true;
          cljs.core.logic.t13909.cljs$lang$ctorStr = "cljs.core.logic/t13909";
          cljs.core.logic.t13909.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
            return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13909")
          };
          cljs.core.logic.t13909.prototype.cljs$core$logic$protocols$IRunnable$ = true;
          cljs.core.logic.t13909.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return!cljs.core.logic.lvar_QMARK_.call(null, cljs.core.logic.protocols.walk.call(null, self__.s, self__.x))
          };
          cljs.core.logic.t13909.prototype.call = function(self__, s__$2) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var x__$3 = cljs.core.logic.protocols.walk.call(null, s__$2, self__.x);
            if(cljs.core.truth_(self__.p.call(null, x__$3))) {
              return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$2)
            }else {
              return null
            }
          };
          cljs.core.logic.t13909.prototype.apply = function(self__, args13912) {
            var self__ = this;
            var self____$1 = this;
            return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13912)))
          };
          cljs.core.logic.t13909.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
            var self__ = this;
            var _ = this;
            var x__$3 = cljs.core.logic.protocols.walk.call(null, s__$2, self__.x);
            if(cljs.core.truth_(self__.p.call(null, x__$3))) {
              return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$2)
            }else {
              return null
            }
          };
          cljs.core.logic.t13909.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13911) {
            var self__ = this;
            var _13911__$1 = this;
            return self__.meta13910
          };
          cljs.core.logic.t13909.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13911, meta13910__$1) {
            var self__ = this;
            var _13911__$1 = this;
            return new cljs.core.logic.t13909(self__.s, self__.this$, self__.meta13907, self__.pform, self__.p, self__.x, self__._predc, meta13910__$1)
          };
          cljs.core.logic.__GT_t13909 = function __GT_t13909(s__$1, this$__$2, meta13907__$1, pform__$2, p__$2, x__$2, _predc__$2, meta13910) {
            return new cljs.core.logic.t13909(s__$1, this$__$2, meta13907__$1, pform__$2, p__$2, x__$2, _predc__$2, meta13910)
          }
        }
        return new cljs.core.logic.t13909(s, this$__$1, self__.meta13907, self__.pform, self__.p, self__.x, self__._predc, null)
      };
      cljs.core.logic.t13906.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13908) {
        var self__ = this;
        var _13908__$1 = this;
        return self__.meta13907
      };
      cljs.core.logic.t13906.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13908, meta13907__$1) {
        var self__ = this;
        var _13908__$1 = this;
        return new cljs.core.logic.t13906(self__.pform, self__.p, self__.x, self__._predc, meta13907__$1)
      };
      cljs.core.logic.__GT_t13906 = function __GT_t13906(pform__$1, p__$1, x__$1, _predc__$1, meta13907) {
        return new cljs.core.logic.t13906(pform__$1, p__$1, x__$1, _predc__$1, meta13907)
      }
    }
    return new cljs.core.logic.t13906(pform, p, x, _predc, null)
  };
  _predc = function(x, p, pform) {
    switch(arguments.length) {
      case 2:
        return _predc__2.call(this, x, p);
      case 3:
        return _predc__3.call(this, x, p, pform)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _predc.cljs$core$IFn$_invoke$arity$2 = _predc__2;
  _predc.cljs$core$IFn$_invoke$arity$3 = _predc__3;
  return _predc
}();
cljs.core.logic.predc = function() {
  var predc = null;
  var predc__2 = function(x, p) {
    return predc.call(null, x, p, p)
  };
  var predc__3 = function(x, p, pform) {
    return cljs.core.logic.cgoal.call(null, cljs.core.logic._predc.call(null, x, p, pform))
  };
  predc = function(x, p, pform) {
    switch(arguments.length) {
      case 2:
        return predc__2.call(this, x, p);
      case 3:
        return predc__3.call(this, x, p, pform)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  predc.cljs$core$IFn$_invoke$arity$2 = predc__2;
  predc.cljs$core$IFn$_invoke$arity$3 = predc__3;
  return predc
}();
cljs.core.logic.tramp = function tramp(f) {
  var f__$1 = f;
  while(true) {
    if(cljs.core.fn_QMARK_.call(null, f__$1)) {
      var G__13913 = f__$1.call(null);
      f__$1 = G__13913;
      continue
    }else {
      return f__$1
    }
    break
  }
};
cljs.core.logic._nafc = function _nafc(c, args) {
  if(typeof cljs.core.logic.t13922 !== "undefined") {
  }else {
    cljs.core.logic.t13922 = function(args, c, _nafc, meta13923) {
      this.args = args;
      this.c = c;
      this._nafc = _nafc;
      this.meta13923 = meta13923;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.t13922.cljs$lang$type = true;
    cljs.core.logic.t13922.cljs$lang$ctorStr = "cljs.core.logic/t13922";
    cljs.core.logic.t13922.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13922")
    };
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(_, v, r, s) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "nafc", "cljs.core.logic/nafc", 1019102320, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 2051), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 12), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2051), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 16)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.c), cljs.core.logic._reify.call(null, s, self__.args, r))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2051), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", 
      "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 11), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2051), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 40)))))
    };
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "nafc", "cljs.core.logic/nafc", 1019102320, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2047), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2047), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 41)))))
    };
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.vec.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.c], null), self__.args))
    };
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.t13922.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      if(typeof cljs.core.logic.t13925 !== "undefined") {
      }else {
        cljs.core.logic.t13925 = function(s, this$, meta13923, args, c, _nafc, meta13926) {
          this.s = s;
          this.this$ = this$;
          this.meta13923 = meta13923;
          this.args = args;
          this.c = c;
          this._nafc = _nafc;
          this.meta13926 = meta13926;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.t13925.cljs$lang$type = true;
        cljs.core.logic.t13925.cljs$lang$ctorStr = "cljs.core.logic/t13925";
        cljs.core.logic.t13925.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13925")
        };
        cljs.core.logic.t13925.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.t13925.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.every_QMARK_.call(null, function(p1__13914_SHARP_) {
            return cljs.core.logic.ground_term_QMARK_.call(null, p1__13914_SHARP_, self__.s)
          }, self__.args)
        };
        cljs.core.logic.t13925.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          if(cljs.core.truth_(cljs.core.logic.tramp.call(null, cljs.core.apply.call(null, self__.c, self__.args).call(null, s__$2)))) {
            return null
          }else {
            return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$2)
          }
        };
        cljs.core.logic.t13925.prototype.apply = function(self__, args13928) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13928)))
        };
        cljs.core.logic.t13925.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          if(cljs.core.truth_(cljs.core.logic.tramp.call(null, cljs.core.apply.call(null, self__.c, self__.args).call(null, s__$2)))) {
            return null
          }else {
            return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$2)
          }
        };
        cljs.core.logic.t13925.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13927) {
          var self__ = this;
          var _13927__$1 = this;
          return self__.meta13926
        };
        cljs.core.logic.t13925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13927, meta13926__$1) {
          var self__ = this;
          var _13927__$1 = this;
          return new cljs.core.logic.t13925(self__.s, self__.this$, self__.meta13923, self__.args, self__.c, self__._nafc, meta13926__$1)
        };
        cljs.core.logic.__GT_t13925 = function __GT_t13925(s__$1, this$__$2, meta13923__$1, args__$2, c__$2, _nafc__$2, meta13926) {
          return new cljs.core.logic.t13925(s__$1, this$__$2, meta13923__$1, args__$2, c__$2, _nafc__$2, meta13926)
        }
      }
      return new cljs.core.logic.t13925(s, this$__$1, self__.meta13923, self__.args, self__.c, self__._nafc, null)
    };
    cljs.core.logic.t13922.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13924) {
      var self__ = this;
      var _13924__$1 = this;
      return self__.meta13923
    };
    cljs.core.logic.t13922.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13924, meta13923__$1) {
      var self__ = this;
      var _13924__$1 = this;
      return new cljs.core.logic.t13922(self__.args, self__.c, self__._nafc, meta13923__$1)
    };
    cljs.core.logic.__GT_t13922 = function __GT_t13922(args__$1, c__$1, _nafc__$1, meta13923) {
      return new cljs.core.logic.t13922(args__$1, c__$1, _nafc__$1, meta13923)
    }
  }
  return new cljs.core.logic.t13922(args, c, _nafc, null)
};
cljs.core.logic.nafc = function() {
  var nafc__delegate = function(c, args) {
    return cljs.core.logic.cgoal.call(null, cljs.core.logic._nafc.call(null, c, args))
  };
  var nafc = function(c, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return nafc__delegate.call(this, c, args)
  };
  nafc.cljs$lang$maxFixedArity = 1;
  nafc.cljs$lang$applyTo = function(arglist__13929) {
    var c = cljs.core.first(arglist__13929);
    var args = cljs.core.rest(arglist__13929);
    return nafc__delegate(c, args)
  };
  nafc.cljs$core$IFn$_invoke$arity$variadic = nafc__delegate;
  return nafc
}();
cljs.core.logic.protocols.IConstrainTree["_"] = true;
cljs.core.logic.protocols._constrain_tree["_"] = function(t, fc, s) {
  if(cljs.core.sequential_QMARK_.call(null, t)) {
    var t__$1 = cljs.core.seq.call(null, t);
    var s__$1 = s;
    while(true) {
      if(t__$1) {
        var temp__4094__auto__ = fc.call(null, cljs.core.first.call(null, t__$1), s__$1);
        if(cljs.core.truth_(temp__4094__auto__)) {
          var s__$2 = temp__4094__auto__;
          var G__13931 = cljs.core.next.call(null, t__$1);
          var G__13932 = s__$2;
          t__$1 = G__13931;
          s__$1 = G__13932;
          continue
        }else {
          return null
        }
      }else {
        return s__$1
      }
      break
    }
  }else {
    if(cljs.core.map_QMARK_.call(null, t)) {
      var t__$1 = cljs.core.seq.call(null, t);
      var s__$1 = s;
      while(true) {
        if(t__$1) {
          var vec__13930 = cljs.core.first.call(null, t__$1);
          var _ = cljs.core.nth.call(null, vec__13930, 0, null);
          var v = cljs.core.nth.call(null, vec__13930, 1, null);
          var s__$2 = fc.call(null, v, s__$1);
          if(cljs.core.truth_(s__$2)) {
            var G__13933 = cljs.core.next.call(null, t__$1);
            var G__13934 = s__$2;
            t__$1 = G__13933;
            s__$1 = G__13934;
            continue
          }else {
            return null
          }
        }else {
          return s__$1
        }
        break
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IConstrainTree$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$protocols$IConstrainTree$_constrain_tree$arity$3 = function(t, fc, s) {
  var t__$1 = this;
  var t__$2 = t__$1;
  var s__$1 = s;
  while(true) {
    if(cljs.core.logic.lvar_QMARK_.call(null, t__$2)) {
      return fc.call(null, t__$2, s__$1)
    }else {
      var temp__4094__auto__ = fc.call(null, cljs.core.logic.protocols.lfirst.call(null, t__$2), s__$1);
      if(cljs.core.truth_(temp__4094__auto__)) {
        var s__$2 = temp__4094__auto__;
        var G__13935 = cljs.core.logic.protocols.lnext.call(null, t__$2);
        var G__13936 = s__$2;
        t__$2 = G__13935;
        s__$1 = G__13936;
        continue
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.logic.constrain_tree = function constrain_tree(t, fc) {
  return function(a) {
    return cljs.core.logic.protocols._constrain_tree.call(null, t, fc, a)
  }
};
cljs.core.logic._fixc = function() {
  var _fixc = null;
  var _fixc__3 = function(x, f, reifier) {
    return _fixc.call(null, x, f, null, reifier)
  };
  var _fixc__4 = function(x, f, runnable, reifier) {
    if(typeof cljs.core.logic.t13944 !== "undefined") {
    }else {
      cljs.core.logic.t13944 = function(reifier, runnable, f, x, _fixc, meta13945) {
        this.reifier = reifier;
        this.runnable = runnable;
        this.f = f;
        this.x = x;
        this._fixc = _fixc;
        this.meta13945 = meta13945;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.logic.t13944.cljs$lang$type = true;
      cljs.core.logic.t13944.cljs$lang$ctorStr = "cljs.core.logic/t13944";
      cljs.core.logic.t13944.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
        return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13944")
      };
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
      };
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(c, v, r, s) {
        var self__ = this;
        var c__$1 = this;
        if(cljs.core.fn_QMARK_.call(null, self__.reifier)) {
          return self__.reifier.call(null, c__$1, self__.x, v, r, s)
        }else {
          var x__$2 = cljs.core.logic.walk_STAR_.call(null, r, self__.x);
          return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "fixc", "cljs.core.logic/fixc", 1018347826, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
          cljs.core.List.EMPTY, 2122), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 16), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2122), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
          cljs.core.List.EMPTY, 20)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, x__$2), cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.reifier))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2122), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
          "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 15), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2122), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 33)))))
        }
      };
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "fixc", "cljs.core.logic/fixc", 1018347826, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2115), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2115), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 41)))))
      };
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        if(cljs.core.vector_QMARK_.call(null, self__.x)) {
          return self__.x
        }else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x], null)
        }
      };
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
      cljs.core.logic.t13944.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
        var self__ = this;
        var this$__$1 = this;
        var xv = cljs.core.logic.protocols.walk.call(null, s, self__.x);
        if(typeof cljs.core.logic.t13947 !== "undefined") {
        }else {
          cljs.core.logic.t13947 = function(xv, s, this$, meta13945, reifier, runnable, f, x, _fixc, meta13948) {
            this.xv = xv;
            this.s = s;
            this.this$ = this$;
            this.meta13945 = meta13945;
            this.reifier = reifier;
            this.runnable = runnable;
            this.f = f;
            this.x = x;
            this._fixc = _fixc;
            this.meta13948 = meta13948;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393217
          };
          cljs.core.logic.t13947.cljs$lang$type = true;
          cljs.core.logic.t13947.cljs$lang$ctorStr = "cljs.core.logic/t13947";
          cljs.core.logic.t13947.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
            return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic/t13947")
          };
          cljs.core.logic.t13947.prototype.cljs$core$logic$protocols$IRunnable$ = true;
          cljs.core.logic.t13947.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            if(cljs.core.fn_QMARK_.call(null, self__.runnable)) {
              return self__.runnable.call(null, self__.x, self__.s)
            }else {
              return!cljs.core.logic.lvar_QMARK_.call(null, self__.xv)
            }
          };
          cljs.core.logic.t13947.prototype.call = function(self__, s__$2) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.logic.composeg.call(null, self__.f.call(null, self__.xv, s__$2, self__.reifier), cljs.core.logic.remcg.call(null, self__.this$)).call(null, s__$2)
          };
          cljs.core.logic.t13947.prototype.apply = function(self__, args13950) {
            var self__ = this;
            var self____$1 = this;
            return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13950)))
          };
          cljs.core.logic.t13947.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
            var self__ = this;
            var _ = this;
            return cljs.core.logic.composeg.call(null, self__.f.call(null, self__.xv, s__$2, self__.reifier), cljs.core.logic.remcg.call(null, self__.this$)).call(null, s__$2)
          };
          cljs.core.logic.t13947.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13949) {
            var self__ = this;
            var _13949__$1 = this;
            return self__.meta13948
          };
          cljs.core.logic.t13947.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13949, meta13948__$1) {
            var self__ = this;
            var _13949__$1 = this;
            return new cljs.core.logic.t13947(self__.xv, self__.s, self__.this$, self__.meta13945, self__.reifier, self__.runnable, self__.f, self__.x, self__._fixc, meta13948__$1)
          };
          cljs.core.logic.__GT_t13947 = function __GT_t13947(xv__$1, s__$1, this$__$2, meta13945__$1, reifier__$2, runnable__$2, f__$2, x__$2, _fixc__$2, meta13948) {
            return new cljs.core.logic.t13947(xv__$1, s__$1, this$__$2, meta13945__$1, reifier__$2, runnable__$2, f__$2, x__$2, _fixc__$2, meta13948)
          }
        }
        return new cljs.core.logic.t13947(xv, s, this$__$1, self__.meta13945, self__.reifier, self__.runnable, self__.f, self__.x, self__._fixc, null)
      };
      cljs.core.logic.t13944.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13946) {
        var self__ = this;
        var _13946__$1 = this;
        return self__.meta13945
      };
      cljs.core.logic.t13944.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13946, meta13945__$1) {
        var self__ = this;
        var _13946__$1 = this;
        return new cljs.core.logic.t13944(self__.reifier, self__.runnable, self__.f, self__.x, self__._fixc, meta13945__$1)
      };
      cljs.core.logic.__GT_t13944 = function __GT_t13944(reifier__$1, runnable__$1, f__$1, x__$1, _fixc__$1, meta13945) {
        return new cljs.core.logic.t13944(reifier__$1, runnable__$1, f__$1, x__$1, _fixc__$1, meta13945)
      }
    }
    return new cljs.core.logic.t13944(reifier, runnable, f, x, _fixc, null)
  };
  _fixc = function(x, f, runnable, reifier) {
    switch(arguments.length) {
      case 3:
        return _fixc__3.call(this, x, f, runnable);
      case 4:
        return _fixc__4.call(this, x, f, runnable, reifier)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _fixc.cljs$core$IFn$_invoke$arity$3 = _fixc__3;
  _fixc.cljs$core$IFn$_invoke$arity$4 = _fixc__4;
  return _fixc
}();
cljs.core.logic.fixc = function() {
  var fixc = null;
  var fixc__3 = function(x, f, reifier) {
    return fixc.call(null, x, f, null, reifier)
  };
  var fixc__4 = function(x, f, runnable, reifier) {
    return cljs.core.logic.cgoal.call(null, cljs.core.logic._fixc.call(null, x, f, runnable, reifier))
  };
  fixc = function(x, f, runnable, reifier) {
    switch(arguments.length) {
      case 3:
        return fixc__3.call(this, x, f, runnable);
      case 4:
        return fixc__4.call(this, x, f, runnable, reifier)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fixc.cljs$core$IFn$_invoke$arity$3 = fixc__3;
  fixc.cljs$core$IFn$_invoke$arity$4 = fixc__4;
  return fixc
}();
cljs.core.logic.treec = function treec(x, fc, reifier) {
  return cljs.core.logic.fixc.call(null, x, function loop(t, a, reifier__$1) {
    if(cljs.core.logic.tree_term_QMARK_.call(null, t)) {
      return cljs.core.logic.composeg.call(null, fc.call(null, t), cljs.core.logic.constrain_tree.call(null, t, function(t__$1, a__$1) {
        return cljs.core.logic.fixc.call(null, t__$1, loop, reifier__$1).call(null, a__$1)
      }))
    }else {
      return fc.call(null, t)
    }
  }, reifier)
};
cljs.core.logic.seqc = function seqc(v) {
  return cljs.core.logic.fixc.call(null, v, function(t, _, ___$1) {
    if(cljs.core.sequential_QMARK_.call(null, t)) {
      return cljs.core.logic.succeed
    }else {
      if(cljs.core.logic.lcons_QMARK_.call(null, t)) {
        return seqc.call(null, cljs.core.logic.protocols.lnext.call(null, t))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.logic.fail
        }else {
          return null
        }
      }
    }
  }, function(_, v__$1, ___$1, r, a) {
    return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic", "seqc", "cljs.core.logic/seqc", 1018702372, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    2149), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 13), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2149), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    17)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.logic._reify.call(null, a, v__$1, r)))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2149), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, 
    cljs.core.List.EMPTY, 12), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 2149), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 34)))))
  })
};
goog.provide("cljs.core.logic.fd");
goog.require("cljs.core");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.protocols");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("clojure.set");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic.protocols");
cljs.core.logic.fd.IInterval = function() {
  var obj13151 = {};
  return obj13151
}();
cljs.core.logic.fd._lb = function _lb(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$IInterval$_lb$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$IInterval$_lb$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._lb[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._lb["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IInterval.-lb", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.fd._ub = function _ub(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$IInterval$_ub$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$IInterval$_ub$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._ub[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._ub["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IInterval.-ub", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.fd.IIntervals = function() {
  var obj13153 = {};
  return obj13153
}();
cljs.core.logic.fd._intervals = function _intervals(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$IIntervals$_intervals$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$IIntervals$_intervals$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._intervals[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._intervals["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IIntervals.-intervals", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.fd.ISortedDomain = function() {
  var obj13155 = {};
  return obj13155
}();
cljs.core.logic.fd._drop_one = function _drop_one(this$) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISortedDomain$_drop_one$arity$1
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISortedDomain$_drop_one$arity$1(this$)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._drop_one[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._drop_one["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISortedDomain.-drop-one", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.fd._drop_before = function _drop_before(this$, n) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISortedDomain$_drop_before$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISortedDomain$_drop_before$arity$2(this$, n)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._drop_before[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._drop_before["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISortedDomain.-drop-before", this$);
        }
      }
    }().call(null, this$, n)
  }
};
cljs.core.logic.fd._keep_before = function _keep_before(this$, n) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISortedDomain$_keep_before$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISortedDomain$_keep_before$arity$2(this$, n)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._keep_before[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._keep_before["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISortedDomain.-keep-before", this$);
        }
      }
    }().call(null, this$, n)
  }
};
cljs.core.logic.fd.ISet = function() {
  var obj13157 = {};
  return obj13157
}();
cljs.core.logic.fd._member_QMARK_ = function _member_QMARK_(this$, n) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISet$_member_QMARK_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISet$_member_QMARK_$arity$2(this$, n)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._member_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._member_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-member?", this$);
        }
      }
    }().call(null, this$, n)
  }
};
cljs.core.logic.fd._disjoint_QMARK_ = function _disjoint_QMARK_(this$, that) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISet$_disjoint_QMARK_$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISet$_disjoint_QMARK_$arity$2(this$, that)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._disjoint_QMARK_[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._disjoint_QMARK_["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoint?", this$);
        }
      }
    }().call(null, this$, that)
  }
};
cljs.core.logic.fd._intersection = function _intersection(this$, that) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISet$_intersection$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISet$_intersection$arity$2(this$, that)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._intersection[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._intersection["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-intersection", this$);
        }
      }
    }().call(null, this$, that)
  }
};
cljs.core.logic.fd._difference = function _difference(this$, that) {
  if(function() {
    var and__9129__auto__ = this$;
    if(and__9129__auto__) {
      return this$.cljs$core$logic$fd$ISet$_difference$arity$2
    }else {
      return and__9129__auto__
    }
  }()) {
    return this$.cljs$core$logic$fd$ISet$_difference$arity$2(this$, that)
  }else {
    var x__9739__auto__ = this$ == null ? null : this$;
    return function() {
      var or__9141__auto__ = cljs.core.logic.fd._difference[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.fd._difference["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-difference", this$);
        }
      }
    }().call(null, this$, that)
  }
};
cljs.core.logic.fd.bounds = function bounds(i) {
  return cljs.core.logic.pair.call(null, cljs.core.logic.fd._lb.call(null, i), cljs.core.logic.fd._ub.call(null, i))
};
cljs.core.logic.fd.interval__LT_ = function interval__LT_(i, j) {
  return cljs.core.logic.fd._ub.call(null, i) < cljs.core.logic.fd._lb.call(null, j)
};
cljs.core.logic.fd.interval__LT__EQ_ = function interval__LT__EQ_(i, j) {
  return cljs.core.logic.fd._ub.call(null, i) <= cljs.core.logic.fd._lb.call(null, j)
};
cljs.core.logic.fd.interval__GT_ = function interval__GT_(i, j) {
  return cljs.core.logic.fd._lb.call(null, i) > cljs.core.logic.fd._ub.call(null, j)
};
cljs.core.logic.fd.interval__GT__EQ_ = function interval__GT__EQ_(i, j) {
  return cljs.core.logic.fd._lb.call(null, i) >= cljs.core.logic.fd._ub.call(null, j)
};
cljs.core.logic.fd.FiniteDomain = function(s, min, max) {
  this.s = s;
  this.min = min;
  this.max = max;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2149581056
};
cljs.core.logic.fd.FiniteDomain.cljs$lang$type = true;
cljs.core.logic.fd.FiniteDomain.cljs$lang$ctorStr = "cljs.core.logic.fd/FiniteDomain";
cljs.core.logic.fd.FiniteDomain.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/FiniteDomain")
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("\x3cdomain:"), cljs.core.str(cljs.core.seq.call(null, (new cljs.core.Keyword(null, "s", "s", 1013904357)).cljs$core$IFn$_invoke$arity$1(x__$1))), cljs.core.str("\x3e")].join(""))
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$protocols$IMergeDomains$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$protocols$IMergeDomains$_merge_doms$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.fd._intersection.call(null, this$__$1, that)
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$IIntervals$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$IIntervals$_intervals$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, self__.s)
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISet$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISet$_member_QMARK_$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(self__.s.call(null, n))) {
    return true
  }else {
    return false
  }
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISet$_disjoint_QMARK_$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.integer_QMARK_.call(null, that)) {
    if(cljs.core.truth_(self__.s.call(null, that))) {
      return false
    }else {
      return true
    }
  }else {
    if(that instanceof cljs.core.logic.fd.FiniteDomain) {
      if(self__.max < (new cljs.core.Keyword(null, "min", "min", 1014012356)).cljs$core$IFn$_invoke$arity$1(that)) {
        return true
      }else {
        if(self__.min > (new cljs.core.Keyword(null, "max", "max", 1014012118)).cljs$core$IFn$_invoke$arity$1(that)) {
          return true
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.empty_QMARK_.call(null, clojure.set.intersection.call(null, self__.s, (new cljs.core.Keyword(null, "s", "s", 1013904357)).cljs$core$IFn$_invoke$arity$1(that)))
          }else {
            return null
          }
        }
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.disjoint_QMARK__STAR_.call(null, this$__$1, that)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISet$_intersection$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.integer_QMARK_.call(null, that)) {
    if(cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, this$__$1, that))) {
      return that
    }else {
      return null
    }
  }else {
    if(that instanceof cljs.core.logic.fd.FiniteDomain) {
      return cljs.core.logic.fd.sorted_set__GT_domain.call(null, clojure.set.intersection.call(null, self__.s, (new cljs.core.Keyword(null, "s", "s", 1013904357)).cljs$core$IFn$_invoke$arity$1(that)))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.intersection_STAR_.call(null, this$__$1, that)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISet$_difference$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.integer_QMARK_.call(null, that)) {
    return cljs.core.logic.fd.sorted_set__GT_domain.call(null, cljs.core.disj.call(null, self__.s, that))
  }else {
    if(that instanceof cljs.core.logic.fd.FiniteDomain) {
      return cljs.core.logic.fd.sorted_set__GT_domain.call(null, clojure.set.difference.call(null, self__.s, (new cljs.core.Keyword(null, "s", "s", 1013904357)).cljs$core$IFn$_invoke$arity$1(that)))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.difference_STAR_.call(null, this$__$1, that)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISortedDomain$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISortedDomain$_drop_one$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var s__$1 = cljs.core.disj.call(null, self__.s, self__.min);
  var c = cljs.core.count.call(null, s__$1);
  if(cljs.core._EQ_.call(null, c, 1)) {
    return cljs.core.first.call(null, s__$1)
  }else {
    if(c > 1) {
      return new cljs.core.logic.fd.FiniteDomain(s__$1, cljs.core.first.call(null, s__$1), self__.max)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISortedDomain$_drop_before$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.apply.call(null, cljs.core.logic.fd.domain, cljs.core.drop_while.call(null, function(p1__13158_SHARP_) {
    return p1__13158_SHARP_ < n
  }, self__.s))
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$ISortedDomain$_keep_before$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.apply.call(null, cljs.core.logic.fd.domain, cljs.core.take_while.call(null, function(p1__13159_SHARP_) {
    return p1__13159_SHARP_ < n
  }, self__.s))
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$IInterval$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$IInterval$_lb$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.min
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$fd$IInterval$_ub$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.max
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$protocols$IMemberCount$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$protocols$IMemberCount$_member_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.count.call(null, self__.s)
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13160 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "max", "max", 1014012118), G__13160)) {
    return self__.max
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "min", "min", 1014012356), G__13160)) {
      return self__.min
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "s", "s", 1013904357), G__13160)) {
        return self__.s
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.fd.finite_domain_QMARK_.call(null, that))) {
    if(cljs.core._EQ_.call(null, cljs.core.logic.protocols._member_count.call(null, this$__$1), cljs.core.logic.protocols._member_count.call(null, that))) {
      return cljs.core._EQ_.call(null, self__.s, (new cljs.core.Keyword(null, "s", "s", 1013904357)).cljs$core$IFn$_invoke$arity$1(that))
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.logic.fd.__GT_FiniteDomain = function __GT_FiniteDomain(s, min, max) {
  return new cljs.core.logic.fd.FiniteDomain(s, min, max)
};
cljs.core.logic.fd.finite_domain_QMARK_ = function finite_domain_QMARK_(x) {
  return x instanceof cljs.core.logic.fd.FiniteDomain
};
cljs.core.logic.fd.sorted_set__GT_domain = function sorted_set__GT_domain(s) {
  var c = cljs.core.count.call(null, s);
  if(c === 0) {
    return null
  }else {
    if(cljs.core._EQ_.call(null, c, 1)) {
      return cljs.core.first.call(null, s)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.logic.fd.FiniteDomain(s, cljs.core.first.call(null, s), cljs.core.first.call(null, cljs.core.rseq.call(null, s)))
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.domain = function() {
  var domain__delegate = function(args) {
    if(cljs.core.seq.call(null, args)) {
      return cljs.core.logic.fd.sorted_set__GT_domain.call(null, cljs.core.into.call(null, cljs.core.sorted_set.call(null), args))
    }else {
      return null
    }
  };
  var domain = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return domain__delegate.call(this, args)
  };
  domain.cljs$lang$maxFixedArity = 0;
  domain.cljs$lang$applyTo = function(arglist__13161) {
    var args = cljs.core.seq(arglist__13161);
    return domain__delegate(args)
  };
  domain.cljs$core$IFn$_invoke$arity$variadic = domain__delegate;
  return domain
}();
cljs.core.logic.fd.IIntervals["number"] = true;
cljs.core.logic.fd._intervals["number"] = function(this__8877__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, this__8877__auto__)
};
cljs.core.logic.fd.ISet["number"] = true;
cljs.core.logic.fd._member_QMARK_["number"] = function(this__8877__auto__, that__8879__auto__) {
  if(cljs.core.integer_QMARK_.call(null, that__8879__auto__)) {
    return this__8877__auto__ === that__8879__auto__
  }else {
    return cljs.core.logic.fd._member_QMARK_.call(null, that__8879__auto__, this__8877__auto__)
  }
};
cljs.core.logic.fd._disjoint_QMARK_["number"] = function(this__8877__auto__, that__8879__auto__) {
  if(cljs.core.integer_QMARK_.call(null, that__8879__auto__)) {
    return!(this__8877__auto__ === that__8879__auto__)
  }else {
    return cljs.core.logic.fd._disjoint_QMARK_.call(null, that__8879__auto__, this__8877__auto__)
  }
};
cljs.core.logic.fd._intersection["number"] = function(this__8877__auto__, that__8879__auto__) {
  if(cljs.core.integer_QMARK_.call(null, that__8879__auto__)) {
    if(this__8877__auto__ === that__8879__auto__) {
      return this__8877__auto__
    }else {
      return null
    }
  }else {
    if(cljs.core.truth_(cljs.core.logic.fd.interval_QMARK_.call(null, that__8879__auto__))) {
      return cljs.core.logic.fd._intersection.call(null, that__8879__auto__, this__8877__auto__)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.intersection_STAR_.call(null, this__8877__auto__, that__8879__auto__)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd._difference["number"] = function(this__8877__auto__, that__8879__auto__) {
  if(cljs.core.integer_QMARK_.call(null, that__8879__auto__)) {
    if(this__8877__auto__ === that__8879__auto__) {
      return null
    }else {
      return this__8877__auto__
    }
  }else {
    if(cljs.core.truth_(cljs.core.logic.fd.interval_QMARK_.call(null, that__8879__auto__))) {
      return cljs.core.logic.fd._difference.call(null, that__8879__auto__, this__8877__auto__)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.difference_STAR_.call(null, this__8877__auto__, that__8879__auto__)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.ISortedDomain["number"] = true;
cljs.core.logic.fd._drop_one["number"] = function(this__8877__auto__) {
  return null
};
cljs.core.logic.fd._drop_before["number"] = function(this__8877__auto__, n__8878__auto__) {
  if(this__8877__auto__ >= n__8878__auto__) {
    return this__8877__auto__
  }else {
    return null
  }
};
cljs.core.logic.fd._keep_before["number"] = function(this__8877__auto__, n__8878__auto__) {
  if(this__8877__auto__ < n__8878__auto__) {
    return this__8877__auto__
  }else {
    return null
  }
};
cljs.core.logic.fd.IInterval["number"] = true;
cljs.core.logic.fd._lb["number"] = function(this__8877__auto__) {
  return this__8877__auto__
};
cljs.core.logic.fd._ub["number"] = function(this__8877__auto__) {
  return this__8877__auto__
};
cljs.core.logic.protocols.IMemberCount["number"] = true;
cljs.core.logic.protocols._member_count["number"] = function(this__8877__auto__) {
  return 1
};
cljs.core.logic.fd.IntervalFD = function(lb, ub) {
  this.lb = lb;
  this.ub = ub;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2149580800
};
cljs.core.logic.fd.IntervalFD.cljs$lang$type = true;
cljs.core.logic.fd.IntervalFD.cljs$lang$ctorStr = "cljs.core.logic.fd/IntervalFD";
cljs.core.logic.fd.IntervalFD.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/IntervalFD")
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("\x3cinterval:"), cljs.core.str(cljs.core.logic.fd._lb.call(null, x__$1)), cljs.core.str(".."), cljs.core.str(cljs.core.logic.fd._ub.call(null, x__$1)), cljs.core.str("\x3e")].join(""))
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$protocols$IMergeDomains$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$protocols$IMergeDomains$_merge_doms$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.fd._intersection.call(null, this$__$1, that)
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$IIntervals$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$IIntervals$_intervals$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, this$__$1)
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISet$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISet$_member_QMARK_$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return n >= self__.lb && n <= self__.ub
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISet$_disjoint_QMARK_$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.integer_QMARK_.call(null, that)) {
    return cljs.core.not.call(null, cljs.core.logic.fd._member_QMARK_.call(null, this$__$1, that))
  }else {
    if(cljs.core.truth_(cljs.core.logic.fd.interval_QMARK_.call(null, that))) {
      var i = this$__$1;
      var j = that;
      var vec__13162 = cljs.core.logic.fd.bounds.call(null, i);
      var imin = cljs.core.nth.call(null, vec__13162, 0, null);
      var imax = cljs.core.nth.call(null, vec__13162, 1, null);
      var vec__13163 = cljs.core.logic.fd.bounds.call(null, j);
      var jmin = cljs.core.nth.call(null, vec__13163, 0, null);
      var jmax = cljs.core.nth.call(null, vec__13163, 1, null);
      return imin > jmax || imax < jmin
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.disjoint_QMARK__STAR_.call(null, this$__$1, that)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISet$_intersection$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.integer_QMARK_.call(null, that)) {
    if(cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, this$__$1, that))) {
      return that
    }else {
      return null
    }
  }else {
    if(cljs.core.truth_(cljs.core.logic.fd.interval_QMARK_.call(null, that))) {
      var i = this$__$1;
      var j = that;
      var imin = cljs.core.logic.fd._lb.call(null, i);
      var imax = cljs.core.logic.fd._ub.call(null, i);
      var jmin = cljs.core.logic.fd._lb.call(null, j);
      var jmax = cljs.core.logic.fd._ub.call(null, j);
      if(imax < jmin) {
        return null
      }else {
        if(jmax < imin) {
          return null
        }else {
          if(imin <= jmin && imax >= jmax) {
            return j
          }else {
            if(jmin <= imin && jmax >= imax) {
              return i
            }else {
              if(imin <= jmin && imax <= jmax) {
                return cljs.core.logic.fd.interval.call(null, jmin, imax)
              }else {
                if(jmin <= imin && jmax <= imax) {
                  return cljs.core.logic.fd.interval.call(null, imin, jmax)
                }else {
                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.ex_info.call(null, [cljs.core.str("Interval intersection not defined "), cljs.core.str(i), cljs.core.str(" "), cljs.core.str(j)].join(""), cljs.core.PersistentArrayMap.EMPTY);
                  }else {
                    return null
                  }
                }
              }
            }
          }
        }
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.intersection_STAR_.call(null, this$__$1, that)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISet$_difference$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.integer_QMARK_.call(null, that)) {
    if(cljs.core._EQ_.call(null, self__.lb, that)) {
      return cljs.core.logic.fd.interval.call(null, self__.lb + 1, self__.ub)
    }else {
      if(cljs.core._EQ_.call(null, self__.ub, that)) {
        return cljs.core.logic.fd.interval.call(null, self__.lb, self__.ub - 1)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          if(cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, this$__$1, that))) {
            return cljs.core.logic.fd.multi_interval.call(null, cljs.core.logic.fd.interval.call(null, self__.lb, that - 1), cljs.core.logic.fd.interval.call(null, that + 1, self__.ub))
          }else {
            return this$__$1
          }
        }else {
          return null
        }
      }
    }
  }else {
    if(cljs.core.truth_(cljs.core.logic.fd.interval_QMARK_.call(null, that))) {
      var i = this$__$1;
      var j = that;
      var imin = cljs.core.logic.fd._lb.call(null, i);
      var imax = cljs.core.logic.fd._ub.call(null, i);
      var jmin = cljs.core.logic.fd._lb.call(null, j);
      var jmax = cljs.core.logic.fd._ub.call(null, j);
      if(jmin > imax) {
        return i
      }else {
        if(jmin <= imin && jmax >= imax) {
          return null
        }else {
          if(imin < jmin && imax > jmax) {
            return cljs.core.logic.fd.multi_interval.call(null, cljs.core.logic.fd.interval.call(null, imin, jmin - 1), cljs.core.logic.fd.interval.call(null, jmax + 1, imax))
          }else {
            if(imin < jmin && jmin <= imax) {
              return cljs.core.logic.fd.interval.call(null, imin, jmin - 1)
            }else {
              if(imax > jmax && jmin <= imin) {
                return cljs.core.logic.fd.interval.call(null, jmax + 1, imax)
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.ex_info.call(null, [cljs.core.str("Interval difference not defined "), cljs.core.str(i), cljs.core.str(" "), cljs.core.str(j)].join(""), cljs.core.PersistentArrayMap.EMPTY);
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.difference_STAR_.call(null, this$__$1, that)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$_drop_one$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var nlb = self__.lb + 1;
  if(nlb <= self__.ub) {
    return cljs.core.logic.fd.interval.call(null, nlb, self__.ub)
  }else {
    return null
  }
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$_drop_before$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core._EQ_.call(null, n, self__.ub)) {
    return n
  }else {
    if(n < self__.lb) {
      return this$__$1
    }else {
      if(n > self__.ub) {
        return null
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.logic.fd.interval.call(null, n, self__.ub)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$_keep_before$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if(n <= self__.lb) {
    return null
  }else {
    if(n > self__.ub) {
      return this$__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.logic.fd.interval.call(null, self__.lb, n - 1)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$IInterval$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$IInterval$_lb$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.lb
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$fd$IInterval$_ub$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ub
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$protocols$IMemberCount$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$protocols$IMemberCount$_member_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.ub - self__.lb + 1
};
cljs.core.logic.fd.IntervalFD.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str.call(null, this$)
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if(o instanceof cljs.core.logic.fd.IntervalFD) {
    return cljs.core._EQ_.call(null, self__.lb, cljs.core.logic.fd._lb.call(null, o)) && cljs.core._EQ_.call(null, self__.ub, cljs.core.logic.fd._ub.call(null, o))
  }else {
    return false
  }
};
cljs.core.logic.fd.__GT_IntervalFD = function __GT_IntervalFD(lb, ub) {
  return new cljs.core.logic.fd.IntervalFD(lb, ub)
};
cljs.core.logic.fd.interval_QMARK_ = function interval_QMARK_(x) {
  return x instanceof cljs.core.logic.fd.IntervalFD
};
cljs.core.logic.fd.interval = function() {
  var interval = null;
  var interval__1 = function(ub) {
    return new cljs.core.logic.fd.IntervalFD(0, ub)
  };
  var interval__2 = function(lb, ub) {
    if(ub - lb === 0) {
      return ub
    }else {
      return new cljs.core.logic.fd.IntervalFD(lb, ub)
    }
  };
  interval = function(lb, ub) {
    switch(arguments.length) {
      case 1:
        return interval__1.call(this, lb);
      case 2:
        return interval__2.call(this, lb, ub)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interval.cljs$core$IFn$_invoke$arity$1 = interval__1;
  interval.cljs$core$IFn$_invoke$arity$2 = interval__2;
  return interval
}();
cljs.core.logic.fd.intersection_STAR_ = function intersection_STAR_(is, js) {
  var is__$1 = cljs.core.seq.call(null, cljs.core.logic.fd._intervals.call(null, is));
  var js__$1 = cljs.core.seq.call(null, cljs.core.logic.fd._intervals.call(null, js));
  var r = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(is__$1 && js__$1) {
      var i = cljs.core.first.call(null, is__$1);
      var j = cljs.core.first.call(null, js__$1);
      if(cljs.core.logic.fd.interval__LT_.call(null, i, j)) {
        var G__13168 = cljs.core.next.call(null, is__$1);
        var G__13169 = js__$1;
        var G__13170 = r;
        is__$1 = G__13168;
        js__$1 = G__13169;
        r = G__13170;
        continue
      }else {
        if(cljs.core.logic.fd.interval__GT_.call(null, i, j)) {
          var G__13171 = is__$1;
          var G__13172 = cljs.core.next.call(null, js__$1);
          var G__13173 = r;
          is__$1 = G__13171;
          js__$1 = G__13172;
          r = G__13173;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var vec__13166 = cljs.core.logic.fd.bounds.call(null, i);
            var imin = cljs.core.nth.call(null, vec__13166, 0, null);
            var imax = cljs.core.nth.call(null, vec__13166, 1, null);
            var vec__13167 = cljs.core.logic.fd.bounds.call(null, j);
            var jmin = cljs.core.nth.call(null, vec__13167, 0, null);
            var jmax = cljs.core.nth.call(null, vec__13167, 1, null);
            if(imin <= jmin) {
              if(imax < jmax) {
                var G__13174 = cljs.core.next.call(null, is__$1);
                var G__13175 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, imax + 1, jmax), cljs.core.next.call(null, js__$1));
                var G__13176 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, jmin, imax));
                is__$1 = G__13174;
                js__$1 = G__13175;
                r = G__13176;
                continue
              }else {
                if(imax > jmax) {
                  var G__13177 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, jmax + 1, imax), cljs.core.next.call(null, is__$1));
                  var G__13178 = cljs.core.next.call(null, js__$1);
                  var G__13179 = cljs.core.conj.call(null, r, j);
                  is__$1 = G__13177;
                  js__$1 = G__13178;
                  r = G__13179;
                  continue
                }else {
                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    var G__13180 = cljs.core.next.call(null, is__$1);
                    var G__13181 = cljs.core.next.call(null, js__$1);
                    var G__13182 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, jmin, jmax));
                    is__$1 = G__13180;
                    js__$1 = G__13181;
                    r = G__13182;
                    continue
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(imin > jmin) {
                if(imax > jmax) {
                  var G__13183 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, jmax + 1, imax), cljs.core.next.call(null, is__$1));
                  var G__13184 = cljs.core.next.call(null, js__$1);
                  var G__13185 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, imin, jmax));
                  is__$1 = G__13183;
                  js__$1 = G__13184;
                  r = G__13185;
                  continue
                }else {
                  if(imax < jmax) {
                    var G__13186 = is__$1;
                    var G__13187 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, imax + 1, jmax), cljs.core.next.call(null, js__$1));
                    var G__13188 = cljs.core.conj.call(null, r, i);
                    is__$1 = G__13186;
                    js__$1 = G__13187;
                    r = G__13188;
                    continue
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      var G__13189 = cljs.core.next.call(null, is__$1);
                      var G__13190 = cljs.core.next.call(null, js__$1);
                      var G__13191 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, imin, imax));
                      is__$1 = G__13189;
                      js__$1 = G__13190;
                      r = G__13191;
                      continue
                    }else {
                      return null
                    }
                  }
                }
              }else {
                return null
              }
            }
          }else {
            return null
          }
        }
      }
    }else {
      return cljs.core.apply.call(null, cljs.core.logic.fd.multi_interval, r)
    }
    break
  }
};
cljs.core.logic.fd.difference_STAR_ = function difference_STAR_(is, js) {
  var is__$1 = cljs.core.seq.call(null, cljs.core.logic.fd._intervals.call(null, is));
  var js__$1 = cljs.core.seq.call(null, cljs.core.logic.fd._intervals.call(null, js));
  var r = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(is__$1) {
      if(js__$1) {
        var i = cljs.core.first.call(null, is__$1);
        var j = cljs.core.first.call(null, js__$1);
        if(cljs.core.logic.fd.interval__LT_.call(null, i, j)) {
          var G__13196 = cljs.core.next.call(null, is__$1);
          var G__13197 = js__$1;
          var G__13198 = cljs.core.conj.call(null, r, i);
          is__$1 = G__13196;
          js__$1 = G__13197;
          r = G__13198;
          continue
        }else {
          if(cljs.core.logic.fd.interval__GT_.call(null, i, j)) {
            var G__13199 = is__$1;
            var G__13200 = cljs.core.next.call(null, js__$1);
            var G__13201 = r;
            is__$1 = G__13199;
            js__$1 = G__13200;
            r = G__13201;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              var vec__13194 = cljs.core.logic.fd.bounds.call(null, i);
              var imin = cljs.core.nth.call(null, vec__13194, 0, null);
              var imax = cljs.core.nth.call(null, vec__13194, 1, null);
              var vec__13195 = cljs.core.logic.fd.bounds.call(null, j);
              var jmin = cljs.core.nth.call(null, vec__13195, 0, null);
              var jmax = cljs.core.nth.call(null, vec__13195, 1, null);
              if(imin < jmin) {
                if(jmax < imax) {
                  var G__13202 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, jmax + 1, imax), cljs.core.next.call(null, is__$1));
                  var G__13203 = cljs.core.next.call(null, js__$1);
                  var G__13204 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, imin, jmin - 1));
                  is__$1 = G__13202;
                  js__$1 = G__13203;
                  r = G__13204;
                  continue
                }else {
                  if(jmax > imax) {
                    var G__13205 = cljs.core.next.call(null, is__$1);
                    var G__13206 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, imax + 1, jmax), cljs.core.next.call(null, js__$1));
                    var G__13207 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, imin, jmin - 1));
                    is__$1 = G__13205;
                    js__$1 = G__13206;
                    r = G__13207;
                    continue
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      var G__13208 = cljs.core.next.call(null, is__$1);
                      var G__13209 = cljs.core.next.call(null, js__$1);
                      var G__13210 = cljs.core.conj.call(null, r, cljs.core.logic.fd.interval.call(null, imin, jmin - 1));
                      is__$1 = G__13208;
                      js__$1 = G__13209;
                      r = G__13210;
                      continue
                    }else {
                      return null
                    }
                  }
                }
              }else {
                if(imin >= jmin) {
                  if(imax < jmax) {
                    var G__13211 = cljs.core.next.call(null, is__$1);
                    var G__13212 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, imax + 1, jmax), cljs.core.next.call(null, js__$1));
                    var G__13213 = r;
                    is__$1 = G__13211;
                    js__$1 = G__13212;
                    r = G__13213;
                    continue
                  }else {
                    if(imax > jmax) {
                      var G__13214 = cljs.core.cons.call(null, cljs.core.logic.fd.interval.call(null, jmax + 1, imax), cljs.core.next.call(null, is__$1));
                      var G__13215 = cljs.core.next.call(null, js__$1);
                      var G__13216 = r;
                      is__$1 = G__13214;
                      js__$1 = G__13215;
                      r = G__13216;
                      continue
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        var G__13217 = cljs.core.next.call(null, is__$1);
                        var G__13218 = cljs.core.next.call(null, js__$1);
                        var G__13219 = r;
                        is__$1 = G__13217;
                        js__$1 = G__13218;
                        r = G__13219;
                        continue
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  return null
                }
              }
            }else {
              return null
            }
          }
        }
      }else {
        return cljs.core.apply.call(null, cljs.core.logic.fd.multi_interval, cljs.core.into.call(null, r, is__$1))
      }
    }else {
      return cljs.core.apply.call(null, cljs.core.logic.fd.multi_interval, r)
    }
    break
  }
};
cljs.core.logic.fd.disjoint_QMARK__STAR_ = function disjoint_QMARK__STAR_(is, js) {
  if(cljs.core.truth_(cljs.core.logic.fd._disjoint_QMARK_.call(null, cljs.core.logic.fd.interval.call(null, cljs.core.logic.fd._lb.call(null, is), cljs.core.logic.fd._ub.call(null, is)), cljs.core.logic.fd.interval.call(null, cljs.core.logic.fd._lb.call(null, js), cljs.core.logic.fd._ub.call(null, js))))) {
    return true
  }else {
    var d0 = cljs.core.logic.fd._intervals.call(null, is);
    var d1 = cljs.core.logic.fd._intervals.call(null, js);
    var d0__$1 = d0;
    var d1__$1 = d1;
    while(true) {
      if(d0__$1 == null || d1__$1 == null) {
        return true
      }else {
        var i = cljs.core.first.call(null, d0__$1);
        var j = cljs.core.first.call(null, d1__$1);
        if(cljs.core.logic.fd.interval__LT_.call(null, i, j)) {
          var G__13220 = cljs.core.next.call(null, d0__$1);
          var G__13221 = d1__$1;
          d0__$1 = G__13220;
          d1__$1 = G__13221;
          continue
        }else {
          if(cljs.core.logic.fd.interval__GT_.call(null, i, j)) {
            var G__13222 = d0__$1;
            var G__13223 = cljs.core.next.call(null, d1__$1);
            d0__$1 = G__13222;
            d1__$1 = G__13223;
            continue
          }else {
            if(cljs.core.truth_(cljs.core.logic.fd._disjoint_QMARK_.call(null, i, j))) {
              var G__13224 = cljs.core.next.call(null, d0__$1);
              var G__13225 = d1__$1;
              d0__$1 = G__13224;
              d1__$1 = G__13225;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return false
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  }
};
cljs.core.logic.fd.MultiIntervalFD = function(min, max, is) {
  this.min = min;
  this.max = max;
  this.is = is;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2149581056
};
cljs.core.logic.fd.MultiIntervalFD.cljs$lang$type = true;
cljs.core.logic.fd.MultiIntervalFD.cljs$lang$ctorStr = "cljs.core.logic.fd/MultiIntervalFD";
cljs.core.logic.fd.MultiIntervalFD.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/MultiIntervalFD")
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("\x3cintervals:"), cljs.core.str(cljs.core.apply.call(null, cljs.core.pr_str, (new cljs.core.Keyword(null, "is", "is", 1013907612)).cljs$core$IFn$_invoke$arity$1(x__$1))), cljs.core.str("\x3e")].join(""))
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$protocols$IMergeDomains$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$protocols$IMergeDomains$_merge_doms$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.fd._intersection.call(null, this$__$1, that)
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$IIntervals$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$IIntervals$_intervals$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.seq.call(null, self__.is)
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISet$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISet$_member_QMARK_$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.truth_(cljs.core.some.call(null, function(p1__13227_SHARP_) {
    return cljs.core.logic.fd._member_QMARK_.call(null, p1__13227_SHARP_, n)
  }, self__.is))) {
    return true
  }else {
    return false
  }
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISet$_disjoint_QMARK_$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.fd.disjoint_QMARK__STAR_.call(null, this$__$1, that)
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISet$_intersection$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.fd.intersection_STAR_.call(null, this$__$1, that)
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISet$_difference$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.fd.difference_STAR_.call(null, this$__$1, that)
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$_drop_one$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var i = cljs.core.first.call(null, self__.is);
  if(cljs.core.truth_(cljs.core.logic.fd.singleton_dom_QMARK_.call(null, i))) {
    var nis = cljs.core.rest.call(null, self__.is);
    return new cljs.core.logic.fd.MultiIntervalFD(cljs.core.logic.fd._lb.call(null, cljs.core.first.call(null, nis)), self__.max, nis)
  }else {
    var ni = cljs.core.logic.fd._drop_one.call(null, i);
    return new cljs.core.logic.fd.MultiIntervalFD(cljs.core.logic.fd._lb.call(null, ni), self__.max, cljs.core.cons.call(null, ni, cljs.core.rest.call(null, self__.is)))
  }
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$_drop_before$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  var is__$1 = cljs.core.seq.call(null, self__.is);
  var is__$2 = is__$1;
  var r = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(is__$2) {
      var i = cljs.core.logic.fd._drop_before.call(null, cljs.core.first.call(null, is__$2), n);
      if(cljs.core.truth_(i)) {
        var G__13230 = cljs.core.next.call(null, is__$2);
        var G__13231 = cljs.core.conj.call(null, r, i);
        is__$2 = G__13230;
        r = G__13231;
        continue
      }else {
        var G__13232 = cljs.core.next.call(null, is__$2);
        var G__13233 = r;
        is__$2 = G__13232;
        r = G__13233;
        continue
      }
    }else {
      if(cljs.core.count.call(null, r) > 0) {
        return cljs.core.apply.call(null, cljs.core.logic.fd.multi_interval, r)
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$ISortedDomain$_keep_before$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  var is__$1 = cljs.core.seq.call(null, self__.is);
  var is__$2 = is__$1;
  var r = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(is__$2) {
      var i = cljs.core.logic.fd._keep_before.call(null, cljs.core.first.call(null, is__$2), n);
      if(cljs.core.truth_(i)) {
        var G__13234 = cljs.core.next.call(null, is__$2);
        var G__13235 = cljs.core.conj.call(null, r, i);
        is__$2 = G__13234;
        r = G__13235;
        continue
      }else {
        var G__13236 = cljs.core.next.call(null, is__$2);
        var G__13237 = r;
        is__$2 = G__13236;
        r = G__13237;
        continue
      }
    }else {
      if(cljs.core.count.call(null, r) > 0) {
        return cljs.core.apply.call(null, cljs.core.logic.fd.multi_interval, r)
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$IInterval$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$IInterval$_lb$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.min
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$fd$IInterval$_ub$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.max
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$protocols$IMemberCount$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$protocols$IMemberCount$_member_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce.call(null, core._PLUS_, 0, cljs.core.map.call(null, function(p1__13226_SHARP_) {
    return cljs.core.logic.protocols._member_count.call(null, p1__13226_SHARP_)
  }, self__.is))
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, j) {
  var self__ = this;
  var this$__$1 = this;
  if(j instanceof cljs.core.logic.fd.MultiIntervalFD) {
    var i = this$__$1;
    var vec__13228 = cljs.core.logic.fd.bounds.call(null, j);
    var jmin = cljs.core.nth.call(null, vec__13228, 0, null);
    var jmax = cljs.core.nth.call(null, vec__13228, 1, null);
    if(cljs.core._EQ_.call(null, self__.min, jmin) && cljs.core._EQ_.call(null, self__.max, jmax)) {
      var is__$1 = cljs.core.logic.fd.normalize_intervals.call(null, self__.is);
      var js = cljs.core.logic.fd.normalize_intervals.call(null, cljs.core.logic.fd._intervals.call(null, j));
      return cljs.core._EQ_.call(null, is__$1, js)
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13229 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "max", "max", 1014012118), G__13229)) {
    return self__.max
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "min", "min", 1014012356), G__13229)) {
      return self__.min
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "is", "is", 1013907612), G__13229)) {
        return self__.is
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.fd.__GT_MultiIntervalFD = function __GT_MultiIntervalFD(min, max, is) {
  return new cljs.core.logic.fd.MultiIntervalFD(min, max, is)
};
cljs.core.logic.fd.normalize_intervals = function normalize_intervals(is) {
  return cljs.core.reduce.call(null, function(r, i) {
    if(cljs.core.count.call(null, r) === 0) {
      return cljs.core.conj.call(null, r, i)
    }else {
      var j = cljs.core.peek.call(null, r);
      var jmax = cljs.core.logic.fd._ub.call(null, j);
      var imin = cljs.core.logic.fd._lb.call(null, i);
      if(imin - 1 <= jmax) {
        return cljs.core.conj.call(null, cljs.core.pop.call(null, r), cljs.core.logic.fd.interval.call(null, cljs.core.logic.fd._lb.call(null, j), cljs.core.logic.fd._ub.call(null, i)))
      }else {
        return cljs.core.conj.call(null, r, i)
      }
    }
  }, cljs.core.PersistentVector.EMPTY, is)
};
cljs.core.logic.fd.multi_interval = function() {
  var multi_interval = null;
  var multi_interval__0 = function() {
    return null
  };
  var multi_interval__1 = function(i0) {
    return i0
  };
  var multi_interval__2 = function(i0, i1) {
    var is = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i0, i1], null);
    return new cljs.core.logic.fd.MultiIntervalFD(cljs.core.reduce.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.logic.fd._lb, is)), cljs.core.reduce.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.logic.fd._ub, is)), is)
  };
  var multi_interval__3 = function() {
    var G__13238__delegate = function(i0, i1, ir) {
      var is = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, i1), i0), ir));
      return new cljs.core.logic.fd.MultiIntervalFD(cljs.core.reduce.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.logic.fd._lb, is)), cljs.core.reduce.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.logic.fd._ub, is)), is)
    };
    var G__13238 = function(i0, i1, var_args) {
      var ir = null;
      if(arguments.length > 2) {
        ir = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13238__delegate.call(this, i0, i1, ir)
    };
    G__13238.cljs$lang$maxFixedArity = 2;
    G__13238.cljs$lang$applyTo = function(arglist__13239) {
      var i0 = cljs.core.first(arglist__13239);
      arglist__13239 = cljs.core.next(arglist__13239);
      var i1 = cljs.core.first(arglist__13239);
      var ir = cljs.core.rest(arglist__13239);
      return G__13238__delegate(i0, i1, ir)
    };
    G__13238.cljs$core$IFn$_invoke$arity$variadic = G__13238__delegate;
    return G__13238
  }();
  multi_interval = function(i0, i1, var_args) {
    var ir = var_args;
    switch(arguments.length) {
      case 0:
        return multi_interval__0.call(this);
      case 1:
        return multi_interval__1.call(this, i0);
      case 2:
        return multi_interval__2.call(this, i0, i1);
      default:
        return multi_interval__3.cljs$core$IFn$_invoke$arity$variadic(i0, i1, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_interval.cljs$lang$maxFixedArity = 2;
  multi_interval.cljs$lang$applyTo = multi_interval__3.cljs$lang$applyTo;
  multi_interval.cljs$core$IFn$_invoke$arity$0 = multi_interval__0;
  multi_interval.cljs$core$IFn$_invoke$arity$1 = multi_interval__1;
  multi_interval.cljs$core$IFn$_invoke$arity$2 = multi_interval__2;
  multi_interval.cljs$core$IFn$_invoke$arity$variadic = multi_interval__3.cljs$core$IFn$_invoke$arity$variadic;
  return multi_interval
}();
cljs.core.logic.fd.get_dom = function get_dom(a, x) {
  if(cljs.core.logic.lvar_QMARK_.call(null, x)) {
    return cljs.core.logic.get_dom.call(null, a, x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947))
  }else {
    return x
  }
};
cljs.core.logic.fd.ext_dom_fd = function ext_dom_fd(a, x, dom, domp) {
  var a__$1 = cljs.core.logic.add_dom.call(null, a, x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947), dom);
  if(cljs.core.not_EQ_.call(null, domp, dom)) {
    return cljs.core.logic.run_constraints_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), (new cljs.core.Keyword(null, "cs", "cs", 1013907426)).cljs$core$IFn$_invoke$arity$1(a__$1), new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947)).call(null, a__$1)
  }else {
    return a__$1
  }
};
cljs.core.logic.fd.singleton_dom_QMARK_ = function singleton_dom_QMARK_(x) {
  return cljs.core.integer_QMARK_.call(null, x)
};
cljs.core.logic.fd.resolve_storable_dom = function resolve_storable_dom(a, x, dom, domp) {
  if(cljs.core.logic.fd.singleton_dom_QMARK_.call(null, dom)) {
    var xv = cljs.core.logic.protocols.walk.call(null, a, x);
    if(cljs.core.logic.lvar_QMARK_.call(null, xv)) {
      return cljs.core.logic.protocols.ext_run_cs.call(null, cljs.core.logic.rem_dom.call(null, a, x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947)), x, dom)
    }else {
      return a
    }
  }else {
    return cljs.core.logic.fd.ext_dom_fd.call(null, a, x, dom, domp)
  }
};
cljs.core.logic.fd.process_dom = function process_dom(x, dom, domp) {
  return function(a) {
    if(cljs.core.truth_(dom)) {
      if(cljs.core.logic.lvar_QMARK_.call(null, x)) {
        return cljs.core.logic.fd.resolve_storable_dom.call(null, a, x, dom, domp)
      }else {
        if(cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, dom, x))) {
          return a
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return null
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
  }
};
cljs.core.logic.fd.dom = function dom(x, dom__$1) {
  return function(a) {
    var domp = cljs.core.logic.fd.get_dom.call(null, a, x);
    var dom__$2 = cljs.core.truth_(domp) ? cljs.core.logic.fd._intersection.call(null, dom__$1, domp) : dom__$1;
    return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, x, dom__$2, domp), domp == null && !cljs.core.logic.fd.singleton_dom_QMARK_.call(null, dom__$2) ? cljs.core.logic.fd.domc.call(null, x) : cljs.core.identity).call(null, a)
  }
};
cljs.core.logic.fd.map_sum = function map_sum(f) {
  return function loop(ls) {
    if(cljs.core.empty_QMARK_.call(null, ls)) {
      return function(a) {
        return null
      }
    }else {
      return function(a) {
        return cljs.core.logic.protocols.mplus.call(null, f.call(null, cljs.core.first.call(null, ls)).call(null, a), function() {
          return loop.call(null, cljs.core.rest.call(null, ls)).call(null, a)
        })
      }
    }
  }
};
cljs.core.logic.fd.to_vals = function to_vals(dom) {
  var to_vals_STAR_ = function to_vals_STAR_(is) {
    if(cljs.core.truth_(is)) {
      var i = cljs.core.first.call(null, is);
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, cljs.core.logic.fd._lb.call(null, i), function() {
          var temp__4092__auto__ = cljs.core.logic.fd._drop_one.call(null, i);
          if(cljs.core.truth_(temp__4092__auto__)) {
            var ni = temp__4092__auto__;
            return to_vals_STAR_.call(null, cljs.core.cons.call(null, ni, cljs.core.next.call(null, is)))
          }else {
            return to_vals_STAR_.call(null, cljs.core.next.call(null, is))
          }
        }())
      }, null, null)
    }else {
      return null
    }
  };
  return to_vals_STAR_.call(null, cljs.core.seq.call(null, cljs.core.logic.fd._intervals.call(null, dom)))
};
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$protocols$IForceAnswerTerm$ = true;
cljs.core.logic.fd.MultiIntervalFD.prototype.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2 = function(v, x) {
  var v__$1 = this;
  return cljs.core.logic.fd.map_sum.call(null, function(n) {
    return cljs.core.logic.ext_run_csg.call(null, x, n)
  }).call(null, cljs.core.logic.fd.to_vals.call(null, v__$1))
};
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$protocols$IForceAnswerTerm$ = true;
cljs.core.logic.fd.IntervalFD.prototype.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2 = function(v, x) {
  var v__$1 = this;
  return cljs.core.logic.fd.map_sum.call(null, function(n) {
    return cljs.core.logic.ext_run_csg.call(null, x, n)
  }).call(null, cljs.core.logic.fd.to_vals.call(null, v__$1))
};
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$protocols$IForceAnswerTerm$ = true;
cljs.core.logic.fd.FiniteDomain.prototype.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2 = function(v, x) {
  var v__$1 = this;
  return cljs.core.logic.fd.map_sum.call(null, function(n) {
    return cljs.core.logic.ext_run_csg.call(null, x, n)
  }).call(null, cljs.core.logic.fd.to_vals.call(null, v__$1))
};
cljs.core.logic.fd._domc = function _domc(x) {
  if(typeof cljs.core.logic.fd.t13247 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13247 = function(x, _domc, meta13248) {
      this.x = x;
      this._domc = _domc;
      this.meta13248 = meta13248;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13247.cljs$lang$type = true;
    cljs.core.logic.fd.t13247.cljs$lang$ctorStr = "cljs.core.logic.fd/t13247";
    cljs.core.logic.fd.t13247.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13247")
    };
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "domc", "cljs.core.logic.fd/domc", 1533784811, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 651), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 651), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 41)))))
    };
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x], null)
    };
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var xv = cljs.core.logic.protocols.walk.call(null, s, self__.x);
      var xd = (new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "doms", "doms", 1016993507)).cljs$core$IFn$_invoke$arity$1(cljs.core.logic.protocols.root_val.call(null, s, self__.x)));
      if(typeof cljs.core.logic.fd.t13250 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13250 = function(xd, xv, s, this$, meta13248, x, _domc, meta13251) {
          this.xd = xd;
          this.xv = xv;
          this.s = s;
          this.this$ = this$;
          this.meta13248 = meta13248;
          this.x = x;
          this._domc = _domc;
          this.meta13251 = meta13251;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13250.cljs$lang$type = true;
        cljs.core.logic.fd.t13250.cljs$lang$ctorStr = "cljs.core.logic.fd/t13250";
        cljs.core.logic.fd.t13250.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13250")
        };
        cljs.core.logic.fd.t13250.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13250.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return!cljs.core.logic.lvar_QMARK_.call(null, self__.xv)
        };
        cljs.core.logic.fd.t13250.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.fd.t13250.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.xd == null
        };
        cljs.core.logic.fd.t13250.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          if(cljs.core.truth_(self__.xd)) {
            if(cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, self__.xd, self__.xv))) {
              return cljs.core.logic.rem_dom.call(null, s__$2, self__.x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947))
            }else {
              return null
            }
          }else {
            return s__$2
          }
        };
        cljs.core.logic.fd.t13250.prototype.apply = function(self__, args13253) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13253)))
        };
        cljs.core.logic.fd.t13250.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          if(cljs.core.truth_(self__.xd)) {
            if(cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, self__.xd, self__.xv))) {
              return cljs.core.logic.rem_dom.call(null, s__$2, self__.x, new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947))
            }else {
              return null
            }
          }else {
            return s__$2
          }
        };
        cljs.core.logic.fd.t13250.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13252) {
          var self__ = this;
          var _13252__$1 = this;
          return self__.meta13251
        };
        cljs.core.logic.fd.t13250.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13252, meta13251__$1) {
          var self__ = this;
          var _13252__$1 = this;
          return new cljs.core.logic.fd.t13250(self__.xd, self__.xv, self__.s, self__.this$, self__.meta13248, self__.x, self__._domc, meta13251__$1)
        };
        cljs.core.logic.fd.__GT_t13250 = function __GT_t13250(xd__$1, xv__$1, s__$1, this$__$2, meta13248__$1, x__$2, _domc__$2, meta13251) {
          return new cljs.core.logic.fd.t13250(xd__$1, xv__$1, s__$1, this$__$2, meta13248__$1, x__$2, _domc__$2, meta13251)
        }
      }
      return new cljs.core.logic.fd.t13250(xd, xv, s, this$__$1, self__.meta13248, self__.x, self__._domc, null)
    };
    cljs.core.logic.fd.t13247.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13247.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13249) {
      var self__ = this;
      var _13249__$1 = this;
      return self__.meta13248
    };
    cljs.core.logic.fd.t13247.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13249, meta13248__$1) {
      var self__ = this;
      var _13249__$1 = this;
      return new cljs.core.logic.fd.t13247(self__.x, self__._domc, meta13248__$1)
    };
    cljs.core.logic.fd.__GT_t13247 = function __GT_t13247(x__$1, _domc__$1, meta13248) {
      return new cljs.core.logic.fd.t13247(x__$1, _domc__$1, meta13248)
    }
  }
  return new cljs.core.logic.fd.t13247(x, _domc, null)
};
cljs.core.logic.fd.domc = function domc(x) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._domc.call(null, x))
};
cljs.core.logic.fd._EQ__EQ_c = function _EQ__EQ_c(u, v) {
  if(typeof cljs.core.logic.fd.t13261 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13261 = function(v, u, _EQ__EQ_c, meta13262) {
      this.v = v;
      this.u = u;
      this._EQ__EQ_c = _EQ__EQ_c;
      this.meta13262 = meta13262;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13261.cljs$lang$type = true;
    cljs.core.logic.fd.t13261.cljs$lang$ctorStr = "cljs.core.logic.fd/t13261";
    cljs.core.logic.fd.t13261.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13261")
    };
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947), null, new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "\x3d\x3d", "cljs.core.logic.fd/\x3d\x3d", 1528485544, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 681), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 681), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 39)))))
    };
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.u, self__.v], null)
    };
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var du = cljs.core.logic.get_dom_fd.call(null, s, self__.u);
      var dv = cljs.core.logic.get_dom_fd.call(null, s, self__.v);
      if(typeof cljs.core.logic.fd.t13264 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13264 = function(dv, du, s, this$, meta13262, v, u, _EQ__EQ_c, meta13265) {
          this.dv = dv;
          this.du = du;
          this.s = s;
          this.this$ = this$;
          this.meta13262 = meta13262;
          this.v = v;
          this.u = u;
          this._EQ__EQ_c = _EQ__EQ_c;
          this.meta13265 = meta13265;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13264.cljs$lang$type = true;
        cljs.core.logic.fd.t13264.cljs$lang$ctorStr = "cljs.core.logic.fd/t13264";
        cljs.core.logic.fd.t13264.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13264")
        };
        cljs.core.logic.fd.t13264.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13264.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var and__9129__auto__ = self__.du;
          if(cljs.core.truth_(and__9129__auto__)) {
            return self__.dv
          }else {
            return and__9129__auto__
          }
        };
        cljs.core.logic.fd.t13264.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.fd.t13264.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.du) && cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.dv) && cljs.core._EQ_.call(null, self__.du, self__.dv)
        };
        cljs.core.logic.fd.t13264.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var i = cljs.core.logic.fd._intersection.call(null, self__.du, self__.dv);
          return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, i, self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, i, self__.dv)).call(null, s__$2)
        };
        cljs.core.logic.fd.t13264.prototype.apply = function(self__, args13267) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13267)))
        };
        cljs.core.logic.fd.t13264.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          var i = cljs.core.logic.fd._intersection.call(null, self__.du, self__.dv);
          return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, i, self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, i, self__.dv)).call(null, s__$2)
        };
        cljs.core.logic.fd.t13264.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13266) {
          var self__ = this;
          var _13266__$1 = this;
          return self__.meta13265
        };
        cljs.core.logic.fd.t13264.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13266, meta13265__$1) {
          var self__ = this;
          var _13266__$1 = this;
          return new cljs.core.logic.fd.t13264(self__.dv, self__.du, self__.s, self__.this$, self__.meta13262, self__.v, self__.u, self__._EQ__EQ_c, meta13265__$1)
        };
        cljs.core.logic.fd.__GT_t13264 = function __GT_t13264(dv__$1, du__$1, s__$1, this$__$2, meta13262__$1, v__$2, u__$2, _EQ__EQ_c__$2, meta13265) {
          return new cljs.core.logic.fd.t13264(dv__$1, du__$1, s__$1, this$__$2, meta13262__$1, v__$2, u__$2, _EQ__EQ_c__$2, meta13265)
        }
      }
      return new cljs.core.logic.fd.t13264(dv, du, s, this$__$1, self__.meta13262, self__.v, self__.u, self__._EQ__EQ_c, null)
    };
    cljs.core.logic.fd.t13261.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13261.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13263) {
      var self__ = this;
      var _13263__$1 = this;
      return self__.meta13262
    };
    cljs.core.logic.fd.t13261.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13263, meta13262__$1) {
      var self__ = this;
      var _13263__$1 = this;
      return new cljs.core.logic.fd.t13261(self__.v, self__.u, self__._EQ__EQ_c, meta13262__$1)
    };
    cljs.core.logic.fd.__GT_t13261 = function __GT_t13261(v__$1, u__$1, _EQ__EQ_c__$1, meta13262) {
      return new cljs.core.logic.fd.t13261(v__$1, u__$1, _EQ__EQ_c__$1, meta13262)
    }
  }
  return new cljs.core.logic.fd.t13261(v, u, _EQ__EQ_c, null)
};
cljs.core.logic.fd._EQ__EQ_ = function _EQ__EQ_(u, v) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._EQ__EQ_c.call(null, u, v))
};
cljs.core.logic.fd._BANG__EQ_c = function _BANG__EQ_c(u, v) {
  if(typeof cljs.core.logic.fd.t13275 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13275 = function(v, u, _BANG__EQ_c, meta13276) {
      this.v = v;
      this.u = u;
      this._BANG__EQ_c = _BANG__EQ_c;
      this.meta13276 = meta13276;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13275.cljs$lang$type = true;
    cljs.core.logic.fd.t13275.cljs$lang$ctorStr = "cljs.core.logic.fd/t13275";
    cljs.core.logic.fd.t13275.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13275")
    };
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947), null, new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "!\x3d", "cljs.core.logic.fd/!\x3d", 1528485316, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 718), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 718), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 39)))))
    };
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.u, self__.v], null)
    };
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var du = cljs.core.logic.get_dom_fd.call(null, s, self__.u);
      var dv = cljs.core.logic.get_dom_fd.call(null, s, self__.v);
      var su_QMARK_ = cljs.core.logic.fd.singleton_dom_QMARK_.call(null, du);
      var sv_QMARK_ = cljs.core.logic.fd.singleton_dom_QMARK_.call(null, dv);
      if(typeof cljs.core.logic.fd.t13278 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13278 = function(v, meta13276, u, _BANG__EQ_c, s, du, dv, sv_QMARK_, su_QMARK_, this$, meta13279) {
          this.v = v;
          this.meta13276 = meta13276;
          this.u = u;
          this._BANG__EQ_c = _BANG__EQ_c;
          this.s = s;
          this.du = du;
          this.dv = dv;
          this.sv_QMARK_ = sv_QMARK_;
          this.su_QMARK_ = su_QMARK_;
          this.this$ = this$;
          this.meta13279 = meta13279;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13278.cljs$lang$type = true;
        cljs.core.logic.fd.t13278.cljs$lang$ctorStr = "cljs.core.logic.fd/t13278";
        cljs.core.logic.fd.t13278.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13278")
        };
        cljs.core.logic.fd.t13278.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13278.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var and__9129__auto__ = self__.du;
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = self__.dv;
            if(cljs.core.truth_(and__9129__auto____$1)) {
              var or__9141__auto__ = self__.su_QMARK_;
              if(cljs.core.truth_(or__9141__auto__)) {
                return or__9141__auto__
              }else {
                return self__.sv_QMARK_
              }
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        };
        cljs.core.logic.fd.t13278.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.fd.t13278.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var and__9129__auto__ = self__.du;
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = self__.dv;
            if(cljs.core.truth_(and__9129__auto____$1)) {
              return cljs.core.logic.fd._disjoint_QMARK_.call(null, self__.du, self__.dv)
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        };
        cljs.core.logic.fd.t13278.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          if(cljs.core.truth_(function() {
            var and__9129__auto__ = self__.su_QMARK_;
            if(cljs.core.truth_(and__9129__auto__)) {
              var and__9129__auto____$1 = self__.sv_QMARK_;
              if(cljs.core.truth_(and__9129__auto____$1)) {
                return cljs.core._EQ_.call(null, self__.du, self__.dv)
              }else {
                return and__9129__auto____$1
              }
            }else {
              return and__9129__auto__
            }
          }())) {
            return null
          }else {
            if(cljs.core.truth_(cljs.core.logic.fd._disjoint_QMARK_.call(null, self__.du, self__.dv))) {
              return s__$2
            }else {
              if(cljs.core.truth_(self__.su_QMARK_)) {
                var temp__4094__auto__ = cljs.core.logic.fd._difference.call(null, self__.dv, self__.du);
                if(cljs.core.truth_(temp__4094__auto__)) {
                  var vdiff = temp__4094__auto__;
                  return cljs.core.logic.fd.process_dom.call(null, self__.v, vdiff, self__.dv).call(null, s__$2)
                }else {
                  return null
                }
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  var temp__4094__auto__ = cljs.core.logic.fd._difference.call(null, self__.du, self__.dv);
                  if(cljs.core.truth_(temp__4094__auto__)) {
                    var udiff = temp__4094__auto__;
                    return cljs.core.logic.fd.process_dom.call(null, self__.u, udiff, self__.du).call(null, s__$2)
                  }else {
                    return null
                  }
                }else {
                  return null
                }
              }
            }
          }
        };
        cljs.core.logic.fd.t13278.prototype.apply = function(self__, args13281) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13281)))
        };
        cljs.core.logic.fd.t13278.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          if(cljs.core.truth_(function() {
            var and__9129__auto__ = self__.su_QMARK_;
            if(cljs.core.truth_(and__9129__auto__)) {
              var and__9129__auto____$1 = self__.sv_QMARK_;
              if(cljs.core.truth_(and__9129__auto____$1)) {
                return cljs.core._EQ_.call(null, self__.du, self__.dv)
              }else {
                return and__9129__auto____$1
              }
            }else {
              return and__9129__auto__
            }
          }())) {
            return null
          }else {
            if(cljs.core.truth_(cljs.core.logic.fd._disjoint_QMARK_.call(null, self__.du, self__.dv))) {
              return s__$2
            }else {
              if(cljs.core.truth_(self__.su_QMARK_)) {
                var temp__4094__auto__ = cljs.core.logic.fd._difference.call(null, self__.dv, self__.du);
                if(cljs.core.truth_(temp__4094__auto__)) {
                  var vdiff = temp__4094__auto__;
                  return cljs.core.logic.fd.process_dom.call(null, self__.v, vdiff, self__.dv).call(null, s__$2)
                }else {
                  return null
                }
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  var temp__4094__auto__ = cljs.core.logic.fd._difference.call(null, self__.du, self__.dv);
                  if(cljs.core.truth_(temp__4094__auto__)) {
                    var udiff = temp__4094__auto__;
                    return cljs.core.logic.fd.process_dom.call(null, self__.u, udiff, self__.du).call(null, s__$2)
                  }else {
                    return null
                  }
                }else {
                  return null
                }
              }
            }
          }
        };
        cljs.core.logic.fd.t13278.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13280) {
          var self__ = this;
          var _13280__$1 = this;
          return self__.meta13279
        };
        cljs.core.logic.fd.t13278.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13280, meta13279__$1) {
          var self__ = this;
          var _13280__$1 = this;
          return new cljs.core.logic.fd.t13278(self__.v, self__.meta13276, self__.u, self__._BANG__EQ_c, self__.s, self__.du, self__.dv, self__.sv_QMARK_, self__.su_QMARK_, self__.this$, meta13279__$1)
        };
        cljs.core.logic.fd.__GT_t13278 = function __GT_t13278(v__$2, meta13276__$1, u__$2, _BANG__EQ_c__$2, s__$1, du__$1, dv__$1, sv_QMARK___$1, su_QMARK___$1, this$__$2, meta13279) {
          return new cljs.core.logic.fd.t13278(v__$2, meta13276__$1, u__$2, _BANG__EQ_c__$2, s__$1, du__$1, dv__$1, sv_QMARK___$1, su_QMARK___$1, this$__$2, meta13279)
        }
      }
      return new cljs.core.logic.fd.t13278(self__.v, self__.meta13276, self__.u, self__._BANG__EQ_c, s, du, dv, sv_QMARK_, su_QMARK_, this$__$1, null)
    };
    cljs.core.logic.fd.t13275.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13275.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13277) {
      var self__ = this;
      var _13277__$1 = this;
      return self__.meta13276
    };
    cljs.core.logic.fd.t13275.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13277, meta13276__$1) {
      var self__ = this;
      var _13277__$1 = this;
      return new cljs.core.logic.fd.t13275(self__.v, self__.u, self__._BANG__EQ_c, meta13276__$1)
    };
    cljs.core.logic.fd.__GT_t13275 = function __GT_t13275(v__$1, u__$1, _BANG__EQ_c__$1, meta13276) {
      return new cljs.core.logic.fd.t13275(v__$1, u__$1, _BANG__EQ_c__$1, meta13276)
    }
  }
  return new cljs.core.logic.fd.t13275(v, u, _BANG__EQ_c, null)
};
cljs.core.logic.fd._BANG__EQ_ = function _BANG__EQ_(u, v) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._BANG__EQ_c.call(null, u, v))
};
cljs.core.logic.fd._LT__EQ_c = function _LT__EQ_c(u, v) {
  if(typeof cljs.core.logic.fd.t13289 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13289 = function(v, u, _LT__EQ_c, meta13290) {
      this.v = v;
      this.u = u;
      this._LT__EQ_c = _LT__EQ_c;
      this.meta13290 = meta13290;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13289.cljs$lang$type = true;
    cljs.core.logic.fd.t13289.cljs$lang$ctorStr = "cljs.core.logic.fd/t13289";
    cljs.core.logic.fd.t13289.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13289")
    };
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947), null, new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "\x3c\x3d", "cljs.core.logic.fd/\x3c\x3d", 1528485515, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 751), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 751), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 39)))))
    };
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.u, self__.v], null)
    };
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var du = cljs.core.logic.get_dom_fd.call(null, s, self__.u);
      var dv = cljs.core.logic.get_dom_fd.call(null, s, self__.v);
      if(typeof cljs.core.logic.fd.t13292 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13292 = function(dv, du, s, this$, meta13290, v, u, _LT__EQ_c, meta13293) {
          this.dv = dv;
          this.du = du;
          this.s = s;
          this.this$ = this$;
          this.meta13290 = meta13290;
          this.v = v;
          this.u = u;
          this._LT__EQ_c = _LT__EQ_c;
          this.meta13293 = meta13293;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13292.cljs$lang$type = true;
        cljs.core.logic.fd.t13292.cljs$lang$ctorStr = "cljs.core.logic.fd/t13292";
        cljs.core.logic.fd.t13292.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13292")
        };
        cljs.core.logic.fd.t13292.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13292.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var and__9129__auto__ = self__.du;
          if(cljs.core.truth_(and__9129__auto__)) {
            return self__.dv
          }else {
            return and__9129__auto__
          }
        };
        cljs.core.logic.fd.t13292.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.fd.t13292.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var and__9129__auto__ = self__.du;
          if(cljs.core.truth_(and__9129__auto__)) {
            var and__9129__auto____$1 = self__.dv;
            if(cljs.core.truth_(and__9129__auto____$1)) {
              return cljs.core.logic.fd.interval__LT__EQ_.call(null, self__.du, self__.dv)
            }else {
              return and__9129__auto____$1
            }
          }else {
            return and__9129__auto__
          }
        };
        cljs.core.logic.fd.t13292.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var umin = cljs.core.logic.fd._lb.call(null, self__.du);
          var vmax = cljs.core.logic.fd._ub.call(null, self__.dv);
          return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, cljs.core.logic.fd._keep_before.call(null, self__.du, vmax + 1), self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, cljs.core.logic.fd._drop_before.call(null, self__.dv, umin), self__.dv)).call(null, s__$2)
        };
        cljs.core.logic.fd.t13292.prototype.apply = function(self__, args13295) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13295)))
        };
        cljs.core.logic.fd.t13292.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          var umin = cljs.core.logic.fd._lb.call(null, self__.du);
          var vmax = cljs.core.logic.fd._ub.call(null, self__.dv);
          return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, cljs.core.logic.fd._keep_before.call(null, self__.du, vmax + 1), self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, cljs.core.logic.fd._drop_before.call(null, self__.dv, umin), self__.dv)).call(null, s__$2)
        };
        cljs.core.logic.fd.t13292.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13294) {
          var self__ = this;
          var _13294__$1 = this;
          return self__.meta13293
        };
        cljs.core.logic.fd.t13292.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13294, meta13293__$1) {
          var self__ = this;
          var _13294__$1 = this;
          return new cljs.core.logic.fd.t13292(self__.dv, self__.du, self__.s, self__.this$, self__.meta13290, self__.v, self__.u, self__._LT__EQ_c, meta13293__$1)
        };
        cljs.core.logic.fd.__GT_t13292 = function __GT_t13292(dv__$1, du__$1, s__$1, this$__$2, meta13290__$1, v__$2, u__$2, _LT__EQ_c__$2, meta13293) {
          return new cljs.core.logic.fd.t13292(dv__$1, du__$1, s__$1, this$__$2, meta13290__$1, v__$2, u__$2, _LT__EQ_c__$2, meta13293)
        }
      }
      return new cljs.core.logic.fd.t13292(dv, du, s, this$__$1, self__.meta13290, self__.v, self__.u, self__._LT__EQ_c, null)
    };
    cljs.core.logic.fd.t13289.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13289.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13291) {
      var self__ = this;
      var _13291__$1 = this;
      return self__.meta13290
    };
    cljs.core.logic.fd.t13289.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13291, meta13290__$1) {
      var self__ = this;
      var _13291__$1 = this;
      return new cljs.core.logic.fd.t13289(self__.v, self__.u, self__._LT__EQ_c, meta13290__$1)
    };
    cljs.core.logic.fd.__GT_t13289 = function __GT_t13289(v__$1, u__$1, _LT__EQ_c__$1, meta13290) {
      return new cljs.core.logic.fd.t13289(v__$1, u__$1, _LT__EQ_c__$1, meta13290)
    }
  }
  return new cljs.core.logic.fd.t13289(v, u, _LT__EQ_c, null)
};
cljs.core.logic.fd._LT__EQ_ = function _LT__EQ_(u, v) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._LT__EQ_c.call(null, u, v))
};
cljs.core.logic.fd._LT_ = function _LT_(u, v) {
  return function(a__8646__auto__) {
    return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8646__auto__, cljs.core.logic.fd._LT__EQ_.call(null, u, v)), cljs.core.logic.fd._BANG__EQ_.call(null, u, v))
  }
};
cljs.core.logic.fd._GT_ = function _GT_(u, v) {
  return cljs.core.logic.fd._LT_.call(null, v, u)
};
cljs.core.logic.fd._GT__EQ_ = function _GT__EQ_(u, v) {
  return cljs.core.logic.fd._LT__EQ_.call(null, v, u)
};
cljs.core.logic.fd._PLUS_c = function _PLUS_c(u, v, w) {
  if(typeof cljs.core.logic.fd.t13309 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13309 = function(w, v, u, _PLUS_c, meta13310) {
      this.w = w;
      this.v = v;
      this.u = u;
      this._PLUS_c = _PLUS_c;
      this.meta13310 = meta13310;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13309.cljs$lang$type = true;
    cljs.core.logic.fd.t13309.cljs$lang$ctorStr = "cljs.core.logic.fd/t13309";
    cljs.core.logic.fd.t13309.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13309")
    };
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947), null, new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "+", "cljs.core.logic.fd/+", 1528484149, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 838), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 838), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 38)))))
    };
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.u, self__.v, self__.w], null)
    };
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var du = cljs.core.logic.get_dom_fd.call(null, s, self__.u);
      var dv = cljs.core.logic.get_dom_fd.call(null, s, self__.v);
      var dw = cljs.core.logic.get_dom_fd.call(null, s, self__.w);
      if(typeof cljs.core.logic.fd.t13312 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13312 = function(v, meta13310, w, u, s, _PLUS_c, du, dw, dv, this$, meta13313) {
          this.v = v;
          this.meta13310 = meta13310;
          this.w = w;
          this.u = u;
          this.s = s;
          this._PLUS_c = _PLUS_c;
          this.du = du;
          this.dw = dw;
          this.dv = dv;
          this.this$ = this$;
          this.meta13313 = meta13313;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13312.cljs$lang$type = true;
        cljs.core.logic.fd.t13312.cljs$lang$ctorStr = "cljs.core.logic.fd/t13312";
        cljs.core.logic.fd.t13312.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13312")
        };
        cljs.core.logic.fd.t13312.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13312.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.truth_(self__.du)) {
            var or__9141__auto__ = self__.dv;
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return self__.dw
            }
          }else {
            if(cljs.core.truth_(self__.dv)) {
              var or__9141__auto__ = self__.du;
              if(cljs.core.truth_(or__9141__auto__)) {
                return or__9141__auto__
              }else {
                return self__.dw
              }
            }else {
              if(cljs.core.truth_(self__.dw)) {
                var or__9141__auto__ = self__.du;
                if(cljs.core.truth_(or__9141__auto__)) {
                  return or__9141__auto__
                }else {
                  return self__.dv
                }
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return false
                }else {
                  return null
                }
              }
            }
          }
        };
        cljs.core.logic.fd.t13312.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.fd.t13312.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.du) && cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.dv) && cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.dw) && cljs.core._EQ_.call(null, self__.du + self__.dv, self__.dw)
        };
        cljs.core.logic.fd.t13312.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var vec__13316 = cljs.core.truth_(self__.dw) ? cljs.core.logic.fd.bounds.call(null, self__.dw) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.du) + cljs.core.logic.fd._lb.call(null, self__.dv), cljs.core.logic.fd._ub.call(null, self__.du) + cljs.core.logic.fd._ub.call(null, self__.dv)], null);
          var wmin = cljs.core.nth.call(null, vec__13316, 0, null);
          var wmax = cljs.core.nth.call(null, vec__13316, 1, null);
          var vec__13317 = cljs.core.truth_(self__.du) ? cljs.core.logic.fd.bounds.call(null, self__.du) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.dw) - cljs.core.logic.fd._ub.call(null, self__.dv), cljs.core.logic.fd._ub.call(null, self__.dw) - cljs.core.logic.fd._lb.call(null, self__.dv)], null);
          var umin = cljs.core.nth.call(null, vec__13317, 0, null);
          var umax = cljs.core.nth.call(null, vec__13317, 1, null);
          var vec__13318 = cljs.core.truth_(self__.dv) ? cljs.core.logic.fd.bounds.call(null, self__.dv) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.dw) - cljs.core.logic.fd._ub.call(null, self__.du), cljs.core.logic.fd._ub.call(null, self__.dw) - cljs.core.logic.fd._lb.call(null, self__.du)], null);
          var vmin = cljs.core.nth.call(null, vec__13318, 0, null);
          var vmax = cljs.core.nth.call(null, vec__13318, 1, null);
          var wi = cljs.core.logic.fd.interval.call(null, umin + vmin, umax + vmax);
          var ui = cljs.core.logic.fd.interval.call(null, wmin - vmax, wmax - vmin);
          var vi = cljs.core.logic.fd.interval.call(null, wmin - umax, wmax - umin);
          var temp__4094__auto__ = cljs.core.truth_(function() {
            var and__9129__auto__ = wi;
            if(cljs.core.truth_(and__9129__auto__)) {
              return self__.dw
            }else {
              return and__9129__auto__
            }
          }()) ? cljs.core.logic.fd._intersection.call(null, wi, self__.dw) : wi;
          if(cljs.core.truth_(temp__4094__auto__)) {
            var wi__$1 = temp__4094__auto__;
            var temp__4094__auto____$1 = cljs.core.truth_(function() {
              var and__9129__auto__ = ui;
              if(cljs.core.truth_(and__9129__auto__)) {
                return self__.du
              }else {
                return and__9129__auto__
              }
            }()) ? cljs.core.logic.fd._intersection.call(null, ui, self__.du) : ui;
            if(cljs.core.truth_(temp__4094__auto____$1)) {
              var ui__$1 = temp__4094__auto____$1;
              var temp__4094__auto____$2 = cljs.core.truth_(function() {
                var and__9129__auto__ = vi;
                if(cljs.core.truth_(and__9129__auto__)) {
                  return self__.dv
                }else {
                  return and__9129__auto__
                }
              }()) ? cljs.core.logic.fd._intersection.call(null, vi, self__.dv) : vi;
              if(cljs.core.truth_(temp__4094__auto____$2)) {
                var vi__$1 = temp__4094__auto____$2;
                if(!cljs.core.every_QMARK_.call(null, cljs.core.logic.fd.singleton_dom_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [wi__$1, ui__$1, vi__$1], null)) || cljs.core._EQ_.call(null, ui__$1 + vi__$1, wi__$1)) {
                  return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.w, wi__$1, self__.dw), cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, ui__$1, self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, vi__$1, self__.dv))).call(null, s__$2)
                }else {
                  return null
                }
              }else {
                return null
              }
            }else {
              return null
            }
          }else {
            return null
          }
        };
        cljs.core.logic.fd.t13312.prototype.apply = function(self__, args13315) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13315)))
        };
        cljs.core.logic.fd.t13312.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          var vec__13319 = cljs.core.truth_(self__.dw) ? cljs.core.logic.fd.bounds.call(null, self__.dw) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.du) + cljs.core.logic.fd._lb.call(null, self__.dv), cljs.core.logic.fd._ub.call(null, self__.du) + cljs.core.logic.fd._ub.call(null, self__.dv)], null);
          var wmin = cljs.core.nth.call(null, vec__13319, 0, null);
          var wmax = cljs.core.nth.call(null, vec__13319, 1, null);
          var vec__13320 = cljs.core.truth_(self__.du) ? cljs.core.logic.fd.bounds.call(null, self__.du) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.dw) - cljs.core.logic.fd._ub.call(null, self__.dv), cljs.core.logic.fd._ub.call(null, self__.dw) - cljs.core.logic.fd._lb.call(null, self__.dv)], null);
          var umin = cljs.core.nth.call(null, vec__13320, 0, null);
          var umax = cljs.core.nth.call(null, vec__13320, 1, null);
          var vec__13321 = cljs.core.truth_(self__.dv) ? cljs.core.logic.fd.bounds.call(null, self__.dv) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.dw) - cljs.core.logic.fd._ub.call(null, self__.du), cljs.core.logic.fd._ub.call(null, self__.dw) - cljs.core.logic.fd._lb.call(null, self__.du)], null);
          var vmin = cljs.core.nth.call(null, vec__13321, 0, null);
          var vmax = cljs.core.nth.call(null, vec__13321, 1, null);
          var wi = cljs.core.logic.fd.interval.call(null, umin + vmin, umax + vmax);
          var ui = cljs.core.logic.fd.interval.call(null, wmin - vmax, wmax - vmin);
          var vi = cljs.core.logic.fd.interval.call(null, wmin - umax, wmax - umin);
          var temp__4094__auto__ = cljs.core.truth_(function() {
            var and__9129__auto__ = wi;
            if(cljs.core.truth_(and__9129__auto__)) {
              return self__.dw
            }else {
              return and__9129__auto__
            }
          }()) ? cljs.core.logic.fd._intersection.call(null, wi, self__.dw) : wi;
          if(cljs.core.truth_(temp__4094__auto__)) {
            var wi__$1 = temp__4094__auto__;
            var temp__4094__auto____$1 = cljs.core.truth_(function() {
              var and__9129__auto__ = ui;
              if(cljs.core.truth_(and__9129__auto__)) {
                return self__.du
              }else {
                return and__9129__auto__
              }
            }()) ? cljs.core.logic.fd._intersection.call(null, ui, self__.du) : ui;
            if(cljs.core.truth_(temp__4094__auto____$1)) {
              var ui__$1 = temp__4094__auto____$1;
              var temp__4094__auto____$2 = cljs.core.truth_(function() {
                var and__9129__auto__ = vi;
                if(cljs.core.truth_(and__9129__auto__)) {
                  return self__.dv
                }else {
                  return and__9129__auto__
                }
              }()) ? cljs.core.logic.fd._intersection.call(null, vi, self__.dv) : vi;
              if(cljs.core.truth_(temp__4094__auto____$2)) {
                var vi__$1 = temp__4094__auto____$2;
                if(!cljs.core.every_QMARK_.call(null, cljs.core.logic.fd.singleton_dom_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [wi__$1, ui__$1, vi__$1], null)) || cljs.core._EQ_.call(null, ui__$1 + vi__$1, wi__$1)) {
                  return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.w, wi__$1, self__.dw), cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, ui__$1, self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, vi__$1, self__.dv))).call(null, s__$2)
                }else {
                  return null
                }
              }else {
                return null
              }
            }else {
              return null
            }
          }else {
            return null
          }
        };
        cljs.core.logic.fd.t13312.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13314) {
          var self__ = this;
          var _13314__$1 = this;
          return self__.meta13313
        };
        cljs.core.logic.fd.t13312.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13314, meta13313__$1) {
          var self__ = this;
          var _13314__$1 = this;
          return new cljs.core.logic.fd.t13312(self__.v, self__.meta13310, self__.w, self__.u, self__.s, self__._PLUS_c, self__.du, self__.dw, self__.dv, self__.this$, meta13313__$1)
        };
        cljs.core.logic.fd.__GT_t13312 = function __GT_t13312(v__$2, meta13310__$1, w__$2, u__$2, s__$1, _PLUS_c__$2, du__$1, dw__$1, dv__$1, this$__$2, meta13313) {
          return new cljs.core.logic.fd.t13312(v__$2, meta13310__$1, w__$2, u__$2, s__$1, _PLUS_c__$2, du__$1, dw__$1, dv__$1, this$__$2, meta13313)
        }
      }
      return new cljs.core.logic.fd.t13312(self__.v, self__.meta13310, self__.w, self__.u, s, self__._PLUS_c, du, dw, dv, this$__$1, null)
    };
    cljs.core.logic.fd.t13309.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13309.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13311) {
      var self__ = this;
      var _13311__$1 = this;
      return self__.meta13310
    };
    cljs.core.logic.fd.t13309.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13311, meta13310__$1) {
      var self__ = this;
      var _13311__$1 = this;
      return new cljs.core.logic.fd.t13309(self__.w, self__.v, self__.u, self__._PLUS_c, meta13310__$1)
    };
    cljs.core.logic.fd.__GT_t13309 = function __GT_t13309(w__$1, v__$1, u__$1, _PLUS_c__$1, meta13310) {
      return new cljs.core.logic.fd.t13309(w__$1, v__$1, u__$1, _PLUS_c__$1, meta13310)
    }
  }
  return new cljs.core.logic.fd.t13309(w, v, u, _PLUS_c, null)
};
cljs.core.logic.fd._PLUS_ = function _PLUS_(u, v, w) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._PLUS_c.call(null, u, v, w))
};
cljs.core.logic.fd._ = function _(u, v, w) {
  return cljs.core.logic.fd._PLUS_.call(null, v, w, u)
};
cljs.core.logic.fd._STAR_c = function _STAR_c(u, v, w) {
  var safe_div = function safe_div(n, c, a, t) {
    if(n === 0) {
      return c
    }else {
      var q = cljs.core.quot.call(null, a, n);
      var G__13338 = t;
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "upper", "upper", 1125403668), G__13338)) {
        return q
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "lower", "lower", 1117068915), G__13338)) {
          if(cljs.core.rem.call(null, a, n) > 0) {
            return q + 1
          }else {
            return q
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(t)].join(""));
          }else {
            return null
          }
        }
      }
    }
  };
  if(typeof cljs.core.logic.fd.t13339 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13339 = function(safe_div, w, v, u, _STAR_c, meta13340) {
      this.safe_div = safe_div;
      this.w = w;
      this.v = v;
      this.u = u;
      this._STAR_c = _STAR_c;
      this.meta13340 = meta13340;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13339.cljs$lang$type = true;
    cljs.core.logic.fd.t13339.cljs$lang$ctorStr = "cljs.core.logic.fd/t13339";
    cljs.core.logic.fd.t13339.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13339")
    };
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.core.logic", "fd", "cljs.core.logic/fd", 3673845947), null, new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "*", "cljs.core.logic.fd/*", 1528484146, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 922), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 922), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 40)))))
    };
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.u, self__.v, self__.w], null)
    };
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var du = cljs.core.logic.get_dom_fd.call(null, s, self__.u);
      var dv = cljs.core.logic.get_dom_fd.call(null, s, self__.v);
      var dw = cljs.core.logic.get_dom_fd.call(null, s, self__.w);
      if(typeof cljs.core.logic.fd.t13342 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13342 = function(v, w, u, s, meta13340, du, _STAR_c, dw, dv, safe_div, this$, meta13343) {
          this.v = v;
          this.w = w;
          this.u = u;
          this.s = s;
          this.meta13340 = meta13340;
          this.du = du;
          this._STAR_c = _STAR_c;
          this.dw = dw;
          this.dv = dv;
          this.safe_div = safe_div;
          this.this$ = this$;
          this.meta13343 = meta13343;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13342.cljs$lang$type = true;
        cljs.core.logic.fd.t13342.cljs$lang$ctorStr = "cljs.core.logic.fd/t13342";
        cljs.core.logic.fd.t13342.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13342")
        };
        cljs.core.logic.fd.t13342.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13342.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.truth_(self__.du)) {
            var or__9141__auto__ = self__.dv;
            if(cljs.core.truth_(or__9141__auto__)) {
              return or__9141__auto__
            }else {
              return self__.dw
            }
          }else {
            if(cljs.core.truth_(self__.dv)) {
              var or__9141__auto__ = self__.du;
              if(cljs.core.truth_(or__9141__auto__)) {
                return or__9141__auto__
              }else {
                return self__.dw
              }
            }else {
              if(cljs.core.truth_(self__.dw)) {
                var or__9141__auto__ = self__.du;
                if(cljs.core.truth_(or__9141__auto__)) {
                  return or__9141__auto__
                }else {
                  return self__.dv
                }
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return false
                }else {
                  return null
                }
              }
            }
          }
        };
        cljs.core.logic.fd.t13342.prototype.cljs$core$logic$protocols$IEntailed$ = true;
        cljs.core.logic.fd.t13342.prototype.cljs$core$logic$protocols$IEntailed$_entailed_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.du) && cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.dv) && cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.dw) && cljs.core._EQ_.call(null, self__.du * self__.dv, self__.dw)
        };
        cljs.core.logic.fd.t13342.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var vec__13346 = cljs.core.truth_(self__.dw) ? cljs.core.logic.fd.bounds.call(null, self__.dw) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.du) * cljs.core.logic.fd._lb.call(null, self__.dv), cljs.core.logic.fd._ub.call(null, self__.du) * cljs.core.logic.fd._ub.call(null, self__.dv)], null);
          var wmin = cljs.core.nth.call(null, vec__13346, 0, null);
          var wmax = cljs.core.nth.call(null, vec__13346, 1, null);
          var vec__13347 = cljs.core.truth_(self__.du) ? cljs.core.logic.fd.bounds.call(null, self__.du) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.safe_div.call(null, cljs.core.logic.fd._ub.call(null, self__.dv), cljs.core.logic.fd._lb.call(null, self__.dw), cljs.core.logic.fd._lb.call(null, self__.dw), new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, cljs.core.logic.fd._lb.call(null, self__.dv), cljs.core.logic.fd._lb.call(null, 
          self__.dw), cljs.core.logic.fd._ub.call(null, self__.dw), new cljs.core.Keyword(null, "upper", "upper", 1125403668))], null);
          var umin = cljs.core.nth.call(null, vec__13347, 0, null);
          var umax = cljs.core.nth.call(null, vec__13347, 1, null);
          var vec__13348 = cljs.core.truth_(self__.dv) ? cljs.core.logic.fd.bounds.call(null, self__.dv) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.safe_div.call(null, cljs.core.logic.fd._ub.call(null, self__.du), cljs.core.logic.fd._lb.call(null, self__.dw), cljs.core.logic.fd._lb.call(null, self__.dw), new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, cljs.core.logic.fd._lb.call(null, self__.du), cljs.core.logic.fd._lb.call(null, 
          self__.dw), cljs.core.logic.fd._ub.call(null, self__.dw), new cljs.core.Keyword(null, "upper", "upper", 1125403668))], null);
          var vmin = cljs.core.nth.call(null, vec__13348, 0, null);
          var vmax = cljs.core.nth.call(null, vec__13348, 1, null);
          var wi = cljs.core.logic.fd.interval.call(null, umin * vmin, umax * vmax);
          var ui = cljs.core.logic.fd.interval.call(null, self__.safe_div.call(null, vmax, umin, wmin, new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, vmin, umax, wmax, new cljs.core.Keyword(null, "upper", "upper", 1125403668)));
          var vi = cljs.core.logic.fd.interval.call(null, self__.safe_div.call(null, umax, vmin, wmin, new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, umin, vmax, wmax, new cljs.core.Keyword(null, "upper", "upper", 1125403668)));
          var temp__4094__auto__ = cljs.core.truth_(function() {
            var and__9129__auto__ = wi;
            if(cljs.core.truth_(and__9129__auto__)) {
              return self__.dw
            }else {
              return and__9129__auto__
            }
          }()) ? cljs.core.logic.fd._intersection.call(null, wi, self__.dw) : wi;
          if(cljs.core.truth_(temp__4094__auto__)) {
            var wi__$1 = temp__4094__auto__;
            var temp__4094__auto____$1 = cljs.core.truth_(function() {
              var and__9129__auto__ = ui;
              if(cljs.core.truth_(and__9129__auto__)) {
                return self__.du
              }else {
                return and__9129__auto__
              }
            }()) ? cljs.core.logic.fd._intersection.call(null, ui, self__.du) : ui;
            if(cljs.core.truth_(temp__4094__auto____$1)) {
              var ui__$1 = temp__4094__auto____$1;
              var temp__4094__auto____$2 = cljs.core.truth_(function() {
                var and__9129__auto__ = vi;
                if(cljs.core.truth_(and__9129__auto__)) {
                  return self__.dv
                }else {
                  return and__9129__auto__
                }
              }()) ? cljs.core.logic.fd._intersection.call(null, vi, self__.dv) : vi;
              if(cljs.core.truth_(temp__4094__auto____$2)) {
                var vi__$1 = temp__4094__auto____$2;
                if(!cljs.core.every_QMARK_.call(null, cljs.core.logic.fd.singleton_dom_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [wi__$1, ui__$1, vi__$1], null)) || cljs.core._EQ_.call(null, ui__$1 * vi__$1, wi__$1)) {
                  return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.w, wi__$1, self__.dw), cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, ui__$1, self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, vi__$1, self__.dv))).call(null, s__$2)
                }else {
                  return null
                }
              }else {
                return null
              }
            }else {
              return null
            }
          }else {
            return null
          }
        };
        cljs.core.logic.fd.t13342.prototype.apply = function(self__, args13345) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13345)))
        };
        cljs.core.logic.fd.t13342.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          var vec__13349 = cljs.core.truth_(self__.dw) ? cljs.core.logic.fd.bounds.call(null, self__.dw) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.fd._lb.call(null, self__.du) * cljs.core.logic.fd._lb.call(null, self__.dv), cljs.core.logic.fd._ub.call(null, self__.du) * cljs.core.logic.fd._ub.call(null, self__.dv)], null);
          var wmin = cljs.core.nth.call(null, vec__13349, 0, null);
          var wmax = cljs.core.nth.call(null, vec__13349, 1, null);
          var vec__13350 = cljs.core.truth_(self__.du) ? cljs.core.logic.fd.bounds.call(null, self__.du) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.safe_div.call(null, cljs.core.logic.fd._ub.call(null, self__.dv), cljs.core.logic.fd._lb.call(null, self__.dw), cljs.core.logic.fd._lb.call(null, self__.dw), new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, cljs.core.logic.fd._lb.call(null, self__.dv), cljs.core.logic.fd._lb.call(null, 
          self__.dw), cljs.core.logic.fd._ub.call(null, self__.dw), new cljs.core.Keyword(null, "upper", "upper", 1125403668))], null);
          var umin = cljs.core.nth.call(null, vec__13350, 0, null);
          var umax = cljs.core.nth.call(null, vec__13350, 1, null);
          var vec__13351 = cljs.core.truth_(self__.dv) ? cljs.core.logic.fd.bounds.call(null, self__.dv) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.safe_div.call(null, cljs.core.logic.fd._ub.call(null, self__.du), cljs.core.logic.fd._lb.call(null, self__.dw), cljs.core.logic.fd._lb.call(null, self__.dw), new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, cljs.core.logic.fd._lb.call(null, self__.du), cljs.core.logic.fd._lb.call(null, 
          self__.dw), cljs.core.logic.fd._ub.call(null, self__.dw), new cljs.core.Keyword(null, "upper", "upper", 1125403668))], null);
          var vmin = cljs.core.nth.call(null, vec__13351, 0, null);
          var vmax = cljs.core.nth.call(null, vec__13351, 1, null);
          var wi = cljs.core.logic.fd.interval.call(null, umin * vmin, umax * vmax);
          var ui = cljs.core.logic.fd.interval.call(null, self__.safe_div.call(null, vmax, umin, wmin, new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, vmin, umax, wmax, new cljs.core.Keyword(null, "upper", "upper", 1125403668)));
          var vi = cljs.core.logic.fd.interval.call(null, self__.safe_div.call(null, umax, vmin, wmin, new cljs.core.Keyword(null, "lower", "lower", 1117068915)), self__.safe_div.call(null, umin, vmax, wmax, new cljs.core.Keyword(null, "upper", "upper", 1125403668)));
          var temp__4094__auto__ = cljs.core.truth_(function() {
            var and__9129__auto__ = wi;
            if(cljs.core.truth_(and__9129__auto__)) {
              return self__.dw
            }else {
              return and__9129__auto__
            }
          }()) ? cljs.core.logic.fd._intersection.call(null, wi, self__.dw) : wi;
          if(cljs.core.truth_(temp__4094__auto__)) {
            var wi__$1 = temp__4094__auto__;
            var temp__4094__auto____$1 = cljs.core.truth_(function() {
              var and__9129__auto__ = ui;
              if(cljs.core.truth_(and__9129__auto__)) {
                return self__.du
              }else {
                return and__9129__auto__
              }
            }()) ? cljs.core.logic.fd._intersection.call(null, ui, self__.du) : ui;
            if(cljs.core.truth_(temp__4094__auto____$1)) {
              var ui__$1 = temp__4094__auto____$1;
              var temp__4094__auto____$2 = cljs.core.truth_(function() {
                var and__9129__auto__ = vi;
                if(cljs.core.truth_(and__9129__auto__)) {
                  return self__.dv
                }else {
                  return and__9129__auto__
                }
              }()) ? cljs.core.logic.fd._intersection.call(null, vi, self__.dv) : vi;
              if(cljs.core.truth_(temp__4094__auto____$2)) {
                var vi__$1 = temp__4094__auto____$2;
                if(!cljs.core.every_QMARK_.call(null, cljs.core.logic.fd.singleton_dom_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [wi__$1, ui__$1, vi__$1], null)) || cljs.core._EQ_.call(null, ui__$1 * vi__$1, wi__$1)) {
                  return cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.w, wi__$1, self__.dw), cljs.core.logic.composeg.call(null, cljs.core.logic.fd.process_dom.call(null, self__.u, ui__$1, self__.du), cljs.core.logic.fd.process_dom.call(null, self__.v, vi__$1, self__.dv))).call(null, s__$2)
                }else {
                  return null
                }
              }else {
                return null
              }
            }else {
              return null
            }
          }else {
            return null
          }
        };
        cljs.core.logic.fd.t13342.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13344) {
          var self__ = this;
          var _13344__$1 = this;
          return self__.meta13343
        };
        cljs.core.logic.fd.t13342.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13344, meta13343__$1) {
          var self__ = this;
          var _13344__$1 = this;
          return new cljs.core.logic.fd.t13342(self__.v, self__.w, self__.u, self__.s, self__.meta13340, self__.du, self__._STAR_c, self__.dw, self__.dv, self__.safe_div, self__.this$, meta13343__$1)
        };
        cljs.core.logic.fd.__GT_t13342 = function __GT_t13342(v__$2, w__$2, u__$2, s__$1, meta13340__$1, du__$1, _STAR_c__$2, dw__$1, dv__$1, safe_div__$2, this$__$2, meta13343) {
          return new cljs.core.logic.fd.t13342(v__$2, w__$2, u__$2, s__$1, meta13340__$1, du__$1, _STAR_c__$2, dw__$1, dv__$1, safe_div__$2, this$__$2, meta13343)
        }
      }
      return new cljs.core.logic.fd.t13342(self__.v, self__.w, self__.u, s, self__.meta13340, du, self__._STAR_c, dw, dv, self__.safe_div, this$__$1, null)
    };
    cljs.core.logic.fd.t13339.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13339.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13341) {
      var self__ = this;
      var _13341__$1 = this;
      return self__.meta13340
    };
    cljs.core.logic.fd.t13339.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13341, meta13340__$1) {
      var self__ = this;
      var _13341__$1 = this;
      return new cljs.core.logic.fd.t13339(self__.safe_div, self__.w, self__.v, self__.u, self__._STAR_c, meta13340__$1)
    };
    cljs.core.logic.fd.__GT_t13339 = function __GT_t13339(safe_div__$1, w__$1, v__$1, u__$1, _STAR_c__$1, meta13340) {
      return new cljs.core.logic.fd.t13339(safe_div__$1, w__$1, v__$1, u__$1, _STAR_c__$1, meta13340)
    }
  }
  return new cljs.core.logic.fd.t13339(safe_div, w, v, u, _STAR_c, null)
};
cljs.core.logic.fd._STAR_ = function _STAR_(u, v, w) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._STAR_c.call(null, u, v, w))
};
cljs.core.logic.fd.quot = function quot(u, v, w) {
  return cljs.core.logic.fd._STAR_.call(null, v, w, u)
};
cljs.core.logic.fd._distinctc = function _distinctc(x, y_STAR_, n_STAR_) {
  if(typeof cljs.core.logic.fd.t13359 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13359 = function(n_STAR_, y_STAR_, x, _distinctc, meta13360) {
      this.n_STAR_ = n_STAR_;
      this.y_STAR_ = y_STAR_;
      this.x = x;
      this._distinctc = _distinctc;
      this.meta13360 = meta13360;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13359.cljs$lang$type = true;
    cljs.core.logic.fd.t13359.cljs$lang$ctorStr = "cljs.core.logic.fd/t13359";
    cljs.core.logic.fd.t13359.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13359")
    };
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "-distinct", "cljs.core.logic.fd/-distinct", 73212723, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 974), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 974), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 46)))))
    };
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x], null)
    };
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var x__$2 = cljs.core.logic.protocols.walk.call(null, s, self__.x);
      if(typeof cljs.core.logic.fd.t13362 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13362 = function(s, this$, meta13360, n_STAR_, y_STAR_, x, _distinctc, meta13363) {
          this.s = s;
          this.this$ = this$;
          this.meta13360 = meta13360;
          this.n_STAR_ = n_STAR_;
          this.y_STAR_ = y_STAR_;
          this.x = x;
          this._distinctc = _distinctc;
          this.meta13363 = meta13363;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13362.cljs$lang$type = true;
        cljs.core.logic.fd.t13362.cljs$lang$ctorStr = "cljs.core.logic.fd/t13362";
        cljs.core.logic.fd.t13362.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13362")
        };
        cljs.core.logic.fd.t13362.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13362.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.logic.fd.singleton_dom_QMARK_.call(null, self__.x)
        };
        cljs.core.logic.fd.t13362.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          if(cljs.core.truth_(self__.n_STAR_.call(null, self__.x))) {
            return null
          }else {
            var y_STAR___$3 = cljs.core.seq.call(null, self__.y_STAR_);
            var s__$3 = s__$2;
            while(true) {
              if(y_STAR___$3) {
                var y = cljs.core.first.call(null, y_STAR___$3);
                var v = function() {
                  var or__9141__auto__ = cljs.core.logic.fd.get_dom.call(null, s__$3, y);
                  if(cljs.core.truth_(or__9141__auto__)) {
                    return or__9141__auto__
                  }else {
                    return cljs.core.logic.protocols.walk.call(null, s__$3, y)
                  }
                }();
                var s__$4 = !cljs.core.logic.lvar_QMARK_.call(null, v) ? cljs.core._EQ_.call(null, self__.x, v) ? null : cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, v, self__.x)) ? cljs.core.logic.fd.process_dom.call(null, y, cljs.core.logic.fd._difference.call(null, v, self__.x), v).call(null, s__$3) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? s__$3 : null : s__$3;
                if(cljs.core.truth_(s__$4)) {
                  var G__13366 = cljs.core.next.call(null, y_STAR___$3);
                  var G__13367 = s__$4;
                  y_STAR___$3 = G__13366;
                  s__$3 = G__13367;
                  continue
                }else {
                  return null
                }
              }else {
                return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$3)
              }
              break
            }
          }
        };
        cljs.core.logic.fd.t13362.prototype.apply = function(self__, args13365) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13365)))
        };
        cljs.core.logic.fd.t13362.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          if(cljs.core.truth_(self__.n_STAR_.call(null, self__.x))) {
            return null
          }else {
            var y_STAR___$3 = cljs.core.seq.call(null, self__.y_STAR_);
            var s__$3 = s__$2;
            while(true) {
              if(y_STAR___$3) {
                var y = cljs.core.first.call(null, y_STAR___$3);
                var v = function() {
                  var or__9141__auto__ = cljs.core.logic.fd.get_dom.call(null, s__$3, y);
                  if(cljs.core.truth_(or__9141__auto__)) {
                    return or__9141__auto__
                  }else {
                    return cljs.core.logic.protocols.walk.call(null, s__$3, y)
                  }
                }();
                var s__$4 = !cljs.core.logic.lvar_QMARK_.call(null, v) ? cljs.core._EQ_.call(null, self__.x, v) ? null : cljs.core.truth_(cljs.core.logic.fd._member_QMARK_.call(null, v, self__.x)) ? cljs.core.logic.fd.process_dom.call(null, y, cljs.core.logic.fd._difference.call(null, v, self__.x), v).call(null, s__$3) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? s__$3 : null : s__$3;
                if(cljs.core.truth_(s__$4)) {
                  var G__13368 = cljs.core.next.call(null, y_STAR___$3);
                  var G__13369 = s__$4;
                  y_STAR___$3 = G__13368;
                  s__$3 = G__13369;
                  continue
                }else {
                  return null
                }
              }else {
                return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$3)
              }
              break
            }
          }
        };
        cljs.core.logic.fd.t13362.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13364) {
          var self__ = this;
          var _13364__$1 = this;
          return self__.meta13363
        };
        cljs.core.logic.fd.t13362.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13364, meta13363__$1) {
          var self__ = this;
          var _13364__$1 = this;
          return new cljs.core.logic.fd.t13362(self__.s, self__.this$, self__.meta13360, self__.n_STAR_, self__.y_STAR_, self__.x, self__._distinctc, meta13363__$1)
        };
        cljs.core.logic.fd.__GT_t13362 = function __GT_t13362(s__$1, this$__$2, meta13360__$1, n_STAR___$2, y_STAR___$2, x__$3, _distinctc__$2, meta13363) {
          return new cljs.core.logic.fd.t13362(s__$1, this$__$2, meta13360__$1, n_STAR___$2, y_STAR___$2, x__$3, _distinctc__$2, meta13363)
        }
      }
      return new cljs.core.logic.fd.t13362(s, this$__$1, self__.meta13360, self__.n_STAR_, self__.y_STAR_, x__$2, self__._distinctc, null)
    };
    cljs.core.logic.fd.t13359.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13359.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13361) {
      var self__ = this;
      var _13361__$1 = this;
      return self__.meta13360
    };
    cljs.core.logic.fd.t13359.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13361, meta13360__$1) {
      var self__ = this;
      var _13361__$1 = this;
      return new cljs.core.logic.fd.t13359(self__.n_STAR_, self__.y_STAR_, self__.x, self__._distinctc, meta13360__$1)
    };
    cljs.core.logic.fd.__GT_t13359 = function __GT_t13359(n_STAR___$1, y_STAR___$1, x__$1, _distinctc__$1, meta13360) {
      return new cljs.core.logic.fd.t13359(n_STAR___$1, y_STAR___$1, x__$1, _distinctc__$1, meta13360)
    }
  }
  return new cljs.core.logic.fd.t13359(n_STAR_, y_STAR_, x, _distinctc, null)
};
cljs.core.logic.fd._distinct = function _distinct(x, y_STAR_, n_STAR_) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd._distinctc.call(null, x, y_STAR_, n_STAR_))
};
cljs.core.logic.fd.list_sorted_QMARK_ = function list_sorted_QMARK_(pred, ls) {
  if(cljs.core.empty_QMARK_.call(null, ls)) {
    return true
  }else {
    var f = cljs.core.first.call(null, ls);
    var ls__$1 = cljs.core.next.call(null, ls);
    while(true) {
      if(ls__$1) {
        var s = cljs.core.first.call(null, ls__$1);
        if(cljs.core.truth_(pred.call(null, f, s))) {
          var G__13370 = s;
          var G__13371 = cljs.core.next.call(null, ls__$1);
          f = G__13370;
          ls__$1 = G__13371;
          continue
        }else {
          return false
        }
      }else {
        return true
      }
      break
    }
  }
};
cljs.core.logic.fd.distinctc = function distinctc(v_STAR_) {
  if(typeof cljs.core.logic.fd.t13381 !== "undefined") {
  }else {
    cljs.core.logic.fd.t13381 = function(v_STAR_, distinctc, meta13382) {
      this.v_STAR_ = v_STAR_;
      this.distinctc = distinctc;
      this.meta13382 = meta13382;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.fd.t13381.cljs$lang$type = true;
    cljs.core.logic.fd.t13381.cljs$lang$ctorStr = "cljs.core.logic.fd/t13381";
    cljs.core.logic.fd.t13381.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13381")
    };
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "distinct", "cljs.core.logic.fd/distinct", 1952820740, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1023), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1023), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 45)))))
    };
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.v_STAR_], null)
    };
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var v_STAR___$2 = cljs.core.logic.protocols.walk.call(null, s, self__.v_STAR_);
      if(typeof cljs.core.logic.fd.t13384 !== "undefined") {
      }else {
        cljs.core.logic.fd.t13384 = function(s, this$, meta13382, v_STAR_, distinctc, meta13385) {
          this.s = s;
          this.this$ = this$;
          this.meta13382 = meta13382;
          this.v_STAR_ = v_STAR_;
          this.distinctc = distinctc;
          this.meta13385 = meta13385;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.fd.t13384.cljs$lang$type = true;
        cljs.core.logic.fd.t13384.cljs$lang$ctorStr = "cljs.core.logic.fd/t13384";
        cljs.core.logic.fd.t13384.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.fd/t13384")
        };
        cljs.core.logic.fd.t13384.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.fd.t13384.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return!cljs.core.logic.lvar_QMARK_.call(null, self__.v_STAR_)
        };
        cljs.core.logic.fd.t13384.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var map__13388 = cljs.core.group_by.call(null, cljs.core.logic.lvar_QMARK_, self__.v_STAR_);
          var map__13388__$1 = cljs.core.seq_QMARK_.call(null, map__13388) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13388) : map__13388;
          var x_STAR_ = cljs.core.get.call(null, map__13388__$1, true);
          var n_STAR_ = cljs.core.get.call(null, map__13388__$1, false);
          var n_STAR___$1 = cljs.core.sort.call(null, core._LT_, n_STAR_);
          if(cljs.core.logic.fd.list_sorted_QMARK_.call(null, core._LT_, n_STAR___$1)) {
            var x_STAR___$1 = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, x_STAR_);
            var n_STAR___$2 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), n_STAR___$1);
            var xs = cljs.core.seq.call(null, x_STAR___$1);
            var s__$3 = s__$2;
            while(true) {
              if(xs) {
                var x = cljs.core.first.call(null, xs);
                var temp__4094__auto__ = cljs.core.logic.fd._distinct.call(null, x, cljs.core.disj.call(null, x_STAR___$1, x), n_STAR___$2).call(null, s__$3);
                if(cljs.core.truth_(temp__4094__auto__)) {
                  var s__$4 = temp__4094__auto__;
                  var G__13390 = cljs.core.next.call(null, xs);
                  var G__13391 = s__$4;
                  xs = G__13390;
                  s__$3 = G__13391;
                  continue
                }else {
                  return null
                }
              }else {
                return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$3)
              }
              break
            }
          }else {
            return null
          }
        };
        cljs.core.logic.fd.t13384.prototype.apply = function(self__, args13387) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13387)))
        };
        cljs.core.logic.fd.t13384.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          var map__13389 = cljs.core.group_by.call(null, cljs.core.logic.lvar_QMARK_, self__.v_STAR_);
          var map__13389__$1 = cljs.core.seq_QMARK_.call(null, map__13389) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13389) : map__13389;
          var x_STAR_ = cljs.core.get.call(null, map__13389__$1, true);
          var n_STAR_ = cljs.core.get.call(null, map__13389__$1, false);
          var n_STAR___$1 = cljs.core.sort.call(null, core._LT_, n_STAR_);
          if(cljs.core.logic.fd.list_sorted_QMARK_.call(null, core._LT_, n_STAR___$1)) {
            var x_STAR___$1 = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, x_STAR_);
            var n_STAR___$2 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), n_STAR___$1);
            var xs = cljs.core.seq.call(null, x_STAR___$1);
            var s__$3 = s__$2;
            while(true) {
              if(xs) {
                var x = cljs.core.first.call(null, xs);
                var temp__4094__auto__ = cljs.core.logic.fd._distinct.call(null, x, cljs.core.disj.call(null, x_STAR___$1, x), n_STAR___$2).call(null, s__$3);
                if(cljs.core.truth_(temp__4094__auto__)) {
                  var s__$4 = temp__4094__auto__;
                  var G__13392 = cljs.core.next.call(null, xs);
                  var G__13393 = s__$4;
                  xs = G__13392;
                  s__$3 = G__13393;
                  continue
                }else {
                  return null
                }
              }else {
                return cljs.core.logic.remcg.call(null, self__.this$).call(null, s__$3)
              }
              break
            }
          }else {
            return null
          }
        };
        cljs.core.logic.fd.t13384.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13386) {
          var self__ = this;
          var _13386__$1 = this;
          return self__.meta13385
        };
        cljs.core.logic.fd.t13384.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13386, meta13385__$1) {
          var self__ = this;
          var _13386__$1 = this;
          return new cljs.core.logic.fd.t13384(self__.s, self__.this$, self__.meta13382, self__.v_STAR_, self__.distinctc, meta13385__$1)
        };
        cljs.core.logic.fd.__GT_t13384 = function __GT_t13384(s__$1, this$__$2, meta13382__$1, v_STAR___$3, distinctc__$2, meta13385) {
          return new cljs.core.logic.fd.t13384(s__$1, this$__$2, meta13382__$1, v_STAR___$3, distinctc__$2, meta13385)
        }
      }
      return new cljs.core.logic.fd.t13384(s, this$__$1, self__.meta13382, v_STAR___$2, self__.distinctc, null)
    };
    cljs.core.logic.fd.t13381.prototype.cljs$core$logic$protocols$IEnforceableConstraint$ = true;
    cljs.core.logic.fd.t13381.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13383) {
      var self__ = this;
      var _13383__$1 = this;
      return self__.meta13382
    };
    cljs.core.logic.fd.t13381.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13383, meta13382__$1) {
      var self__ = this;
      var _13383__$1 = this;
      return new cljs.core.logic.fd.t13381(self__.v_STAR_, self__.distinctc, meta13382__$1)
    };
    cljs.core.logic.fd.__GT_t13381 = function __GT_t13381(v_STAR___$1, distinctc__$1, meta13382) {
      return new cljs.core.logic.fd.t13381(v_STAR___$1, distinctc__$1, meta13382)
    }
  }
  return new cljs.core.logic.fd.t13381(v_STAR_, distinctc, null)
};
cljs.core.logic.fd.distinct = function distinct(v_STAR_) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.fd.distinctc.call(null, v_STAR_))
};
cljs.core.logic.fd.bounded_listo = function bounded_listo(l, n) {
  return function(a13411) {
    return function _inc() {
      return cljs.core.logic.protocols.mplus.call(null, cljs.core.logic.protocols.bind.call(null, a13411, function(a__8595__auto__) {
        return function _inc__$1() {
          return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.List.EMPTY, l)), cljs.core.logic.fd._LT__EQ_.call(null, 0, n))
        }
      }), function() {
        return cljs.core.logic.protocols.bind.call(null, a13411, function(a__8595__auto__) {
          return function _inc__$1() {
            var t = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "t", "t", -1640531411, null));
            var h = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "h", "h", -1640531423, null));
            return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, cljs.core.logic.lcons.call(null, h, t), l)), function(a__8595__auto____$1) {
              return function _inc__$1() {
                return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto____$1, cljs.core.logic._EQ__EQ_.call(null, n, n)), function(a__8595__auto____$2) {
                  return function _inc__$1() {
                    var m = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "m", "m", -1640531418, null));
                    return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto____$2, function() {
                      var dom_13427 = cljs.core.logic.fd.interval.call(null, 0, Number.MAX_VALUE);
                      return function(a__8595__auto____$3) {
                        return function _inc__$1() {
                          return cljs.core.logic.protocols.bind.call(null, a__8595__auto____$3, cljs.core.logic.fd.dom.call(null, m, dom_13427))
                        }
                      }
                    }()), cljs.core.logic.fd._PLUS_.call(null, m, 1, n)), bounded_listo.call(null, t, m))
                  }
                })
              }
            })
          }
        })
      })
    }
  }
};
cljs.core.logic.fd.binops__GT_fd = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "+", "+", -1640531484, null), new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, "-", "-", -1640531482, null), new cljs.core.Symbol(null, "/", "/", -1640531480, null), new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), new cljs.core.Symbol(null, "!\x3d", "!\x3d", -1640530443, null), new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, 
"\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", -1640529544, null), new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", -1640529606, null)], [new cljs.core.Symbol("cljs.core.logic.fd", "+", "cljs.core.logic.fd/+", 1528484149, null), new cljs.core.Symbol("cljs.core.logic.fd", "*", "cljs.core.logic.fd/*", 1528484146, null), new cljs.core.Symbol("cljs.core.logic.fd", "-", "cljs.core.logic.fd/-", 1528484151, null), new cljs.core.Symbol("cljs.core.logic.fd", "quot", 
"cljs.core.logic.fd/quot", 1533391379, null), new cljs.core.Symbol("cljs.core.logic.fd", "\x3c", "cljs.core.logic.fd/\x3c", 1528484292, null), new cljs.core.Symbol("cljs.core.logic.fd", "!\x3d", "cljs.core.logic.fd/!\x3d", 1528485316, null), new cljs.core.Symbol("cljs.core.logic.fd", "\x3d\x3d", "cljs.core.logic.fd/\x3d\x3d", 1528485544, null), new cljs.core.Symbol("cljs.core.logic.fd", "\x3e", "cljs.core.logic.fd/\x3e", 1528484294, null), new cljs.core.Symbol("cljs.core.logic.fd", "\x3e\x3d", "cljs.core.logic.fd/\x3e\x3d", 
1528482121, null), new cljs.core.Symbol("cljs.core.logic.fd", "\x3c\x3d", "cljs.core.logic.fd/\x3c\x3d", 1528485515, null)]);
cljs.core.logic.fd.binops = cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.logic.fd.binops__GT_fd));
cljs.core.logic.fd.expand = function expand(form) {
  if(cljs.core.seq_QMARK_.call(null, form)) {
    var vec__13429 = form;
    var op = cljs.core.nth.call(null, vec__13429, 0, null);
    var args = cljs.core.nthnext.call(null, vec__13429, 1);
    if(cljs.core.truth_(function() {
      var and__9129__auto__ = cljs.core.logic.fd.binops.call(null, op);
      if(cljs.core.truth_(and__9129__auto__)) {
        return cljs.core.count.call(null, args) > 2
      }else {
        return and__9129__auto__
      }
    }())) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, expand.call(null, cljs.core.cons.call(null, op, cljs.core.rest.call(null, args)))), expand.call(null, cljs.core.first.call(null, args))), op)
    }else {
      return cljs.core.cons.call(null, op, cljs.core.map.call(null, expand, args))
    }
  }else {
    return form
  }
};
cljs.core.logic.fd.eq_STAR_ = function() {
  var eq_STAR_ = null;
  var eq_STAR___2 = function(form, vars) {
    return eq_STAR_.call(null, form, vars, null)
  };
  var eq_STAR___3 = function(form, vars, out) {
    if(cljs.core.seq_QMARK_.call(null, form)) {
      var vec__13433 = form;
      var op = cljs.core.nth.call(null, vec__13433, 0, null);
      var r1 = cljs.core.nth.call(null, vec__13433, 1, null);
      var r2 = cljs.core.nth.call(null, vec__13433, 2, null);
      var vec__13434 = cljs.core.seq_QMARK_.call(null, r1) ? function() {
        var s = cljs.core.gensym.call(null);
        cljs.core.swap_BANG_.call(null, vars, cljs.core.conj, s);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, true], null)
      }() : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r1, false], null);
      var outl = cljs.core.nth.call(null, vec__13434, 0, null);
      var outlv_QMARK_ = cljs.core.nth.call(null, vec__13434, 1, null);
      var vec__13435 = cljs.core.seq_QMARK_.call(null, r2) ? function() {
        var s = cljs.core.gensym.call(null);
        cljs.core.swap_BANG_.call(null, vars, cljs.core.conj, s);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, true], null)
      }() : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r2, false], null);
      var outr = cljs.core.nth.call(null, vec__13435, 0, null);
      var outrv_QMARK_ = cljs.core.nth.call(null, vec__13435, 1, null);
      var op__$1 = cljs.core.logic.fd.binops__GT_fd.call(null, op);
      return cljs.core.cons.call(null, cljs.core.truth_(out) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, out), outr), outl), op__$1) : cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, outr), outl), op__$1), cljs.core.concat.call(null, cljs.core.seq_QMARK_.call(null, r1) ? eq_STAR_.call(null, r1, vars, cljs.core.truth_(outlv_QMARK_) ? outl : null) : null, cljs.core.seq_QMARK_.call(null, 
      r2) ? eq_STAR_.call(null, r2, vars, cljs.core.truth_(outrv_QMARK_) ? outr : null) : null))
    }else {
      return form
    }
  };
  eq_STAR_ = function(form, vars, out) {
    switch(arguments.length) {
      case 2:
        return eq_STAR___2.call(this, form, vars);
      case 3:
        return eq_STAR___3.call(this, form, vars, out)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  eq_STAR_.cljs$core$IFn$_invoke$arity$2 = eq_STAR___2;
  eq_STAR_.cljs$core$IFn$_invoke$arity$3 = eq_STAR___3;
  return eq_STAR_
}();
cljs.core.logic.fd.__GT_fd = function __GT_fd(vars, exprs) {
  return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.fd", "fresh", "cljs.core.logic.fd/fresh", 1623660598, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, 1099), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1099), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, 10)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, cljs.core.apply.call(null, cljs.core.vector, cljs.core.seq.call(null, cljs.core.concat.call(null, vars))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1099), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 11), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1099), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 19)))))), cljs.core.reverse.call(null, 
  exprs))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1099), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 1100), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 24)))))
};
cljs.core.logic.fd.eq_form = function eq_form(form) {
  var vars = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  var exprs = cljs.core.logic.fd.eq_STAR_.call(null, cljs.core.logic.fd.expand.call(null, form), vars);
  return cljs.core.logic.fd.__GT_fd.call(null, cljs.core.deref.call(null, vars), exprs)
};
goog.provide("cljs.core.logic.dcg");
goog.require("cljs.core");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.core.logic.protocols");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core");
cljs.core.logic.dcg.__GT_lcons = function() {
  var __GT_lcons = null;
  var __GT_lcons__3 = function(env, p__13138, i) {
    var vec__13142 = p__13138;
    var m = cljs.core.nth.call(null, vec__13142, 0, null);
    var c = vec__13142;
    return __GT_lcons.call(null, env, c, i, false)
  };
  var __GT_lcons__4 = function(env, p__13139, i, quoted) {
    var vec__13143 = p__13139;
    var m = cljs.core.nth.call(null, vec__13143, 0, null);
    var c = vec__13143;
    if(cljs.core.empty_QMARK_.call(null, c)) {
      return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "fresh", "cljs.core.logic.dcg/fresh", 1129292213, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 25)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, cljs.core.apply.call(null, cljs.core.vector, cljs.core.seq.call(null, cljs.core.concat.call(null))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 28)))))), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "\x3d\x3d", "cljs.core.logic.dcg/\x3d\x3d", -1197280473, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 24), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 22), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 24), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 24)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, env.call(null, i - 1)), cljs.core._conj.call(null, cljs.core.List.EMPTY, env.call(null, i)))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 24), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
      new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 24), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 49)))))))), cljs.core.apply.call(null, cljs.core.hash_map, 
      cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 19), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, 24), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 50)))))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var m__$1 = cljs.core.truth_(quoted) ? cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, 25), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 34), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 25), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, 39)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, m))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 25), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        33), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 25), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 43))))) : m;
        return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "\x3d\x3d", "cljs.core.logic.dcg/\x3d\x3d", -1197280473, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 17), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, 19)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, env.call(null, i - 1)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "lcons", "cljs.core.logic.dcg/lcons", 1115832794, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 36), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 41)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, m__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, env.call(null, i)))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 
        1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 35), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", 
        "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 54)))))))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        16), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 26), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 55)))))
      }else {
        return null
      }
    }
  };
  __GT_lcons = function(env, p__13139, i, quoted) {
    switch(arguments.length) {
      case 3:
        return __GT_lcons__3.call(this, env, p__13139, i);
      case 4:
        return __GT_lcons__4.call(this, env, p__13139, i, quoted)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_lcons.cljs$core$IFn$_invoke$arity$3 = __GT_lcons__3;
  __GT_lcons.cljs$core$IFn$_invoke$arity$4 = __GT_lcons__4;
  return __GT_lcons
}();
cljs.core.logic.dcg.lsym = function lsym(n) {
  return cljs.core.gensym.call(null, [cljs.core.str("l"), cljs.core.str(n), cljs.core.str("_")].join(""))
};
cljs.core.logic.dcg._BANG_dcg_QMARK_ = function _BANG_dcg_QMARK_(clause) {
  var and__9129__auto__ = cljs.core.sequential_QMARK_.call(null, clause);
  if(and__9129__auto__) {
    var f = cljs.core.first.call(null, clause);
    return f instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, cljs.core.name.call(null, f), "!dcg")
  }else {
    return and__9129__auto__
  }
};
cljs.core.logic.dcg.fresh_expr_QMARK_ = function fresh_expr_QMARK_(clause) {
  var and__9129__auto__ = cljs.core.seq_QMARK_.call(null, clause);
  if(and__9129__auto__) {
    var f = cljs.core.first.call(null, clause);
    return f instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, cljs.core.name.call(null, f), "fresh")
  }else {
    return and__9129__auto__
  }
};
cljs.core.logic.dcg.mark_clauses = function() {
  var mark_clauses = null;
  var mark_clauses__1 = function(cs) {
    return mark_clauses.call(null, cs, cljs.core.atom.call(null, 0))
  };
  var mark_clauses__2 = function(p__13144, i) {
    var vec__13146 = p__13144;
    var c = cljs.core.nth.call(null, vec__13146, 0, null);
    var r = cljs.core.nthnext.call(null, vec__13146, 1);
    var cs = vec__13146;
    if(cljs.core.seq.call(null, cs) == null) {
      return cljs.core.List.EMPTY
    }else {
      if(cljs.core.logic.dcg.fresh_expr_QMARK_.call(null, c)) {
        return cljs.core.cons.call(null, cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "fresh", "cljs.core.logic.dcg/fresh", 1129292213, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, 48), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 31), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 48), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 
        3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 36)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.second.call(null, c)), mark_clauses.call(null, cljs.core.drop.call(null, 2, c), i))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 48), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 30), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 49), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 62))))), mark_clauses.call(null, 
        r, i))
      }else {
        if(cljs.core.logic.dcg._BANG_dcg_QMARK_.call(null, c)) {
          return cljs.core.cons.call(null, c, mark_clauses.call(null, r, i))
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.cons.call(null, cljs.core.with_meta.call(null, c, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "index", "index", 1114250308), cljs.core.swap_BANG_.call(null, i, cljs.core.inc)], null)), mark_clauses.call(null, r, i))
          }else {
            return null
          }
        }
      }
    }
  };
  mark_clauses = function(p__13144, i) {
    switch(arguments.length) {
      case 1:
        return mark_clauses__1.call(this, p__13144);
      case 2:
        return mark_clauses__2.call(this, p__13144, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mark_clauses.cljs$core$IFn$_invoke$arity$1 = mark_clauses__1;
  mark_clauses.cljs$core$IFn$_invoke$arity$2 = mark_clauses__2;
  return mark_clauses
}();
cljs.core.logic.dcg.handle_clauses = function handle_clauses(env, p__13147) {
  var vec__13149 = p__13147;
  var c = cljs.core.nth.call(null, vec__13149, 0, null);
  var r = cljs.core.nthnext.call(null, vec__13149, 1);
  var cs = vec__13149;
  if(cljs.core.seq.call(null, cs) == null) {
    return cljs.core.List.EMPTY
  }else {
    if(cljs.core.logic.dcg.fresh_expr_QMARK_.call(null, c)) {
      return cljs.core.cons.call(null, cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "fresh", "cljs.core.logic.dcg/fresh", 1129292213, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 59), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 28), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 59), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, 33)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.second.call(null, c)), handle_clauses.call(null, env, cljs.core.drop.call(null, 2, c)))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 59), cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 27), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 60), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 63))))), handle_clauses.call(null, 
      env, r))
    }else {
      if(cljs.core.logic.dcg._BANG_dcg_QMARK_.call(null, c)) {
        return cljs.core.cons.call(null, cljs.core.second.call(null, c), handle_clauses.call(null, env, r))
      }else {
        if(cljs.core.vector_QMARK_.call(null, c)) {
          return cljs.core.cons.call(null, cljs.core.logic.dcg.__GT_lcons.call(null, env, c, (new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c))), handle_clauses.call(null, env, r))
        }else {
          if(cljs.core.seq_QMARK_.call(null, c) && cljs.core._EQ_.call(null, cljs.core.first.call(null, c), cljs.core.with_meta.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 66), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
          new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 23), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 66), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 28)))))) && cljs.core.vector_QMARK_.call(null, 
          cljs.core.second.call(null, c))) {
            return cljs.core.cons.call(null, cljs.core.logic.dcg.__GT_lcons.call(null, env, cljs.core.second.call(null, c), (new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c)), true), handle_clauses.call(null, env, r))
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              var i = (new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
              var c__$1 = cljs.core.seq_QMARK_.call(null, c) ? c : cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
              return cljs.core.cons.call(null, cljs.core.concat.call(null, c__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env.call(null, i - 1), env.call(null, i)], null)), handle_clauses.call(null, env, r))
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.logic.dcg.handle_cclause = function handle_cclause(fsym, osym, cclause) {
  var c = cljs.core.logic.dcg.count_clauses.call(null, cclause);
  var r = cljs.core.range.call(null, 2, c + 1);
  var lsyms = cljs.core.conj.call(null, cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fsym], null), cljs.core.map.call(null, cljs.core.logic.dcg.lsym, r)), osym);
  var clauses = cljs.core.logic.dcg.mark_clauses.call(null, cclause);
  var clauses__$1 = cljs.core.logic.dcg.handle_clauses.call(null, lsyms, clauses);
  return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.dcg", "fresh", "cljs.core.logic.dcg/fresh", 1129292213, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, 80), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 7), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 80), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, 12)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.with_meta.call(null, cljs.core.apply.call(null, cljs.core.vector, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.butlast.call(null, cljs.core.rest.call(null, lsyms))))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, 80), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 13), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 80), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, 39)))))), clauses__$1)), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 80), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 6), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 81), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18)))))
};
goog.provide("cljs.core.logic.pldb");
goog.require("cljs.core");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
cljs.core.logic.pldb.empty_db = cljs.core.PersistentArrayMap.EMPTY;
cljs.core.logic.pldb.facts_for = function facts_for(dbs, kname) {
  return cljs.core.mapcat.call(null, function(p1__13490_SHARP_) {
    return cljs.core.get_in.call(null, p1__13490_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [kname, new cljs.core.Keyword("cljs.core.logic.pldb", "unindexed", "cljs.core.logic.pldb/unindexed", 3813484278)], null))
  }, dbs)
};
cljs.core.logic.pldb.facts_using_index = function facts_using_index(dbs, kname, index, val) {
  return cljs.core.mapcat.call(null, function(p1__13491_SHARP_) {
    return cljs.core.get_in.call(null, p1__13491_SHARP_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [kname, index, val], null))
  }, dbs)
};
cljs.core.logic.pldb.rel_key = function rel_key(rel) {
  if(rel instanceof cljs.core.Keyword) {
    return rel
  }else {
    return(new cljs.core.Keyword(null, "rel-name", "rel-name", 4706225841)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, rel))
  }
};
cljs.core.logic.pldb.rel_indexes = function rel_indexes(rel) {
  return(new cljs.core.Keyword(null, "indexes", "indexes", 2957196402)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, rel))
};
cljs.core.logic.pldb.indexed_QMARK_ = function indexed_QMARK_(v) {
  return(new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v)) === true
};
cljs.core.logic.pldb.contains_lvar_QMARK_ = function contains_lvar_QMARK_(x) {
  return cljs.core.some.call(null, cljs.core.logic.lvar_QMARK_, cljs.core.tree_seq.call(null, cljs.core.coll_QMARK_, cljs.core.seq, x))
};
cljs.core.logic.pldb.ground_QMARK_ = function ground_QMARK_(s, term) {
  return cljs.core.not.call(null, cljs.core.logic.pldb.contains_lvar_QMARK_.call(null, cljs.core.logic.walk_STAR_.call(null, s, term)))
};
cljs.core.logic.pldb.index_for_query = function index_for_query(s, q, indexes) {
  var indexable = cljs.core.map.call(null, function(p1__13492_SHARP_) {
    return cljs.core.logic.pldb.ground_QMARK_.call(null, s, p1__13492_SHARP_)
  }, q);
  var triples = cljs.core.map.call(null, cljs.core.vector, cljs.core.range.call(null), indexable, indexes);
  return cljs.core.first.call(null, function() {
    var iter__9829__auto__ = function iter__13501(s__13502) {
      return new cljs.core.LazySeq(null, function() {
        var s__13502__$1 = s__13502;
        while(true) {
          var temp__4094__auto__ = cljs.core.seq.call(null, s__13502__$1);
          if(temp__4094__auto__) {
            var s__13502__$2 = temp__4094__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__13502__$2)) {
              var c__9827__auto__ = cljs.core.chunk_first.call(null, s__13502__$2);
              var size__9828__auto__ = cljs.core.count.call(null, c__9827__auto__);
              var b__13504 = cljs.core.chunk_buffer.call(null, size__9828__auto__);
              if(function() {
                var i__13503 = 0;
                while(true) {
                  if(i__13503 < size__9828__auto__) {
                    var vec__13507 = cljs.core._nth.call(null, c__9827__auto__, i__13503);
                    var i = cljs.core.nth.call(null, vec__13507, 0, null);
                    var indexable__$1 = cljs.core.nth.call(null, vec__13507, 1, null);
                    var indexed = cljs.core.nth.call(null, vec__13507, 2, null);
                    if(cljs.core.truth_(function() {
                      var and__9129__auto__ = indexable__$1;
                      if(cljs.core.truth_(and__9129__auto__)) {
                        return indexed
                      }else {
                        return and__9129__auto__
                      }
                    }())) {
                      cljs.core.chunk_append.call(null, b__13504, i);
                      var G__13509 = i__13503 + 1;
                      i__13503 = G__13509;
                      continue
                    }else {
                      var G__13510 = i__13503 + 1;
                      i__13503 = G__13510;
                      continue
                    }
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13504), iter__13501.call(null, cljs.core.chunk_rest.call(null, s__13502__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13504), null)
              }
            }else {
              var vec__13508 = cljs.core.first.call(null, s__13502__$2);
              var i = cljs.core.nth.call(null, vec__13508, 0, null);
              var indexable__$1 = cljs.core.nth.call(null, vec__13508, 1, null);
              var indexed = cljs.core.nth.call(null, vec__13508, 2, null);
              if(cljs.core.truth_(function() {
                var and__9129__auto__ = indexable__$1;
                if(cljs.core.truth_(and__9129__auto__)) {
                  return indexed
                }else {
                  return and__9129__auto__
                }
              }())) {
                return cljs.core.cons.call(null, i, iter__13501.call(null, cljs.core.rest.call(null, s__13502__$2)))
              }else {
                var G__13511 = cljs.core.rest.call(null, s__13502__$2);
                s__13502__$1 = G__13511;
                continue
              }
            }
          }else {
            return null
          }
          break
        }
      }, null, null)
    };
    return iter__9829__auto__.call(null, triples)
  }())
};
cljs.core.logic.pldb.db_fact = function() {
  var db_fact__delegate = function(db, rel, args) {
    var key = cljs.core.logic.pldb.rel_key.call(null, rel);
    var add_to_set = function(key) {
      return function(current, new$) {
        return cljs.core.conj.call(null, function() {
          var or__9141__auto__ = current;
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return cljs.core.PersistentHashSet.EMPTY
          }
        }(), new$)
      }
    }(key);
    var db_with_fact = cljs.core.update_in.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, new cljs.core.Keyword("cljs.core.logic.pldb", "unindexed", "cljs.core.logic.pldb/unindexed", 3813484278)], null), function(key, add_to_set) {
      return function(p1__13512_SHARP_) {
        return add_to_set.call(null, p1__13512_SHARP_, args)
      }
    }(key, add_to_set));
    var indexes_to_update = cljs.core.map.call(null, cljs.core.vector, cljs.core.logic.pldb.rel_indexes.call(null, rel), cljs.core.range.call(null), args);
    var update_index_fn = function(key, add_to_set, db_with_fact, indexes_to_update) {
      return function(db__$1, p__13516) {
        var vec__13517 = p__13516;
        var is_indexed = cljs.core.nth.call(null, vec__13517, 0, null);
        var index_num = cljs.core.nth.call(null, vec__13517, 1, null);
        var val = cljs.core.nth.call(null, vec__13517, 2, null);
        if(cljs.core.truth_(is_indexed)) {
          return cljs.core.update_in.call(null, db__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, index_num, val], null), function(vec__13517, is_indexed, index_num, val, key, add_to_set, db_with_fact, indexes_to_update) {
            return function(p1__13513_SHARP_) {
              return add_to_set.call(null, p1__13513_SHARP_, args)
            }
          }(vec__13517, is_indexed, index_num, val, key, add_to_set, db_with_fact, indexes_to_update))
        }else {
          return db__$1
        }
      }
    }(key, add_to_set, db_with_fact, indexes_to_update);
    return cljs.core.reduce.call(null, update_index_fn, db_with_fact, indexes_to_update)
  };
  var db_fact = function(db, rel, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return db_fact__delegate.call(this, db, rel, args)
  };
  db_fact.cljs$lang$maxFixedArity = 2;
  db_fact.cljs$lang$applyTo = function(arglist__13518) {
    var db = cljs.core.first(arglist__13518);
    arglist__13518 = cljs.core.next(arglist__13518);
    var rel = cljs.core.first(arglist__13518);
    var args = cljs.core.rest(arglist__13518);
    return db_fact__delegate(db, rel, args)
  };
  db_fact.cljs$core$IFn$_invoke$arity$variadic = db_fact__delegate;
  return db_fact
}();
cljs.core.logic.pldb.db_retraction = function() {
  var db_retraction__delegate = function(db, rel, args) {
    var key = cljs.core.logic.pldb.rel_key.call(null, rel);
    var retract_args = function(key) {
      return function(p1__13519_SHARP_) {
        return cljs.core.disj.call(null, p1__13519_SHARP_, args)
      }
    }(key);
    var db_without_fact = cljs.core.update_in.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, new cljs.core.Keyword("cljs.core.logic.pldb", "unindexed", "cljs.core.logic.pldb/unindexed", 3813484278)], null), retract_args);
    var indexes_to_update = cljs.core.map.call(null, cljs.core.vector, cljs.core.logic.pldb.rel_indexes.call(null, rel), cljs.core.range.call(null), args);
    var remove_from_index_fn = function(key, retract_args, db_without_fact, indexes_to_update) {
      return function(db__$1, p__13522) {
        var vec__13523 = p__13522;
        var is_indexed = cljs.core.nth.call(null, vec__13523, 0, null);
        var index_num = cljs.core.nth.call(null, vec__13523, 1, null);
        var val = cljs.core.nth.call(null, vec__13523, 2, null);
        if(cljs.core.truth_(is_indexed)) {
          return cljs.core.update_in.call(null, db__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, index_num, val], null), retract_args)
        }else {
          return db__$1
        }
      }
    }(key, retract_args, db_without_fact, indexes_to_update);
    return cljs.core.reduce.call(null, remove_from_index_fn, db_without_fact, indexes_to_update)
  };
  var db_retraction = function(db, rel, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return db_retraction__delegate.call(this, db, rel, args)
  };
  db_retraction.cljs$lang$maxFixedArity = 2;
  db_retraction.cljs$lang$applyTo = function(arglist__13524) {
    var db = cljs.core.first(arglist__13524);
    arglist__13524 = cljs.core.next(arglist__13524);
    var rel = cljs.core.first(arglist__13524);
    var args = cljs.core.rest(arglist__13524);
    return db_retraction__delegate(db, rel, args)
  };
  db_retraction.cljs$core$IFn$_invoke$arity$variadic = db_retraction__delegate;
  return db_retraction
}();
cljs.core.logic.pldb.db_facts = function() {
  var db_facts__delegate = function(base_db, facts) {
    return cljs.core.reduce.call(null, function(p1__13525_SHARP_, p2__13526_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.logic.pldb.db_fact, p1__13525_SHARP_, p2__13526_SHARP_)
    }, base_db, facts)
  };
  var db_facts = function(base_db, var_args) {
    var facts = null;
    if(arguments.length > 1) {
      facts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return db_facts__delegate.call(this, base_db, facts)
  };
  db_facts.cljs$lang$maxFixedArity = 1;
  db_facts.cljs$lang$applyTo = function(arglist__13527) {
    var base_db = cljs.core.first(arglist__13527);
    var facts = cljs.core.rest(arglist__13527);
    return db_facts__delegate(base_db, facts)
  };
  db_facts.cljs$core$IFn$_invoke$arity$variadic = db_facts__delegate;
  return db_facts
}();
cljs.core.logic.pldb.db = function() {
  var db__delegate = function(facts) {
    return cljs.core.apply.call(null, cljs.core.logic.pldb.db_facts, cljs.core.logic.pldb.empty_db, facts)
  };
  var db = function(var_args) {
    var facts = null;
    if(arguments.length > 0) {
      facts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return db__delegate.call(this, facts)
  };
  db.cljs$lang$maxFixedArity = 0;
  db.cljs$lang$applyTo = function(arglist__13528) {
    var facts = cljs.core.seq(arglist__13528);
    return db__delegate(facts)
  };
  db.cljs$core$IFn$_invoke$arity$variadic = db__delegate;
  return db
}();
cljs.core.logic.pldb.db_retractions = function() {
  var db_retractions__delegate = function(base_db, retractions) {
    return cljs.core.reduce.call(null, function(p1__13529_SHARP_, p2__13530_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.logic.pldb.db_retraction, p1__13529_SHARP_, p2__13530_SHARP_)
    }, base_db, retractions)
  };
  var db_retractions = function(base_db, var_args) {
    var retractions = null;
    if(arguments.length > 1) {
      retractions = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return db_retractions__delegate.call(this, base_db, retractions)
  };
  db_retractions.cljs$lang$maxFixedArity = 1;
  db_retractions.cljs$lang$applyTo = function(arglist__13531) {
    var base_db = cljs.core.first(arglist__13531);
    var retractions = cljs.core.rest(arglist__13531);
    return db_retractions__delegate(base_db, retractions)
  };
  db_retractions.cljs$core$IFn$_invoke$arity$variadic = db_retractions__delegate;
  return db_retractions
}();
goog.provide("cljs.core.logic.nominal");
goog.require("cljs.core");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
cljs.core.logic.nominal.INomSwap = function() {
  var obj13437 = {};
  return obj13437
}();
cljs.core.logic.nominal.swap_noms = function swap_noms(t, swap, s) {
  if(function() {
    var and__9129__auto__ = t;
    if(and__9129__auto__) {
      return t.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3
    }else {
      return and__9129__auto__
    }
  }()) {
    return t.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3(t, swap, s)
  }else {
    var x__9739__auto__ = t == null ? null : t;
    return function() {
      var or__9141__auto__ = cljs.core.logic.nominal.swap_noms[goog.typeOf(x__9739__auto__)];
      if(or__9141__auto__) {
        return or__9141__auto__
      }else {
        var or__9141__auto____$1 = cljs.core.logic.nominal.swap_noms["_"];
        if(or__9141__auto____$1) {
          return or__9141__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INomSwap.swap-noms", t);
        }
      }
    }().call(null, t, swap, s)
  }
};
cljs.core.logic.nominal.nom_swap = function nom_swap(a, swap) {
  if(cljs.core._EQ_.call(null, a, cljs.core.first.call(null, swap))) {
    return cljs.core.second.call(null, swap)
  }else {
    if(cljs.core._EQ_.call(null, a, cljs.core.second.call(null, swap))) {
      return cljs.core.first.call(null, swap)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return a
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$logic$nominal$INomSwap$ = true;
cljs.core.PersistentVector.prototype.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3 = function(t, swap, s) {
  var t__$1 = this;
  var vec__13438 = cljs.core.logic.nominal.swap_noms.call(null, cljs.core.seq.call(null, t__$1), swap, s);
  var ts = cljs.core.nth.call(null, vec__13438, 0, null);
  var s__$1 = cljs.core.nth.call(null, vec__13438, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vec.call(null, ts), s__$1], null)
};
cljs.core.logic.LCons.prototype.cljs$core$logic$nominal$INomSwap$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3 = function(t, swap, s) {
  var t__$1 = this;
  var vec__13439 = cljs.core.logic.nominal.swap_noms.call(null, cljs.core.logic.protocols.lfirst.call(null, t__$1), swap, s);
  var tfirst = cljs.core.nth.call(null, vec__13439, 0, null);
  var s__$1 = cljs.core.nth.call(null, vec__13439, 1, null);
  var vec__13440 = cljs.core.logic.nominal.swap_noms.call(null, cljs.core.logic.protocols.lnext.call(null, t__$1), swap, s__$1);
  var tnext = cljs.core.nth.call(null, vec__13440, 0, null);
  var s__$2 = cljs.core.nth.call(null, vec__13440, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, cljs.core.logic.lcons.call(null, tfirst, tnext), cljs.core.meta.call(null, t__$1)), s__$2], null)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$nominal$INomSwap$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3 = function(t, swap, s) {
  var t__$1 = this;
  var t__$2 = cljs.core.logic.protocols.walk.call(null, s, t__$1);
  if(cljs.core.logic.lvar_QMARK_.call(null, t__$2)) {
    var v = cljs.core.with_meta.call(null, cljs.core.logic.lvar.call(null), cljs.core.meta.call(null, t__$2));
    var rt = cljs.core.logic.protocols.root_val.call(null, s, t__$2);
    var s__$1 = cljs.core.logic.nominal.suspc.call(null, v, t__$2, swap).call(null, cljs.core.logic.entangle.call(null, cljs.core.logic.subst_val_QMARK_.call(null, rt) ? cljs.core.logic.protocols.ext_no_check.call(null, s, v, rt) : s, t__$2, v));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, s__$1], null)
  }else {
    return cljs.core.logic.nominal.swap_noms.call(null, t__$2, swap, s)
  }
};
cljs.core.logic.nominal.INomSwap["_"] = true;
cljs.core.logic.nominal.swap_noms["_"] = function(t, swap, s) {
  if(cljs.core.coll_QMARK_.call(null, t)) {
    if(cljs.core.seq.call(null, t)) {
      var vec__13441 = cljs.core.logic.nominal.swap_noms.call(null, cljs.core.first.call(null, t), swap, s);
      var tfirst = cljs.core.nth.call(null, vec__13441, 0, null);
      var s__$1 = cljs.core.nth.call(null, vec__13441, 1, null);
      var vec__13442 = cljs.core.logic.nominal.swap_noms.call(null, cljs.core.next.call(null, t), swap, s__$1);
      var tnext = cljs.core.nth.call(null, vec__13442, 0, null);
      var s__$2 = cljs.core.nth.call(null, vec__13442, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, cljs.core.cons.call(null, tfirst, tnext), cljs.core.meta.call(null, t)), s__$2], null)
    }else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t, s], null)
    }
  }else {
    if(cljs.core.map_QMARK_.call(null, t)) {
      var vec__13443 = cljs.core.logic.nominal.swap_noms.call(null, cljs.core.seq.call(null, t), swap, s);
      var tkvs = cljs.core.nth.call(null, vec__13443, 0, null);
      var s__$1 = cljs.core.nth.call(null, vec__13443, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, tkvs), s__$1], null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t, s], null)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.nominal.INomSwap["null"] = true;
cljs.core.logic.nominal.swap_noms["null"] = function(t, swap, s) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t, s], null)
};
cljs.core.logic.nominal.Nom = function(lvar) {
  this.lvar = lvar;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2154168576
};
cljs.core.logic.nominal.Nom.cljs$lang$type = true;
cljs.core.logic.nominal.Nom.cljs$lang$ctorStr = "cljs.core.logic.nominal/Nom";
cljs.core.logic.nominal.Nom.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
  return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.nominal/Nom")
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$logic$protocols$IReifyTerm$ = true;
cljs.core.logic.nominal.Nom.prototype.cljs$core$logic$protocols$IReifyTerm$reify_term$arity$2 = function(v, s) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.logic.ext.call(null, s, v__$1, cljs.core.symbol.call(null, [cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "reify-noms", "reify-noms", 4368520701)).cljs$core$IFn$_invoke$arity$2(cljs.core.meta.call(null, s), true)) ? "a" : (new cljs.core.Keyword(null, "oname", "oname", 1119788780)).cljs$core$IFn$_invoke$arity$1(v__$1)), cljs.core.str("_"), cljs.core.str(cljs.core.count.call(null, s))].join("")))
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$logic$nominal$INomSwap$ = true;
cljs.core.logic.nominal.Nom.prototype.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3 = function(t, swap, s) {
  var self__ = this;
  var t__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.nominal.nom_swap.call(null, t__$1, swap), s], null)
};
cljs.core.logic.nominal.Nom.prototype.hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.lvar)
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$logic$protocols$IBindable$ = true;
cljs.core.logic.nominal.Nom.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null)
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  var G__13444 = k;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "oname", "oname", 1119788780), G__13444)) {
    return(new cljs.core.Keyword(null, "oname", "oname", 1119788780)).cljs$core$IFn$_invoke$arity$1(self__.lvar)
  }else {
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), G__13444)) {
      return(new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.lvar)
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "lvar", "lvar", 1017238189), G__13444)) {
        return self__.lvar
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("\x3cnom:"), cljs.core.str((new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(x__$1)), cljs.core.str("\x3e")].join(""))
};
cljs.core.logic.nominal.Nom.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str("\x3cnom:"), cljs.core.str((new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.lvar)), cljs.core.str("\x3e")].join("")
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return o instanceof cljs.core.logic.nominal.Nom && cljs.core._EQ_.call(null, self__.lvar, (new cljs.core.Keyword(null, "lvar", "lvar", 1017238189)).cljs$core$IFn$_invoke$arity$1(o))
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.logic.nominal.nom.call(null, cljs.core.with_meta.call(null, self__.lvar, new_meta))
};
cljs.core.logic.nominal.Nom.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.meta.call(null, self__.lvar)
};
cljs.core.logic.nominal.__GT_Nom = function __GT_Nom(lvar) {
  return new cljs.core.logic.nominal.Nom(lvar)
};
cljs.core.logic.nominal.nom = function nom(lvar) {
  return new cljs.core.logic.nominal.Nom(lvar)
};
cljs.core.logic.nominal.nom_QMARK_ = function nom_QMARK_(x) {
  return x instanceof cljs.core.logic.nominal.Nom
};
cljs.core.logic.nominal._hash = function _hash(a, x) {
  if(typeof cljs.core.logic.nominal.t13452 !== "undefined") {
  }else {
    cljs.core.logic.nominal.t13452 = function(x, a, _hash, meta13453) {
      this.x = x;
      this.a = a;
      this._hash = _hash;
      this.meta13453 = meta13453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.nominal.t13452.cljs$lang$type = true;
    cljs.core.logic.nominal.t13452.cljs$lang$ctorStr = "cljs.core.logic.nominal/t13452";
    cljs.core.logic.nominal.t13452.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.nominal/t13452")
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(_, v, r, s) {
      var self__ = this;
      var ___$1 = this;
      var x__$2 = cljs.core.logic.walk_STAR_.call(null, r, cljs.core.logic.walk_STAR_.call(null, s, self__.x));
      var a__$2 = cljs.core.logic.walk_STAR_.call(null, r, cljs.core.logic.walk_STAR_.call(null, s, self__.a));
      if(a__$2 instanceof cljs.core.Symbol && cljs.core.empty_QMARK_.call(null, cljs.core.filter.call(null, cljs.core.logic.lvar_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, x__$2))))) {
        return cljs.core.symbol.call(null, [cljs.core.str(a__$2), cljs.core.str("#"), cljs.core.str(x__$2)].join(""))
      }else {
        return null
      }
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.nominal", "hash", "cljs.core.logic.nominal/hash", 99352748, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 186), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 186), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 46)))))
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.a, self__.x], null)
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.nominal.t13452.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, s) {
      var self__ = this;
      var this$__$1 = this;
      var a__$2 = cljs.core.logic.protocols.walk.call(null, s, self__.a);
      var x__$2 = cljs.core.logic.protocols.walk.call(null, s, self__.x);
      if(typeof cljs.core.logic.nominal.t13455 !== "undefined") {
      }else {
        cljs.core.logic.nominal.t13455 = function(s, this$, meta13453, x, a, _hash, meta13456) {
          this.s = s;
          this.this$ = this$;
          this.meta13453 = meta13453;
          this.x = x;
          this.a = a;
          this._hash = _hash;
          this.meta13456 = meta13456;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.nominal.t13455.cljs$lang$type = true;
        cljs.core.logic.nominal.t13455.cljs$lang$ctorStr = "cljs.core.logic.nominal/t13455";
        cljs.core.logic.nominal.t13455.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.nominal/t13455")
        };
        cljs.core.logic.nominal.t13455.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.nominal.t13455.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.logic.lvar_QMARK_.call(null, self__.a)) {
            return cljs.core.logic.lvar_QMARK_.call(null, self__.x) && cljs.core._EQ_.call(null, self__.x, self__.a) || cljs.core.logic.tree_term_QMARK_.call(null, self__.x) && cljs.core.not.call(null, cljs.core.logic.nominal.tie_QMARK_.call(null, self__.x))
          }else {
            return!cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a) || !cljs.core.logic.lvar_QMARK_.call(null, self__.x)
          }
        };
        cljs.core.logic.nominal.t13455.prototype.call = function(self__, s__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return cljs.core.logic.composeg.call(null, cljs.core.logic.remcg.call(null, self__.this$), function(s__$3) {
            if(cljs.core.logic.lvar_QMARK_.call(null, self__.a) && cljs.core.logic.lvar_QMARK_.call(null, self__.x) && cljs.core._EQ_.call(null, self__.x, self__.a)) {
              return null
            }else {
              if(cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a) && cljs.core.logic.nominal.nom_QMARK_.call(null, self__.x) && cljs.core._EQ_.call(null, self__.x, self__.a)) {
                return null
              }else {
                if(!cljs.core.logic.lvar_QMARK_.call(null, self__.a) && !cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a)) {
                  return null
                }else {
                  if(cljs.core.truth_(function() {
                    var and__9129__auto__ = cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a);
                    if(and__9129__auto__) {
                      var and__9129__auto____$1 = cljs.core.logic.nominal.tie_QMARK_.call(null, self__.x);
                      if(cljs.core.truth_(and__9129__auto____$1)) {
                        return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(self__.x), self__.a)
                      }else {
                        return and__9129__auto____$1
                      }
                    }else {
                      return and__9129__auto__
                    }
                  }())) {
                    return s__$3
                  }else {
                    if(cljs.core.logic.tree_term_QMARK_.call(null, self__.x) && (cljs.core.not.call(null, cljs.core.logic.nominal.tie_QMARK_.call(null, self__.x)) || cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a))) {
                      return cljs.core.logic.constrain_tree.call(null, self__.x, function(t, s__$4) {
                        return cljs.core.logic.nominal.hash.call(null, self__.a, t).call(null, s__$4)
                      }).call(null, s__$3)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return s__$3
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }).call(null, s__$2)
        };
        cljs.core.logic.nominal.t13455.prototype.apply = function(self__, args13458) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13458)))
        };
        cljs.core.logic.nominal.t13455.prototype.cljs$core$IFn$_invoke$arity$1 = function(s__$2) {
          var self__ = this;
          var _ = this;
          return cljs.core.logic.composeg.call(null, cljs.core.logic.remcg.call(null, self__.this$), function(s__$3) {
            if(cljs.core.logic.lvar_QMARK_.call(null, self__.a) && cljs.core.logic.lvar_QMARK_.call(null, self__.x) && cljs.core._EQ_.call(null, self__.x, self__.a)) {
              return null
            }else {
              if(cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a) && cljs.core.logic.nominal.nom_QMARK_.call(null, self__.x) && cljs.core._EQ_.call(null, self__.x, self__.a)) {
                return null
              }else {
                if(!cljs.core.logic.lvar_QMARK_.call(null, self__.a) && !cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a)) {
                  return null
                }else {
                  if(cljs.core.truth_(function() {
                    var and__9129__auto__ = cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a);
                    if(and__9129__auto__) {
                      var and__9129__auto____$1 = cljs.core.logic.nominal.tie_QMARK_.call(null, self__.x);
                      if(cljs.core.truth_(and__9129__auto____$1)) {
                        return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(self__.x), self__.a)
                      }else {
                        return and__9129__auto____$1
                      }
                    }else {
                      return and__9129__auto__
                    }
                  }())) {
                    return s__$3
                  }else {
                    if(cljs.core.logic.tree_term_QMARK_.call(null, self__.x) && (cljs.core.not.call(null, cljs.core.logic.nominal.tie_QMARK_.call(null, self__.x)) || cljs.core.logic.nominal.nom_QMARK_.call(null, self__.a))) {
                      return cljs.core.logic.constrain_tree.call(null, self__.x, function(t, s__$4) {
                        return cljs.core.logic.nominal.hash.call(null, self__.a, t).call(null, s__$4)
                      }).call(null, s__$3)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return s__$3
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }).call(null, s__$2)
        };
        cljs.core.logic.nominal.t13455.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13457) {
          var self__ = this;
          var _13457__$1 = this;
          return self__.meta13456
        };
        cljs.core.logic.nominal.t13455.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13457, meta13456__$1) {
          var self__ = this;
          var _13457__$1 = this;
          return new cljs.core.logic.nominal.t13455(self__.s, self__.this$, self__.meta13453, self__.x, self__.a, self__._hash, meta13456__$1)
        };
        cljs.core.logic.nominal.__GT_t13455 = function __GT_t13455(s__$1, this$__$2, meta13453__$1, x__$3, a__$3, _hash__$2, meta13456) {
          return new cljs.core.logic.nominal.t13455(s__$1, this$__$2, meta13453__$1, x__$3, a__$3, _hash__$2, meta13456)
        }
      }
      return new cljs.core.logic.nominal.t13455(s, this$__$1, self__.meta13453, x__$2, a__$2, self__._hash, null)
    };
    cljs.core.logic.nominal.t13452.prototype.toString = function() {
      var self__ = this;
      var _ = this;
      return[cljs.core.str(self__.a), cljs.core.str("#"), cljs.core.str(self__.x)].join("")
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13454) {
      var self__ = this;
      var _13454__$1 = this;
      return self__.meta13453
    };
    cljs.core.logic.nominal.t13452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13454, meta13453__$1) {
      var self__ = this;
      var _13454__$1 = this;
      return new cljs.core.logic.nominal.t13452(self__.x, self__.a, self__._hash, meta13453__$1)
    };
    cljs.core.logic.nominal.__GT_t13452 = function __GT_t13452(x__$1, a__$1, _hash__$1, meta13453) {
      return new cljs.core.logic.nominal.t13452(x__$1, a__$1, _hash__$1, meta13453)
    }
  }
  return new cljs.core.logic.nominal.t13452(x, a, _hash, null)
};
cljs.core.logic.nominal.hash = function hash(a, t) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.nominal._hash.call(null, a, t))
};
cljs.core.logic.nominal._do_suspc = function _do_suspc(t1, t2, swap, a) {
  var x = function() {
    var vs = cljs.core.PersistentHashSet.fromArray([t2], true);
    var seen = cljs.core.PersistentHashSet.EMPTY;
    while(true) {
      var vs__$1 = clojure.set.difference.call(null, vs, seen);
      if(cljs.core.empty_QMARK_.call(null, vs__$1)) {
        return true
      }else {
        if(cljs.core.truth_(cljs.core.some.call(null, function(vs, seen, vs__$1) {
          return function(p1__13459_SHARP_) {
            return cljs.core.logic.occurs_check.call(null, a, p1__13459_SHARP_, t1)
          }
        }(vs, seen, vs__$1), vs__$1))) {
          return false
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__13462 = cljs.core.reduce.call(null, function(vs, seen, vs__$1) {
              return function(s0, s1) {
                return clojure.set.union.call(null, s0, (new cljs.core.Keyword(null, "eset", "eset", 1017026895)).cljs$core$IFn$_invoke$arity$1(cljs.core.logic.protocols.root_val.call(null, a, s1)))
              }
            }(vs, seen, vs__$1), cljs.core.PersistentHashSet.EMPTY, vs__$1);
            var G__13463 = clojure.set.union.call(null, vs__$1, seen);
            vs = G__13462;
            seen = G__13463;
            continue
          }else {
            return null
          }
        }
      }
      break
    }
  }();
  if(cljs.core.truth_(x)) {
    var vec__13461 = cljs.core.logic.nominal.swap_noms.call(null, t1, swap, a);
    var t1__$1 = cljs.core.nth.call(null, vec__13461, 0, null);
    var a__$1 = cljs.core.nth.call(null, vec__13461, 1, null);
    return cljs.core.logic._EQ__EQ_.call(null, t1__$1, t2).call(null, a__$1)
  }else {
    return null
  }
};
cljs.core.logic.nominal._suspc = function _suspc(v1, v2, swap) {
  if(typeof cljs.core.logic.nominal.t13471 !== "undefined") {
  }else {
    cljs.core.logic.nominal.t13471 = function(swap, v2, v1, _suspc, meta13472) {
      this.swap = swap;
      this.v2 = v2;
      this.v1 = v1;
      this._suspc = _suspc;
      this.meta13472 = meta13472;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.logic.nominal.t13471.cljs$lang$type = true;
    cljs.core.logic.nominal.t13471.cljs$lang$ctorStr = "cljs.core.logic.nominal/t13471";
    cljs.core.logic.nominal.t13471.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
      return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.nominal/t13471")
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$ = true;
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintWatchedStores$_watched_stores$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic", "subst", "cljs.core.logic/subst", 3549233440), null], null), null)
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IReifiableConstraint$ = true;
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IReifiableConstraint$_reifyc$arity$4 = function(c, v, r, a) {
      var self__ = this;
      var c__$1 = this;
      var t1 = cljs.core.logic.walk_STAR_.call(null, r, cljs.core.logic.walk_STAR_.call(null, a, self__.v1));
      var t2 = cljs.core.logic.walk_STAR_.call(null, r, cljs.core.logic.walk_STAR_.call(null, a, self__.v2));
      var swap__$2 = cljs.core.logic.walk_STAR_.call(null, r, self__.swap);
      if(!cljs.core.logic.lvar_QMARK_.call(null, t1) && !cljs.core.logic.lvar_QMARK_.call(null, t2) && cljs.core.first.call(null, swap__$2) instanceof cljs.core.Symbol && cljs.core.second.call(null, swap__$2) instanceof cljs.core.Symbol) {
        return cljs.core.with_meta.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "swap", "swap", -1636988084, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, swap__$2), cljs.core._conj.call(null, cljs.core.List.EMPTY, t1), cljs.core._conj.call(null, cljs.core.List.EMPTY, t2))), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 259), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 12), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 259), cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 34)))))
      }else {
        return null
      }
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintOp$ = true;
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintOp$_rator$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs.core.logic.nominal", "suspc", "cljs.core.logic.nominal/suspc", 54642610, null), cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "line", "line", 1017226086)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 247), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "column", "column", 
      3954034376)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 18), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 247), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 47)))))
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintOp$_rands$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.v1, self__.v2], null)
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintStep$ = true;
    cljs.core.logic.nominal.t13471.prototype.cljs$core$logic$protocols$IConstraintStep$_step$arity$2 = function(this$, a) {
      var self__ = this;
      var this$__$1 = this;
      var t1 = cljs.core.logic.protocols.walk.call(null, a, self__.v1);
      var t2 = cljs.core.logic.protocols.walk.call(null, a, self__.v2);
      if(typeof cljs.core.logic.nominal.t13474 !== "undefined") {
      }else {
        cljs.core.logic.nominal.t13474 = function(t2, t1, a, this$, meta13472, swap, v2, v1, _suspc, meta13475) {
          this.t2 = t2;
          this.t1 = t1;
          this.a = a;
          this.this$ = this$;
          this.meta13472 = meta13472;
          this.swap = swap;
          this.v2 = v2;
          this.v1 = v1;
          this._suspc = _suspc;
          this.meta13475 = meta13475;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.logic.nominal.t13474.cljs$lang$type = true;
        cljs.core.logic.nominal.t13474.cljs$lang$ctorStr = "cljs.core.logic.nominal/t13474";
        cljs.core.logic.nominal.t13474.cljs$lang$ctorPrWriter = function(this__9680__auto__, writer__9681__auto__, opt__9682__auto__) {
          return cljs.core._write.call(null, writer__9681__auto__, "cljs.core.logic.nominal/t13474")
        };
        cljs.core.logic.nominal.t13474.prototype.cljs$core$logic$protocols$IRunnable$ = true;
        cljs.core.logic.nominal.t13474.prototype.cljs$core$logic$protocols$IRunnable$_runnable_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return!cljs.core.logic.lvar_QMARK_.call(null, self__.t1) || !cljs.core.logic.lvar_QMARK_.call(null, self__.t2) || cljs.core._EQ_.call(null, self__.t1, self__.t2)
        };
        cljs.core.logic.nominal.t13474.prototype.call = function(self__, a__$2) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return cljs.core.logic.composeg.call(null, cljs.core.logic.remcg.call(null, self__.this$), function(a__$3) {
            if(!cljs.core.logic.lvar_QMARK_.call(null, self__.t1)) {
              return cljs.core.logic.nominal._do_suspc.call(null, self__.t1, self__.t2, self__.swap, a__$3)
            }else {
              if(!cljs.core.logic.lvar_QMARK_.call(null, self__.t2)) {
                return cljs.core.logic.nominal._do_suspc.call(null, self__.t2, self__.t1, self__.swap, a__$3)
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  var a_STAR_ = self__.swap;
                  var a__$4 = a__$3;
                  while(true) {
                    if(cljs.core.empty_QMARK_.call(null, a_STAR_)) {
                      return a__$4
                    }else {
                      var G__13478 = cljs.core.rest.call(null, a_STAR_);
                      var G__13479 = cljs.core.logic.nominal.hash.call(null, cljs.core.first.call(null, a_STAR_), self__.t2).call(null, a__$4);
                      a_STAR_ = G__13478;
                      a__$4 = G__13479;
                      continue
                    }
                    break
                  }
                }else {
                  return null
                }
              }
            }
          }).call(null, a__$2)
        };
        cljs.core.logic.nominal.t13474.prototype.apply = function(self__, args13477) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13477)))
        };
        cljs.core.logic.nominal.t13474.prototype.cljs$core$IFn$_invoke$arity$1 = function(a__$2) {
          var self__ = this;
          var _ = this;
          return cljs.core.logic.composeg.call(null, cljs.core.logic.remcg.call(null, self__.this$), function(a__$3) {
            if(!cljs.core.logic.lvar_QMARK_.call(null, self__.t1)) {
              return cljs.core.logic.nominal._do_suspc.call(null, self__.t1, self__.t2, self__.swap, a__$3)
            }else {
              if(!cljs.core.logic.lvar_QMARK_.call(null, self__.t2)) {
                return cljs.core.logic.nominal._do_suspc.call(null, self__.t2, self__.t1, self__.swap, a__$3)
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  var a_STAR_ = self__.swap;
                  var a__$4 = a__$3;
                  while(true) {
                    if(cljs.core.empty_QMARK_.call(null, a_STAR_)) {
                      return a__$4
                    }else {
                      var G__13480 = cljs.core.rest.call(null, a_STAR_);
                      var G__13481 = cljs.core.logic.nominal.hash.call(null, cljs.core.first.call(null, a_STAR_), self__.t2).call(null, a__$4);
                      a_STAR_ = G__13480;
                      a__$4 = G__13481;
                      continue
                    }
                    break
                  }
                }else {
                  return null
                }
              }
            }
          }).call(null, a__$2)
        };
        cljs.core.logic.nominal.t13474.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13476) {
          var self__ = this;
          var _13476__$1 = this;
          return self__.meta13475
        };
        cljs.core.logic.nominal.t13474.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13476, meta13475__$1) {
          var self__ = this;
          var _13476__$1 = this;
          return new cljs.core.logic.nominal.t13474(self__.t2, self__.t1, self__.a, self__.this$, self__.meta13472, self__.swap, self__.v2, self__.v1, self__._suspc, meta13475__$1)
        };
        cljs.core.logic.nominal.__GT_t13474 = function __GT_t13474(t2__$1, t1__$1, a__$1, this$__$2, meta13472__$1, swap__$2, v2__$2, v1__$2, _suspc__$2, meta13475) {
          return new cljs.core.logic.nominal.t13474(t2__$1, t1__$1, a__$1, this$__$2, meta13472__$1, swap__$2, v2__$2, v1__$2, _suspc__$2, meta13475)
        }
      }
      return new cljs.core.logic.nominal.t13474(t2, t1, a, this$__$1, self__.meta13472, self__.swap, self__.v2, self__.v1, self__._suspc, null)
    };
    cljs.core.logic.nominal.t13471.prototype.toString = function() {
      var self__ = this;
      var _ = this;
      return[cljs.core.str("suspc"), cljs.core.str(self__.v1), cljs.core.str(self__.v2), cljs.core.str(self__.swap)].join("")
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13473) {
      var self__ = this;
      var _13473__$1 = this;
      return self__.meta13472
    };
    cljs.core.logic.nominal.t13471.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13473, meta13472__$1) {
      var self__ = this;
      var _13473__$1 = this;
      return new cljs.core.logic.nominal.t13471(self__.swap, self__.v2, self__.v1, self__._suspc, meta13472__$1)
    };
    cljs.core.logic.nominal.__GT_t13471 = function __GT_t13471(swap__$1, v2__$1, v1__$1, _suspc__$1, meta13472) {
      return new cljs.core.logic.nominal.t13471(swap__$1, v2__$1, v1__$1, _suspc__$1, meta13472)
    }
  }
  return new cljs.core.logic.nominal.t13471(swap, v2, v1, _suspc, null)
};
cljs.core.logic.nominal.suspc = function suspc(v1, v2, swap) {
  return cljs.core.logic.cgoal.call(null, cljs.core.logic.nominal._suspc.call(null, v1, v2, swap))
};
cljs.core.logic.nominal.Tie = function(binding_nom, body, __meta, __extmap) {
  this.binding_nom = binding_nom;
  this.body = body;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IReifyTerm$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IReifyTerm$reify_term$arity$2 = function(v, s) {
  var self__ = this;
  var v__$1 = this;
  var s__$1 = cljs.core.logic._reify_STAR_.call(null, s, self__.binding_nom);
  var s__$2 = cljs.core.logic._reify_STAR_.call(null, s__$1, self__.body);
  return s__$2
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$nominal$INomSwap$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$nominal$INomSwap$swap_noms$arity$3 = function(t, swap, s) {
  var self__ = this;
  var t__$1 = this;
  var vec__13485 = cljs.core.logic.nominal.swap_noms.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(t__$1), swap, s);
  var tbody = cljs.core.nth.call(null, vec__13485, 0, null);
  var s__$1 = cljs.core.nth.call(null, vec__13485, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, cljs.core.logic.nominal.tie.call(null, cljs.core.logic.nominal.nom_swap.call(null, (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(t__$1), swap), tbody), cljs.core.meta.call(null, t__$1)), s__$1], null)
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9693__auto__) {
  var self__ = this;
  var this__9693__auto____$1 = this;
  var h__9547__auto__ = self__.__hash;
  if(!(h__9547__auto__ == null)) {
    return h__9547__auto__
  }else {
    var h__9547__auto____$1 = cljs.core.hash_imap.call(null, this__9693__auto____$1);
    self__.__hash = h__9547__auto____$1;
    return h__9547__auto____$1
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IUnifyTerms$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IUnifyTerms$unify_terms$arity$3 = function(v, u, s) {
  var self__ = this;
  var v__$1 = this;
  if(cljs.core.truth_(cljs.core.logic.nominal.tie_QMARK_.call(null, u))) {
    if(cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(v__$1), (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(u))) {
      return cljs.core.logic.unify.call(null, s, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(v__$1), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(u))
    }else {
      var vec__13486 = cljs.core.logic.nominal.swap_noms.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(v__$1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(v__$1), (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(u)], null), s);
      var t = cljs.core.nth.call(null, vec__13486, 0, null);
      var s__$1 = cljs.core.nth.call(null, vec__13486, 1, null);
      return cljs.core.logic.composeg.call(null, cljs.core.logic.nominal.hash.call(null, (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(u), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(v__$1)), cljs.core.logic._EQ__EQ_.call(null, t, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(u))).call(null, s__$1)
    }
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return null
    }else {
      return null
    }
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9698__auto__, k__9699__auto__) {
  var self__ = this;
  var this__9698__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9698__auto____$1, k__9699__auto__, null)
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9700__auto__, k13483, else__9701__auto__) {
  var self__ = this;
  var this__9700__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k13483, new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822))) {
    return self__.binding_nom
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k13483, new cljs.core.Keyword(null, "body", "body", 1016933652))) {
      return self__.body
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k13483, else__9701__auto__)
      }else {
        return null
      }
    }
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9705__auto__, k__9706__auto__, G__13482) {
  var self__ = this;
  var this__9705__auto____$1 = this;
  var pred__13487 = cljs.core.keyword_identical_QMARK_;
  var expr__13488 = k__9706__auto__;
  if(cljs.core.truth_(pred__13487.call(null, new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822), expr__13488))) {
    return new cljs.core.logic.nominal.Tie(G__13482, self__.body, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__13487.call(null, new cljs.core.Keyword(null, "body", "body", 1016933652), expr__13488))) {
      return new cljs.core.logic.nominal.Tie(self__.binding_nom, G__13482, self__.__meta, self__.__extmap, null)
    }else {
      return new cljs.core.logic.nominal.Tie(self__.binding_nom, self__.body, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9706__auto__, G__13482), null)
    }
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IForceAnswerTerm$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IForceAnswerTerm$_force_ans$arity$2 = function(v, x) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.logic.force_ans.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(v__$1))
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9712__auto__, writer__9713__auto__, opts__9714__auto__) {
  var self__ = this;
  var this__9712__auto____$1 = this;
  var pr_pair__9715__auto__ = function(keyval__9716__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, cljs.core.pr_writer, "", " ", "", opts__9714__auto__, keyval__9716__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__9713__auto__, pr_pair__9715__auto__, "#cljs.core.logic.nominal.Tie{", ", ", "}", opts__9714__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822), self__.binding_nom], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "body", "body", 1016933652), self__.body], null)], null), self__.__extmap))
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9703__auto__, entry__9704__auto__) {
  var self__ = this;
  var this__9703__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__9704__auto__)) {
    return cljs.core._assoc.call(null, this__9703__auto____$1, cljs.core._nth.call(null, entry__9704__auto__, 0), cljs.core._nth.call(null, entry__9704__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9703__auto____$1, entry__9704__auto__)
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IWalkTerm$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IWalkTerm$walk_term$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.logic.nominal.tie.call(null, cljs.core.logic.protocols.walk_term.call(null, (new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(v__$1), f), cljs.core.logic.protocols.walk_term.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(v__$1), f)), cljs.core.meta.call(null, v__$1))
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IConstrainTree$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IConstrainTree$_constrain_tree$arity$3 = function(t, fc, s) {
  var self__ = this;
  var t__$1 = this;
  return fc.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(t__$1), s)
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9710__auto__) {
  var self__ = this;
  var this__9710__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822), self__.binding_nom], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "body", "body", 1016933652), self__.body], null)], null), self__.__extmap))
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$ITreeTerm$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IOccursCheckTerm$ = true;
cljs.core.logic.nominal.Tie.prototype.cljs$core$logic$protocols$IOccursCheckTerm$occurs_check_term$arity$3 = function(v, x, s) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.logic.occurs_check.call(null, s, x, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(v__$1))
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9702__auto__) {
  var self__ = this;
  var this__9702__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap)
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9694__auto__, other__9695__auto__) {
  var self__ = this;
  var this__9694__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__9129__auto__ = other__9695__auto__;
    if(cljs.core.truth_(and__9129__auto__)) {
      return this__9694__auto____$1.constructor === other__9695__auto__.constructor && cljs.core.equiv_map.call(null, this__9694__auto____$1, other__9695__auto__)
    }else {
      return and__9129__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9697__auto__, G__13482) {
  var self__ = this;
  var this__9697__auto____$1 = this;
  return new cljs.core.logic.nominal.Tie(self__.binding_nom, self__.body, G__13482, self__.__extmap, self__.__hash)
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9696__auto__) {
  var self__ = this;
  var this__9696__auto____$1 = this;
  return self__.__meta
};
cljs.core.logic.nominal.Tie.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9707__auto__, k__9708__auto__) {
  var self__ = this;
  var this__9707__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822), null, new cljs.core.Keyword(null, "body", "body", 1016933652), null], null), null), k__9708__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9707__auto____$1), self__.__meta), k__9708__auto__)
  }else {
    return new cljs.core.logic.nominal.Tie(self__.binding_nom, self__.body, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9708__auto__)), null)
  }
};
cljs.core.logic.nominal.Tie.cljs$lang$type = true;
cljs.core.logic.nominal.Tie.cljs$lang$ctorPrSeq = function(this__9732__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.logic.nominal/Tie")
};
cljs.core.logic.nominal.Tie.cljs$lang$ctorPrWriter = function(this__9732__auto__, writer__9733__auto__) {
  return cljs.core._write.call(null, writer__9733__auto__, "cljs.core.logic.nominal/Tie")
};
cljs.core.logic.nominal.__GT_Tie = function __GT_Tie(binding_nom, body) {
  return new cljs.core.logic.nominal.Tie(binding_nom, body)
};
cljs.core.logic.nominal.map__GT_Tie = function map__GT_Tie(G__13484) {
  return new cljs.core.logic.nominal.Tie((new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822)).cljs$core$IFn$_invoke$arity$1(G__13484), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(G__13484), null, cljs.core.dissoc.call(null, G__13484, new cljs.core.Keyword(null, "binding-nom", "binding-nom", 727512822), new cljs.core.Keyword(null, "body", "body", 1016933652)))
};
cljs.core.logic.nominal.tie = function tie(binding_nom, body) {
  return new cljs.core.logic.nominal.Tie(binding_nom, body)
};
cljs.core.logic.nominal.tie_QMARK_ = function tie_QMARK_(x) {
  return x instanceof cljs.core.logic.nominal.Tie
};
goog.provide("cljs.core.logic.bench");
goog.require("cljs.core");
goog.require("cljs.core.logic.pldb");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.nominal");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.fd");
goog.require("cljs.core.logic.pldb");
goog.require("cljs.core.logic.protocols");
goog.require("clojure.set");
goog.require("cljs.core.logic.pldb");
goog.require("cljs.core.logic.fd");
goog.require("clojure.set");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic.nominal");
goog.provide("cljs.core.logic.unifier");
goog.require("cljs.core");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic");
goog.require("cljs.core.logic.protocols");
goog.require("cljs.core.logic.protocols");
cljs.core.logic.unifier.lvarq_sym_QMARK_ = function lvarq_sym_QMARK_(s) {
  return s instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, cljs.core.first.call(null, [cljs.core.str(s)].join("")), "?")
};
cljs.core.logic.unifier.proc_lvar = function proc_lvar(lvar_expr, store) {
  var v = function() {
    var temp__4092__auto__ = cljs.core.deref.call(null, store).call(null, lvar_expr);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var u = temp__4092__auto__;
      return u
    }else {
      return cljs.core.logic.lvar.call(null, lvar_expr, false)
    }
  }();
  cljs.core.swap_BANG_.call(null, store, cljs.core.assoc, lvar_expr, v);
  return v
};
cljs.core.logic.unifier.lcons_expr_QMARK_ = function lcons_expr_QMARK_(expr) {
  var and__9129__auto__ = cljs.core.seq_QMARK_.call(null, expr);
  if(and__9129__auto__) {
    return cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, ".", ".", -1640531481, null), null], null), null), cljs.core.set.call(null, expr))
  }else {
    return and__9129__auto__
  }
};
cljs.core.logic.unifier.replace_lvar = function replace_lvar(store) {
  return function(expr) {
    if(cljs.core.logic.unifier.lvarq_sym_QMARK_.call(null, expr)) {
      return cljs.core.logic.unifier.proc_lvar.call(null, expr, store)
    }else {
      if(cljs.core.truth_(cljs.core.logic.unifier.lcons_expr_QMARK_.call(null, expr))) {
        return cljs.core.logic.unifier.prep_STAR_.call(null, expr, store)
      }else {
        return expr
      }
    }
  }
};
cljs.core.logic.unifier.prep_STAR_ = function() {
  var prep_STAR_ = null;
  var prep_STAR___2 = function(expr, store) {
    return prep_STAR_.call(null, expr, store, false, false)
  };
  var prep_STAR___3 = function(expr, store, lcons_QMARK_) {
    return prep_STAR_.call(null, expr, store, lcons_QMARK_, false)
  };
  var prep_STAR___4 = function(expr, store, lcons_QMARK_, last_QMARK_) {
    var expr__$1 = cljs.core.truth_(function() {
      var and__9129__auto__ = last_QMARK_;
      if(cljs.core.truth_(and__9129__auto__)) {
        return cljs.core.seq.call(null, expr)
      }else {
        return and__9129__auto__
      }
    }()) ? cljs.core.first.call(null, expr) : expr;
    if(cljs.core.logic.unifier.lvarq_sym_QMARK_.call(null, expr__$1)) {
      return cljs.core.logic.unifier.proc_lvar.call(null, expr__$1, store)
    }else {
      if(cljs.core.seq_QMARK_.call(null, expr__$1)) {
        if(cljs.core.truth_(function() {
          var or__9141__auto__ = lcons_QMARK_;
          if(cljs.core.truth_(or__9141__auto__)) {
            return or__9141__auto__
          }else {
            return cljs.core.logic.unifier.lcons_expr_QMARK_.call(null, expr__$1)
          }
        }())) {
          var vec__13637 = expr__$1;
          var f = cljs.core.nth.call(null, vec__13637, 0, null);
          var n = cljs.core.nthnext.call(null, vec__13637, 1);
          var skip = cljs.core._EQ_.call(null, f, new cljs.core.Symbol(null, ".", ".", -1640531481, null));
          var tail = prep_STAR_.call(null, n, store, lcons_QMARK_, skip);
          if(skip) {
            return tail
          }else {
            return cljs.core.logic.lcons.call(null, prep_STAR_.call(null, f, store), tail)
          }
        }else {
          return cljs.core.logic.protocols.walk_term.call(null, expr__$1, cljs.core.logic.unifier.replace_lvar.call(null, store))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return expr__$1
        }else {
          return null
        }
      }
    }
  };
  prep_STAR_ = function(expr, store, lcons_QMARK_, last_QMARK_) {
    switch(arguments.length) {
      case 2:
        return prep_STAR___2.call(this, expr, store);
      case 3:
        return prep_STAR___3.call(this, expr, store, lcons_QMARK_);
      case 4:
        return prep_STAR___4.call(this, expr, store, lcons_QMARK_, last_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prep_STAR_.cljs$core$IFn$_invoke$arity$2 = prep_STAR___2;
  prep_STAR_.cljs$core$IFn$_invoke$arity$3 = prep_STAR___3;
  prep_STAR_.cljs$core$IFn$_invoke$arity$4 = prep_STAR___4;
  return prep_STAR_
}();
cljs.core.logic.unifier.prep = function prep(expr) {
  var lvars = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prepped = cljs.core.logic.unifier.lvarq_sym_QMARK_.call(null, expr) ? cljs.core.logic.unifier.proc_lvar.call(null, expr, lvars) : cljs.core.truth_(cljs.core.logic.unifier.lcons_expr_QMARK_.call(null, expr)) ? cljs.core.logic.unifier.prep_STAR_.call(null, expr, lvars, true) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.logic.protocols.walk_term.call(null, expr, cljs.core.logic.unifier.replace_lvar.call(null, lvars)) : null;
  if(function() {
    var G__13639 = prepped;
    if(G__13639) {
      var bit__9762__auto__ = G__13639.cljs$lang$protocol_mask$partition0$ & 131072;
      if(bit__9762__auto__ || G__13639.cljs$core$IMeta$) {
        return true
      }else {
        if(!G__13639.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__13639)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__13639)
    }
  }()) {
    return cljs.core.with_meta.call(null, prepped, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core.logic.unifier", "lvars", "cljs.core.logic.unifier/lvars", 1819622758), cljs.core.keys.call(null, cljs.core.deref.call(null, lvars))], null))
  }else {
    return prepped
  }
};
cljs.core.logic.unifier.queue_constraint = function queue_constraint(s, c, vs) {
  if(cljs.core.vector_QMARK_.call(null, vs)) {
    return cljs.core.logic.protocols.queue.call(null, s, cljs.core.logic.protocols._unwrap.call(null, cljs.core.apply.call(null, c, cljs.core.map.call(null, function(p1__13640_SHARP_) {
      return cljs.core.logic.lvar.call(null, p1__13640_SHARP_, false)
    }, vs))))
  }else {
    if(cljs.core.set_QMARK_.call(null, vs)) {
      return cljs.core.reduce.call(null, function(s__$1, v) {
        return cljs.core.logic.protocols.queue.call(null, s__$1, cljs.core.logic.protocols._unwrap.call(null, c.call(null, cljs.core.logic.lvar.call(null, v, false))))
      }, s, vs)
    }else {
      if(vs instanceof cljs.core.Symbol) {
        return cljs.core.logic.protocols.queue.call(null, s, cljs.core.logic.protocols._unwrap.call(null, cljs.core.apply.call(null, c, cljs.core.map.call(null, function(p1__13641_SHARP_) {
          return cljs.core.logic.lvar.call(null, p1__13641_SHARP_, false)
        }, cljs.core._conj.call(null, cljs.core.List.EMPTY, vs)))))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw cljs.core.ex_info.call(null, [cljs.core.str("Only symbol, set of symbols, or vector of symbols allowed "), cljs.core.str("on left hand side")].join(""), cljs.core.PersistentArrayMap.EMPTY);
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.logic.unifier.queue_constraints = function queue_constraints(s, p__13642) {
  var vec__13644 = p__13642;
  var vs = cljs.core.nth.call(null, vec__13644, 0, null);
  var cs = cljs.core.nth.call(null, vec__13644, 1, null);
  var cs__$1 = !cljs.core.sequential_QMARK_.call(null, cs) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cs], null) : cs;
  return cljs.core.reduce.call(null, function(s__$1, c) {
    return cljs.core.logic.unifier.queue_constraint.call(null, s__$1, c, vs)
  }, s, cs__$1)
};
cljs.core.logic.unifier._unify_STAR_ = function _unify_STAR_(init_s, u, w) {
  return cljs.core.first.call(null, cljs.core.logic.protocols.take_STAR_.call(null, function() {
    return function(a__8595__auto__) {
      return function _inc() {
        var q = cljs.core.logic.lvar.call(null, new cljs.core.Symbol(null, "q", "q", -1640531414, null));
        return cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, cljs.core.logic.protocols.bind.call(null, a__8595__auto__, cljs.core.logic._EQ__EQ_.call(null, u, w)), cljs.core.logic._EQ__EQ_.call(null, q, u)), function(a) {
          return cljs.core.logic.fix_constraints.call(null, a)
        }), cljs.core.logic.reifyg.call(null, q))
      }
    }.call(null, init_s)
  }))
};
cljs.core.logic.unifier.init_s = function init_s(opts, s) {
  var s__$1 = cljs.core.reduce.call(null, function(s__$1, p__13647) {
    var vec__13648 = p__13647;
    var k = cljs.core.nth.call(null, vec__13648, 0, null);
    var v = cljs.core.nth.call(null, vec__13648, 1, null);
    return cljs.core.logic._EQ__EQ_.call(null, k, v).call(null, s__$1)
  }, s, (new cljs.core.Keyword(null, "as", "as", 1013907364)).cljs$core$IFn$_invoke$arity$1(opts));
  return cljs.core.reduce.call(null, cljs.core.logic.unifier.queue_constraints, cljs.core.with_meta.call(null, s__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "reify-vars", "reify-vars", 4368745730), function(v, rs) {
    return rs
  }], null)), (new cljs.core.Keyword(null, "when", "when", 1017552556)).cljs$core$IFn$_invoke$arity$1(opts))
};
cljs.core.logic.unifier.unify_STAR_ = function() {
  var unify_STAR_ = null;
  var unify_STAR___1 = function(ts) {
    return unify_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY, ts)
  };
  var unify_STAR___2 = function(opts, ts) {
    var init_s = cljs.core.logic.unifier.init_s.call(null, opts, cljs.core.logic.empty_s);
    return cljs.core.logic.unifier._unify_STAR_.call(null, cljs.core.vary_meta.call(null, init_s, cljs.core.assoc, new cljs.core.Keyword(null, "reify-vars", "reify-vars", 4368745730), false), cljs.core.reduce.call(null, function(p1__13649_SHARP_, p2__13650_SHARP_) {
      return cljs.core.logic.unifier._unify_STAR_.call(null, init_s, p1__13649_SHARP_, p2__13650_SHARP_)
    }, cljs.core.butlast.call(null, ts)), cljs.core.last.call(null, ts))
  };
  unify_STAR_ = function(opts, ts) {
    switch(arguments.length) {
      case 1:
        return unify_STAR___1.call(this, opts);
      case 2:
        return unify_STAR___2.call(this, opts, ts)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unify_STAR_.cljs$core$IFn$_invoke$arity$1 = unify_STAR___1;
  unify_STAR_.cljs$core$IFn$_invoke$arity$2 = unify_STAR___2;
  return unify_STAR_
}();
cljs.core.logic.unifier.unifier_STAR_ = function() {
  var unifier_STAR_ = null;
  var unifier_STAR___1 = function(ts) {
    return unifier_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY, ts)
  };
  var unifier_STAR___2 = function(opts, ts) {
    var _unifier_STAR_ = function _unifier_STAR_(s, u, w) {
      var s__$1 = cljs.core.logic.fix_constraints.call(null, cljs.core.logic.unify.call(null, cljs.core.with_meta.call(null, s, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "reify-vars", "reify-vars", 4368745730), false], null)), u, w));
      if(cljs.core.truth_(s__$1)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13665) {
          var vec__13666 = p__13665;
          var sym = cljs.core.nth.call(null, vec__13666, 0, null);
          var var$ = cljs.core.nth.call(null, vec__13666, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, cljs.core.logic._reify.call(null, s__$1, var$)], null)
        }, cljs.core.filter.call(null, function(p__13667) {
          var vec__13668 = p__13667;
          var sym = cljs.core.nth.call(null, vec__13668, 0, null);
          var var$ = cljs.core.nth.call(null, vec__13668, 1, null);
          return cljs.core.not_EQ_.call(null, cljs.core.logic.protocols.walk.call(null, s__$1, var$), var$)
        }, cljs.core.map.call(null, function(sym) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, cljs.core.logic.lvar.call(null, sym, false)], null)
        }, (new cljs.core.Keyword(null, "lvars", "lvars", 1117256714)).cljs$core$IFn$_invoke$arity$1(opts)))))
      }else {
        return null
      }
    };
    var init_s = cljs.core.logic.unifier.init_s.call(null, opts, cljs.core.logic.empty_s);
    return cljs.core.reduce.call(null, function(p1__13651_SHARP_, p2__13652_SHARP_) {
      return _unifier_STAR_.call(null, init_s, p1__13651_SHARP_, p2__13652_SHARP_)
    }, ts)
  };
  unifier_STAR_ = function(opts, ts) {
    switch(arguments.length) {
      case 1:
        return unifier_STAR___1.call(this, opts);
      case 2:
        return unifier_STAR___2.call(this, opts, ts)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unifier_STAR_.cljs$core$IFn$_invoke$arity$1 = unifier_STAR___1;
  unifier_STAR_.cljs$core$IFn$_invoke$arity$2 = unifier_STAR___2;
  return unifier_STAR_
}();
cljs.core.logic.unifier.unify = function() {
  var unify = null;
  var unify__1 = function(ts) {
    return unify.call(null, cljs.core.PersistentArrayMap.EMPTY, ts)
  };
  var unify__2 = function(opts, ts) {
    var opts__$1 = cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "as", "as", 1013907364)) ? cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "as", "as", 1013907364), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13671) {
      var vec__13672 = p__13671;
      var k = cljs.core.nth.call(null, vec__13672, 0, null);
      var v = cljs.core.nth.call(null, vec__13672, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.lvar.call(null, k, false), cljs.core.logic.unifier.prep.call(null, v)], null)
    }, (new cljs.core.Keyword(null, "as", "as", 1013907364)).cljs$core$IFn$_invoke$arity$1(opts)))) : opts;
    return cljs.core.logic.unifier.unify_STAR_.call(null, opts__$1, cljs.core.map.call(null, cljs.core.logic.unifier.prep, ts))
  };
  unify = function(opts, ts) {
    switch(arguments.length) {
      case 1:
        return unify__1.call(this, opts);
      case 2:
        return unify__2.call(this, opts, ts)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unify.cljs$core$IFn$_invoke$arity$1 = unify__1;
  unify.cljs$core$IFn$_invoke$arity$2 = unify__2;
  return unify
}();
cljs.core.logic.unifier.unifier = function() {
  var unifier = null;
  var unifier__1 = function(ts) {
    return unifier.call(null, cljs.core.PersistentArrayMap.EMPTY, ts)
  };
  var unifier__2 = function(opts, ts) {
    var opts__$1 = cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "as", "as", 1013907364)) ? cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "as", "as", 1013907364), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13676) {
      var vec__13677 = p__13676;
      var k = cljs.core.nth.call(null, vec__13677, 0, null);
      var v = cljs.core.nth.call(null, vec__13677, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.logic.lvar.call(null, k, false), cljs.core.logic.unifier.prep.call(null, v)], null)
    }, (new cljs.core.Keyword(null, "as", "as", 1013907364)).cljs$core$IFn$_invoke$arity$1(opts)))) : opts;
    var ts_SINGLEQUOTE_ = cljs.core.map.call(null, cljs.core.logic.unifier.prep, ts);
    var lvars = cljs.core.reduce.call(null, cljs.core.into, cljs.core.map.call(null, function(opts__$1, ts_SINGLEQUOTE_) {
      return function(p1__13673_SHARP_) {
        return(new cljs.core.Keyword("cljs.core.logic.unifier", "lvars", "cljs.core.logic.unifier/lvars", 1819622758)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__13673_SHARP_))
      }
    }(opts__$1, ts_SINGLEQUOTE_), cljs.core.concat.call(null, ts_SINGLEQUOTE_, cljs.core.map.call(null, cljs.core.val, (new cljs.core.Keyword(null, "as", "as", 1013907364)).cljs$core$IFn$_invoke$arity$1(opts__$1)))));
    return cljs.core.logic.unifier.unifier_STAR_.call(null, cljs.core.assoc.call(null, opts__$1, new cljs.core.Keyword(null, "lvars", "lvars", 1117256714), lvars), cljs.core.map.call(null, cljs.core.logic.unifier.prep, ts))
  };
  unifier = function(opts, ts) {
    switch(arguments.length) {
      case 1:
        return unifier__1.call(this, opts);
      case 2:
        return unifier__2.call(this, opts, ts)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unifier.cljs$core$IFn$_invoke$arity$1 = unifier__1;
  unifier.cljs$core$IFn$_invoke$arity$2 = unifier__2;
  return unifier
}();
